{"version":3,"sources":["Frontend/Mainscreen/tekna-logo.jpg","Frontend/textResources.js","Frontend/WelcomeScreen.js","Frontend/Mainscreen/NavBarButton.js","Frontend/Mainscreen/IconLabel.js","Frontend/utils.js","Frontend/Mainscreen/Event.js","Frontend/Mainscreen/MainScreen.js","Frontend/SelectLanguage.js","Frontend/App.js","serviceWorker.js","BackOffice/LoginScreen.js","BackOffice/EditableEvent.js","BackOffice/utils.js","BackOffice/ErrorLabel.js","BackOffice/CreateNewEvent.js","BackOffice/EventManager.js","BackOffice/BackOffice.js","Firestore.js","index.js"],"names":["module","exports","__webpack_require__","p","textResources","WELCOME_NO","WELCOME_EN","WELCOME_SUBTITLE_NO","WELCOME_SUBTITLE_EN","GROUP_PLACEHOLDER_NO","GROUP_PLACEHOLDER_EN","WELCOME_SCREEN_BUTTON_LABEL_NO","WELCOME_SCREEN_BUTTON_LABEL_EN","ERROR_TITLE_NO_NO","ERROR_TITLE_EN_NO","ERROR_DAY_NO","ERROR_START_TIME_NO","ERROR_DESC_NO_NO","ERROR_DESC_EN_NO","ERROR_GROUPS_NO","ERROR_LINK_NO","selectResource","label","lang","key","concat","Frontend_textResources","state","WelcomeScreen","_ref","group","setGroup","setCookie","groupNames","_useContext","useContext","AppContext","Object","slicedToArray","_useState","useState","_useState2","selected","setSelected","groups","map","_ref2","id","label_nor","label_eng","value","sort","a","b","parseInt","customStyles","container","provided","objectSpread","width","marginBottom","option","fontSize","menu","marginTop","currentSelectedLabel","header","resource","subtitle","placeholder","buttonLabel","react_default","createElement","className","src","alt","react_select_browser_esm","inputProps","readOnly","styles","onChange","v","options","isSearchable","isDisabled","length","onClick","path","index_es","icon","faChevronRight","NavBarButton","_ref$target","target","NO","EN","callback","iconColor","day","substring","IconLabel","link","mappedIcon","RegularIcons","SolidIcons","href","weekdays","translateDay","eventTimeComparator","start_time","end_time","groupComparator","selectField","event","field","language","selectTime","_ref3","selectGroups","_ref4","indexOf","join","SubEvent","google_maps","showUrl","startsWith","Event","data","open","setOpen","title","description","from","time","address","googleMaps","linkText","chevron","Mainscreen_IconLabel","subEvents","e","Event_SubEvent","parent_event_id","title_NO","noisyWidth","baseWidth","Math","random","skeleton","bundle_default","height","count","MainScreen","events","Date","getDay","dayToday","setDay","scrollRef","useRef","eventList","filter","_i","_weekdays","console","error","translateDayIdx","day_NO","eventForGroupFilter","Mainscreen_Event","Fragment","navBarButtons","el","Mainscreen_NavBarButton","current","scrollTop","teknaLogo","ref","SelectLanguage","changeLanguage","position","NO_class","EN_class","React","createContext","App","props","firestore","_useCookies","useCookies","_useCookies2","cookies","removeCookie","_useState3","undefined","_useState4","setEvents","_useState5","_useState6","setGroupNames","_useState7","_useState8","setState","useEffect","fetchEvents","fetchGroupNames","Provider","Frontend_SelectLanguage","newLang","Frontend_WelcomeScreen","Mainscreen_MainScreen","Boolean","window","location","hostname","match","LoginScreen","email","setEmail","password","setPassword","setError","handleInput","handleLoginError","code","Form","Field","type","autoComplete","Button","login","CheckLabel","check","faCheck","faTimes","cx","EditableEvent","canManage","deleteCallback","editCallback","setLang","allFieldsEnglish","title_EN","from_EN","day_EN","desc_EN","hasAddress","hasGoogleMaps","EditableEvent_CheckLabel","faTrashAlt","faPen","weekdays_NO","ErrorLabel","textKey","CreateNewEvent","editing","_ref$existingEvent","existingEvent","availableGroups","cancelCallback","submitCallback","updateCallback","_existingEvent$title_","_existingEvent$title_2","_existingEvent$desc_N","desc_NO","_existingEvent$desc_E","_existingEvent$google","_existingEvent$start_","_existingEvent$end_ti","_existingEvent$day_NO","_existingEvent$linkTe","linkText_NO","_existingEvent$linkTe2","linkText_EN","titleNO","setTitleNO","titleEN","setTitleEN","descNO","setDescNO","descEN","setDescEN","_useState9","_useState10","setAddress","_useState11","_useState12","setGoogleMaps","_useState13","_useState14","linkTextNO","setLinkTextNO","_useState15","_useState16","linkTextEN","setLinkTextEN","_useState17","_useState18","setLink","_useState19","split","_useState20","startTimeHour","setStartTimeHour","_useState21","_useState22","startTimeMinute","setStartTimeMinute","_useState23","_useState24","endTimeHour","setEndTimeHour","_useState25","_useState26","endTimeMinute","setEndTimeMinute","_useState27","_useState28","setGroups","_useState29","_useState30","_useState31","timeStart","timeEnd","_useState32","errors","setErrors","_useState33","_useState34","submitting","setSubmitting","startTimeMinuteRef","endTimeMinuteRef","redStar","style","color","allGroupsSelected","generateGoogleMaps","input","toLowerCase","setTime","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","c","err","return","max","focus","onSubmit","errs","keys","reduce","acc","validateFieldsAndSetErrors","isMentorBoard","from_NO","loading","Group","grouped","BackOffice_ErrorLabel","Input","primary","TextArea","desc","disabled","content","labelPosition","Or","text","rel","Checkbox","g","toConsumableArray","handleCheckbox","checked","AddEventButton","handleClick","EventManager","user","_ref2$events","createNew","setCreateNew","editEvent","setEditEvent","eventToBeDeleted","setEventToBeDeleted","fetchGroupsThatUserAdministrates","uid","filteredEvents","g1","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","eventFilter","groupedEvents","forEach","push","groupEventsByDay","BackOffice_CreateNewEvent","scrollTo","addEvent","then","updateEvent","secondary","removeEvent","Loader","active","EventManager_AddEventButton","dayEvents","BackOffice_EditableEvent","curr","logout","BackOffice","setUser","loadingUser","setLoadingUser","registerForAuthUpdates","Dimmer","BackOffice_LoginScreen","BackOffice_EventManager","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","Firebase","classCallCheck","this","app","initializeApp","db","auth","setEventsCallback","_this","collection","onSnapshot","snapshot","docs","doc","subSnapshot","d","subEvent","subId","log","setGroupNamesCallback","errorCallback","signInWithEmailAndPassword","catch","signOut","loadingCallback","onAuthStateChanged","userId","get","exists","add","createdBy","event_id","delete","set","ReactDOM","render","react_router_dom","basename","process","react_router","exact","component","src_BackOffice_BackOffice","es6","Frontend_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.645f41ec.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/tekna-logo.04ca97dd.jpg\";","const textResources = {\n    /** Welcome screen **/\n    'WELCOME_NO': 'Velkommen!',\n    'WELCOME_EN': 'Welcome!',\n    'WELCOME_SUBTITLE_NO': 'For å kunne gi deg relevant informasjon, trenger vi å vite hvilken gruppe du tilhører. Du kan gå tilbake og endre dette senere!',\n    'WELCOME_SUBTITLE_EN': 'To provide you with relevant information, we need to know which group you belong to. You can go back and change this later!',\n    'GROUP_PLACEHOLDER_NO': 'Velg gruppe...',\n    'GROUP_PLACEHOLDER_EN': 'Select group...',\n    'WELCOME_SCREEN_BUTTON_LABEL_NO': 'Jeg er klar',\n    'WELCOME_SCREEN_BUTTON_LABEL_EN': 'I\\'m ready',\n    \n    /** Form error labels **/\n    'ERROR_TITLE_NO_NO': 'Du må fylle inn norsk tittel',\n    'ERROR_TITLE_EN_NO': 'Du må fylle inn engelsk tittel',\n    'ERROR_DAY_NO': 'Du må velge en dag',\n    'ERROR_START_TIME_NO': 'Velg starttidspunkt (hh:mm)',\n    'ERROR_DESC_NO_NO': 'Du må fylle inn norsk beskrivelse',\n    'ERROR_DESC_EN_NO': 'Du må fylle inn engelsk beskrivelse',\n    'ERROR_GROUPS_NO': 'Du må velge gruppe(r) arrangementet gjelder for',\n    'ERROR_LINK_NO': 'Du kan ikke ha lenketekst uten lenke',\n}\n\nconst selectResource = (label, lang) => {\n    const key = `${label}_${lang}`;\n    if (key in textResources) \n        return textResources[key]\n    else \n        return label\n}\n\nexport default (label, state) => {\n    if (!state || !state.lang) {\n        return selectResource(label, 'NO')\n    }\n    else {\n        return selectResource(label, state.lang)\n    }  \n}","import React, { useState, useContext } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faChevronRight  } from '@fortawesome/free-solid-svg-icons';\nimport { AppContext } from './App';\nimport resource from './textResources';\nimport Select from 'react-select';\n\nconst WelcomeScreen = ({ group, setGroup, setCookie, groupNames }) => {\n    const [ state ] = useContext(AppContext);\n    const [ selected, setSelected ] = useState(group);\n    const lang = state.lang ? state.lang : 'NO'\n    const groups = groupNames \n        ? groupNames.map(\n            ({ id, label_nor, label_eng }) => (\n                {   value: id, \n                    label: lang === 'NO' ? label_nor : label_eng,\n                    label_nor: label_nor, \n                    label_eng: label_eng })\n                ).sort((a, b) => parseInt(a.value) - parseInt(b.value)) \n        : [];\n    \n    const submit = () => {\n        if (selected) {\n            setGroup(selected);\n            setCookie('group', selected, { path: '/'});\n        }\n    }\n\n    const customStyles = {\n        container: provided => ({\n                ...provided,\n                width: '100%',\n                marginBottom: 20,\n        }),\n        option: provided => ({\n            ...provided,\n            fontSize: '0.8rem',\n        }),\n        menu: provided => ({\n            ...provided,\n            marginTop: 0,\n        })\n    }\n\n    const currentSelectedLabel = selected && { label: (lang === 'NO' ? selected.label_nor : selected.label_eng) };\n    const header = resource('WELCOME', state);\n    const subtitle = resource('WELCOME_SUBTITLE', state);\n    const placeholder = resource('GROUP_PLACEHOLDER', state);\n    const buttonLabel = resource('WELCOME_SCREEN_BUTTON_LABEL', state);\n\n    return (\n        <div className=\"welcome-screen\">\n            <div>\n                <h1 className=\"welcome-screen-main-title\"> { header } </h1>\n                <h3 className=\"welcome-screen-sub-title\"> { subtitle } </h3>\n            </div>\n            <img className=\"person-img\" src=\"https://image.flaticon.com/icons/svg/145/145867.svg\" alt=\"person\" />\n            <div className=\"dropdown-wrapper\">\n                <Select \n                    inputProps={{ readOnly:true }}\n                    placeholder={ placeholder } \n                    styles={ customStyles } \n                    value={ currentSelectedLabel } \n                    onChange={(v) => setSelected(v)} \n                    options={ groups } \n                    isSearchable={ false }\n                    isDisabled={groups.length === 0}\n                />\n                <div className=\"ready-button\" onClick={submit}>\n                    <p className=\"ready-button-text\"> { buttonLabel } <FontAwesomeIcon icon={faChevronRight} /> </p>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default WelcomeScreen;","import React from 'react';\n\nconst NavBarButton = ({target: { id, NO, EN }, lang, callback, selected}) => {\n    const iconColor = selected ? 'navbar-selected' : '';\n    const day = lang === 'NO' ? NO : EN;\n    \n    return (\n        <div className=\"navbar-button\" onClick={() => callback(id)}>\n            <div className={`${iconColor} navbar-button-icon`} />\n            <label> { day.substring(0,3) } </label>\n        </div>\n    );\n};\n\nexport default NavBarButton;","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport * as RegularIcons from '@fortawesome/free-regular-svg-icons';\nimport * as SolidIcons from '@fortawesome/free-solid-svg-icons';\n\nconst IconLabel = ({icon, label, link}) => {\n    const mappedIcon = icon in RegularIcons ? RegularIcons[icon] : SolidIcons[icon];\n\n    return (\n        <div className=\"icon-label-wrapper\">\n            <FontAwesomeIcon className=\"event-icon\" icon={mappedIcon} />\n            { !link && <label className=\"event-icon-label\"> { label } </label> }\n            { link && <a className=\"icon-link event-icon-label\" href={link}> { label } </a>}\n        </div>\n    );\n};\n\nexport default IconLabel;","export const weekdays = [ \n    { id: 0, NO: 'mandag', EN: 'monday' },\n    { id: 1, NO: 'tirsdag', EN: 'tuesday' },\n    { id: 2, NO: 'onsdag', EN: 'wednesday' },\n    { id: 3, NO: 'torsdag', EN: 'thursday' },\n    { id: 4, NO: 'fredag', EN: 'friday' },\n    { id: 5, NO: 'lørdag', EN: 'saturday' },\n    { id: 6, NO: 'søndag', EN: 'sunday' }\n];\n\nexport const translateDayIdx = day => {\n    for (const { id, NO, EN } of weekdays) {\n        if (day === NO || day === EN) \n            return id;\n    }\n    \n    console.error(`Error: Could not translate day ${day} to index`);\n    return -1;\n}\n\nexport const translateDay = day => {\n    switch(day) {\n        case 'mandag': return 'monday';\n        case 'tirsdag': return 'tuesday';\n        case 'onsdag': return 'wednesday';\n        case 'torsdag': return 'thursday';\n        case 'fredag': return 'friday';\n        case 'lørdag': return 'saturday';\n        case 'søndag': return 'sunday';\n        default: return day;\n    }\n}\n\nexport const eventTimeComparator = (a, b) => {\n    if (!a.start_time && !b.start_time) return 0;\n    if (!a.start_time) return -1;\n    if (!b.start_time) return 1;\n\n    if (a.start_time === b.start_time) {\n        if (a.end_time && !b.end_time) return -1;\n        else if (!a.end_time && b.end_time) return 1;\n        else if (!a.end_time && !b.end_time) return 0;\n        else return a.end_time > b.end_time ? 1 : (a.end_time < b.end_time ? -1 : 0);\n    } else {\n        return a.start_time > b.start_time ? 1 : -1;\n    }\n}\n\nexport const groupComparator = (a, b) => {\n    if (a === b) return 0;\n    if (a === 'all') return -1;\n    if (b === 'all') return 1;\n    return parseInt(a) - parseInt(b);\n}\n\nexport const dayToday = () => {\n    const day = new Date().getDay() - 1;\n    return day === -1 ? 6 : day;\n}\n\nexport const selectField = (event, field, lang) => {\n    const language = lang ? lang : 'NO';\n    const key = `${field}_${language}`\n\n    if (!event[key]) return '';\n    else if (field === 'from') return `${language === 'NO' ? 'Fra' : 'From'} ${event[key]}`\n    else return event[key];\n}\n\nexport const selectTime = ({ start_time, end_time }) => {\n    if (!start_time) return '';\n    if (!end_time) return start_time;\n\n    return `${start_time} – ${end_time}`;\n}\n\nexport const selectGroups = ({ groups }, lang) => {\n    const language = lang ? lang : 'NO';\n    if (groups.indexOf('all') >= 0) return language === 'NO' ? 'Alle grupper' : 'All groups';\n    \n    const prefix = language === 'NO' ? 'Gruppe ' : 'Group ';\n    return `${prefix} ${groups.join(', ')}`;   \n}","import React, { useContext, useState } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport * as SolidIcons from '@fortawesome/free-solid-svg-icons';\nimport IconLabel from './IconLabel';\nimport { AppContext } from '../App';\nimport { eventTimeComparator, selectField, selectTime, selectGroups } from '../utils';\nimport './event.scss';\n\n/****************************/\n/**** SubEvent component ****/\n/****************************/\nconst SubEvent = ({ event, event: { google_maps }, lang }) => {\n    const showUrl = google_maps && google_maps.startsWith('https');\n\n    return (\n        <div className=\"sub-event\">\n            <div className=\"sub-event-time-and-title\">\n                <p className=\"sub-event-time\"> { selectTime(event) } </p>\n                <p className=\"sub-event-title\"> { selectField(event, 'title', lang ) } </p>\n            </div>\n            { showUrl && <a className=\"sub-event-address\" href={google_maps}> { lang === 'NO' ? '(kart)' : '(map)' } </a> }\n        </div>\n    );\n}\n\n/*****************************/\n/****** Event component ******/\n/*****************************/\nconst Event = ({ data }) => {\n    const event = data;\n    const [ open, setOpen ] = useState(true);\n    const [ state ] = useContext(AppContext);\n    const lang = state.lang;\n    const title = selectField(event, 'title', lang);\n    const description = selectField(event, 'desc', lang);\n    const from = selectField(event, 'from', lang)\n    const time = selectTime(event);\n    const groups = selectGroups(event, lang);\n    const address = data.address;\n    const googleMaps = data.google_maps;\n    const link = data.link;\n    const linkText = selectField(event, 'linkText', lang);\n    const chevron = open ? SolidIcons[\"faChevronUp\"] : SolidIcons[\"faChevronDown\"];\n\n    return (\n        <div className=\"event-wrapper\">\n            <div className=\"event\">\n                <label className=\"event-title\"> { title } </label>\n                { time && <IconLabel icon=\"faClock\" label={time} />}\n                { open && address && <IconLabel icon=\"faMap\" label={address} link={googleMaps ? googleMaps : null}/> }\n                { open && data.groups && <IconLabel icon=\"faUser\" label={groups} /> }\n                { open && from && <IconLabel icon=\"faComment\" label={from} /> }\n                { open && link && linkText && <IconLabel icon=\"faLink\" label={linkText} link={link}/> }\n                { open && description && <p className=\"event-description\"> { description } </p> }\n                { open && event.subEvents && event.subEvents.length > 0 && ( \n                    <div className=\"sub-event-wrapper\">\n                        { event.subEvents\n                            .sort(eventTimeComparator)\n                            .map(e => <SubEvent key={`${e.parent_event_id}-${e.title_NO}`} event={e} lang={lang}/>) }\n                    </div>\n                )}\n                <div className=\"event-chevron\" onClick={() => setOpen(!open)}>\n                    <FontAwesomeIcon icon={chevron} />\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Event;","import React, { useState, useContext, useRef } from 'react';\nimport NavBarButton from './NavBarButton';\nimport { AppContext } from '../App';\nimport Event from './Event';\nimport Skeleton from 'react-loading-skeleton';\nimport { weekdays, translateDayIdx, dayToday, eventTimeComparator} from '../utils'\nimport teknaLogo from './tekna-logo.jpg';\nimport './Mainscreen.scss';\n\nconst noisyWidth = baseWidth => baseWidth + (-10) + Math.random()*25\n\nconst skeleton = (\n    <div className=\"skeleton-wrapper\">\n        <Skeleton key={'skel-1'} height={24} width={noisyWidth(170)}/>\n        <div className=\"icon-label-skeletons\">\n            <Skeleton key={'skel-2'} height={13} width={noisyWidth(110)}/>\n            <Skeleton key={'skel-3'} height={13} width={noisyWidth(210)}/>\n            <Skeleton key={'skel-4'} height={13} width={noisyWidth(100)}/>\n            <Skeleton key={'skel-5'} height={13} width={noisyWidth(155)}/>\n        </div>,\n        <Skeleton key={'skel-6'} height={13} width={noisyWidth(275)} count={3} />\n    </div>\n)\n\nconst eventForGroupFilter = (event, group) => {\n    if (!group || !group.value) return false; //If group is not set, show no events.\n    if (!event.groups || event.groups.indexOf('all') >= 0) return true;\n    return event.groups.indexOf(group.value) >= 0; \n}\n\nconst MainScreen = ({ group, events }) => {\n    const [ day, setDay ] = useState(dayToday())\n    const [ state ] = useContext(AppContext);\n    const TEKNA_DAY = 4; // friday\n    const scrollRef = useRef();\n    const eventList = events\n        ? events\n            .filter(e => translateDayIdx(e.day_NO) === day)\n            .filter(e => eventForGroupFilter(e, group))\n            .sort(eventTimeComparator)\n            .map(e => <Event key={e.id} data={e} />)\n        : <> { skeleton } { skeleton } </>;\n\n    const navBarButtons = weekdays.map(\n        el => <NavBarButton key={el.NO} lang={state.lang} target={el} callback={(day) => { setDay(day); scrollRef.current.scrollTop = 0; }} selected={day === el.id} />\n    )\n\n    return (\n        <div className=\"mainscreen-wrapper\">\n            <div className=\"mainscreen-header\"> \n                { <div className=\"tekna-container\"> { day === TEKNA_DAY && <img className=\"header-tekna-logo\" src={teknaLogo} alt=\"Tekna logo\" /> } </div> }\n                { <label> { state.lang === 'NO' ? group.label_nor : group.label_eng } </label> }\n            </div>\n            <div className=\"mainscreen-event-container\" ref={scrollRef}>\n                { eventList }\n                { day === TEKNA_DAY && <img className=\"event-list-tekna-logo\" src={teknaLogo} alt=\"Tekna logo\"/>}\n            </div>\n            <div className=\"mainscreen-navbar-container\">\n                { navBarButtons }\n            </div>\n        </div>\n    );\n};\n\nexport default MainScreen;","import React from 'react';\n\nconst SelectLanguage = ({ state: { lang }, changeLanguage, position }) => {\n    const NO_class = lang === 'NO' ? 'selected-lang' : '';\n    const EN_class = lang === 'EN' ? 'selected-lang' : '';\n\n    return (\n        <div className={`${position !== 'relative' ? 'language-pos-absolute' : ''} language-select`} onClick={changeLanguage}>\n            <p className={NO_class}> NO </p> <p>|</p> <p className={EN_class}> EN </p>\n        </div>\n    );\n};\n\nexport default SelectLanguage;","import React, { useState, useEffect } from 'react';\nimport { useCookies } from 'react-cookie';\nimport WelcomeScreen from './WelcomeScreen';\nimport MainScreen from './Mainscreen/MainScreen';\nimport SelectLanguage from './SelectLanguage';\nimport './App.scss';\n\nconst AppContext = React.createContext();\n\nfunction App(props) {\n  const { firestore } = props;\n  const [ cookies, setCookie, removeCookie ] = useCookies(['group', 'language']);\n  const [ group, setGroup ] = useState(cookies.group)\n  const [ events, setEvents ] = useState(undefined)\n  const [ groupNames, setGroupNames ] = useState(undefined)\n  const [ state, setState ] = useState({ lang: cookies.language ? cookies.language : 'NO' });\n  const changeLanguage = () => {\n    const newLang = state.lang === 'NO' ? 'EN' : 'NO';\n    setCookie('language', newLang)\n    setState({ ...state, lang: newLang });\n  }\n\n  useEffect(() => {\n    firestore.fetchEvents(setEvents);\n    firestore.fetchGroupNames(setGroupNames)\n  }, [firestore, setEvents, setGroupNames])\n  \n  return (\n    <AppContext.Provider value={[ state, setState ]}>\n      <div className=\"app\">\n        {  <SelectLanguage state={state} changeLanguage={changeLanguage} /> }\n        { !group && <WelcomeScreen groupNames={groupNames} setGroup={setGroup} setCookie={setCookie} /> }\n        { group && <MainScreen events={events} group={group} setGroup={setGroup} removeCookie={removeCookie}/> }\n      </div>\n    </AppContext.Provider>\n  );\n}\n\nexport { AppContext };\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { useState } from 'react';\nimport { Form, Button } from 'semantic-ui-react';\nimport './loginScreen.scss';\n\nconst LoginScreen = ({ firestore }) => {\n    const [ email, setEmail ] = useState('');\n    const [ password, setPassword ] = useState('');\n    const [ error, setError ] = useState('');\n\n    const handleInput = (event, callback) => {\n        callback(event.target.value);\n    }\n\n    const handleLoginError = ({ code }) => {\n        if (code === 'auth/user-not-found') {\n            setError(\"Denne brukeren finnes ikke. Prøv igjen!\")\n        }\n    }\n\n    const handleSubmit = () => {\n        setError('');\n        \n        if (email && password) {\n            firestore.login(email, password, handleLoginError);\n        } else {\n            setError('Fyll inn brukernavn og passord!');\n        }\n    }\n\n    return (\n        <div className=\"login-screen\">\n            <Form className=\"login-form\">\n                { error && <label className=\"login-error-label\"> { error } </label> }\n                <Form.Field>\n                    <label> Epost </label>\n                    <input \n                        value={email} \n                        onChange={e => handleInput(e, setEmail)} \n                        type=\"email\"\n                        autoComplete=\"email\"\n                        />\n                </Form.Field>\n                <Form.Field>\n                    <label> Passord </label>\n                    <input \n                        value={password} \n                        onChange={e => handleInput(e, setPassword)} \n                        type=\"password\"\n                        autoComplete=\"current-password\" \n                        />\n                </Form.Field>\n                <Button className=\"login-button\" onClick={handleSubmit}> Logg inn </Button>\n            </Form>\n        </div>\n    );\n};\n\nexport default LoginScreen;\n","import React, { useState } from 'react';\nimport { selectField, selectTime, selectGroups } from '../Frontend/utils';\nimport SelectLanguage from '../Frontend/SelectLanguage';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCheck, faTimes, faTrashAlt, faPen  } from '@fortawesome/free-solid-svg-icons';\n\nconst CheckLabel = ({ check, label }) => {\n    const icon = check ? faCheck : faTimes;\n    const cx = [ 'check-label-wrapper', check ? 'check-green' : 'times-red'].join(' ')\n\n    return (\n        <div className={cx}>\n            <FontAwesomeIcon icon={icon} />\n            <label> { label } </label>\n        </div>\n    );\n}\n\nconst EditableEvent = ({ event, canManage, deleteCallback, editCallback }) => {\n    let [ lang, setLang ] = useState('NO');\n    const changeLanguage = () => setLang(lang === 'NO' ? 'EN' : 'NO')\n    \n    const title = selectField(event, 'title', lang) ? selectField(event, 'title', lang) : `Tittel mangler (${lang})`\n    const time = selectTime(event);\n    const groups = selectGroups(event, lang);\n    const allFieldsEnglish = event.title_EN && event.from_EN && event.day_EN && event.desc_EN;\n    const hasAddress = event.address && event.address.length > 0;\n    const hasGoogleMaps = event.google_maps && event.google_maps.startsWith('https');\n\n    return (\n        <div className='editable-event-wrapper'>\n            <div className='title-language-wrapper'>\n                <label className='editable-event-title'>{ title }</label>\n                <SelectLanguage state={{lang: lang}} changeLanguage={changeLanguage} position='relative'/>\n            </div>\n            <label className='editable-event-info-label'>{ groups }</label>\n            <label className='editable-event-info-label'>{ time }</label>\n            { event.address && <label className='editable-event-info-label'> Addresse: { event.address }</label> }\n            <div className='flex-row'>\n                { hasAddress && <CheckLabel check={hasGoogleMaps} label={hasGoogleMaps ? 'Har google maps' : 'Mangler google maps'} /> }\n                { !hasAddress && <CheckLabel check={hasAddress} label='Mangler adresse' /> }\n                { !allFieldsEnglish && <CheckLabel check={allFieldsEnglish} label='Mangler oversettelse' /> }\n                { canManage && <FontAwesomeIcon className=\"trash-icon\" icon={faTrashAlt} onClick={() => deleteCallback(event.id) } /> } \n                { canManage && <FontAwesomeIcon className=\"pen-icon\" icon={faPen} onClick={() => editCallback(event.id) } /> } \n            </div>\n        </div>\n    );\n};\n\nexport default EditableEvent;","import { eventTimeComparator } from \"../Frontend/utils\";\n\nexport const eventFilter = (group, e) => {\n    if (e.groups.indexOf('all') >= 0 || group === 'all') return true;\n\n    for (const g1 of group) {\n        for (const g2 of e.groups) {\n            if (g1 === g2) return true;\n        }\n    }\n}\n\nexport const weekdays_NO = ['mandag', 'tirsdag', 'onsdag', 'torsdag', 'fredag', 'lørdag', 'søndag'];\n\nexport const groupEventsByDay = events => {\n    const grouped = {}\n    weekdays_NO.forEach(day => grouped[day] = [])\n    events.forEach(e => grouped[e.day_NO].push(e));\n    Object.keys(grouped).forEach(key => grouped[key].sort(eventTimeComparator));\n\n    return grouped;\n}\n","import React from 'react';\nimport resource from '../Frontend/textResources';\n\nconst ErrorLabel = ({ textKey }) => {\n    return (\n        <div className=\"error-label\">\n            { resource(textKey) }\n        </div>\n    );\n};\n\nexport default ErrorLabel;    ","import React, { useState, useRef } from 'react';\nimport { Form, TextArea, Button, Input, Checkbox } from 'semantic-ui-react';\nimport { translateDay, groupComparator } from '../Frontend/utils';\nimport ErrorLabel from './ErrorLabel';\nimport './createNewEvent.scss';\n\nconst CreateNewEvent = ({ editing, existingEvent = {}, availableGroups, cancelCallback, submitCallback, updateCallback }) => {\n    const { title_NO = '', title_EN = '', desc_NO = '', desc_EN = '', google_maps = '', start_time = '', end_time = '', day_NO = '', linkText_NO='', linkText_EN=''} = existingEvent;\n    const [ titleNO, setTitleNO ] = useState(title_NO);\n    const [ titleEN, setTitleEN ] = useState(title_EN);\n    const [ descNO, setDescNO ] = useState(desc_NO);\n    const [ descEN, setDescEN ] = useState(desc_EN);\n    const [ address, setAddress ] = useState(existingEvent.address ? existingEvent.address : '');\n    const [ googleMaps, setGoogleMaps ] = useState(google_maps);\n    const [ linkTextNO, setLinkTextNO ] = useState(linkText_NO);\n    const [ linkTextEN, setLinkTextEN ] = useState(linkText_EN);\n    const [ link, setLink ] = useState(existingEvent.link ? existingEvent.link : '');\n    const [ startTimeHour, setStartTimeHour ] = useState(start_time.length === 5 ? start_time.split(':')[0] : '')\n    const [ startTimeMinute, setStartTimeMinute ] = useState(start_time.length === 5 ? start_time.split(':')[1] : '')\n    const [ endTimeHour, setEndTimeHour ] = useState(end_time.length === 5 ? end_time.split(':')[0] : '')\n    const [ endTimeMinute, setEndTimeMinute ] = useState(end_time.length === 5 ? end_time.split(':')[1] : '')\n    const [ groups, setGroups ] = useState(existingEvent.groups ? existingEvent.groups : []);\n    const [ day, setDay ] = useState(day_NO)\n    const [ errors, setErrors ] = useState({ titleNO: false, titleEN: false, descNO: false, descEN: false, day: false, address: false, timeStart: false, timeEnd: false, groups: false })\n    const [ submitting, setSubmitting ] = useState(false);\n\n    const startTimeMinuteRef = useRef(null);\n    const endTimeMinuteRef = useRef(null);\n\n    const redStar = <span style={{ color: 'red' } }>*</span>\n    const allGroupsSelected = groups.indexOf('all') >= 0;\n\n    const generateGoogleMaps = input => {\n        if (input.length < 3) { setGoogleMaps(''); return; }\n        if (input.toLowerCase().indexOf('bergen') === -1) { \n             input = input + ', Bergen' \n        }\n\n        setGoogleMaps(`https://www.google.com/maps/search/?api=1&query=${input}`);\n    }\n\n    const setTime = (event, field) => {\n        const input = event.target.value;\n        for (const c of input.split('')) { if (c < '0' || c > '9') return }\n        const max = field === 'startTimeHour' || field === 'endTimeHour' ? 23 : 59;\n        if (input.length > 2 || parseInt(input) > max) return;\n\n        if (field === 'startTimeHour') { \n            if (input.length === 2) startTimeMinuteRef.current.focus();\n            setStartTimeHour(input);\n        }\n        if (field === 'startTimeMinute') setStartTimeMinute(input);\n        if (field === 'endTimeHour') {\n            if (input.length === 2) endTimeMinuteRef.current.focus();\n            setEndTimeHour(input);\n        }\n        if (field === 'endTimeMinute') setEndTimeMinute(input);\n    }\n\n    const handleCheckbox = group => {\n        setErrors({ ...errors, groups: false })\n        if (group === 'all' && groups.indexOf('all') === -1) { \n            setGroups(['all']);\n        } else if (groups.indexOf(group) >= 0) {\n            setGroups(groups.filter(g => g !== group));\n        } else {\n            setGroups([ group, ...groups ]);\n        }\n    }\n\n    const validateFieldsAndSetErrors = callback => {\n        const errs = {\n            titleNO: titleNO === '',\n            titleEN: titleEN === '',\n            descNO: descNO === '',\n            descEN: descEN === '',\n            timeStart: startTimeHour.length !== 2 || startTimeMinute.length !== 2,\n            timeEnd: endTimeHour !== '' && (endTimeHour.length !== 2 || endTimeMinute.length !== 2),\n            day: day === '' || ['mandag', 'tirsdag', 'onsdag', 'torsdag', 'fredag', 'lørdag', 'søndag'].indexOf(day) === -1,\n            link: (linkTextEN || linkTextNO) && !link,\n            groups: groups.length === 0,\n        };\n\n        callback(errs);\n        return !Object.keys(errs).reduce((acc, key) => errs[key] || acc, false);\n    }\n\n    const submit = () => {\n        if (validateFieldsAndSetErrors(setErrors)) {\n            setSubmitting(true);\n            const isMentorBoard = availableGroups.indexOf('all') >= 0;\n            const event = {\n                title_NO: titleNO,\n                title_EN: titleEN,\n                desc_NO: descNO, \n                desc_EN: descEN,\n                day_NO: day,\n                day_EN: translateDay(day),\n                from_NO: isMentorBoard ? 'fadderstyret' : 'gruppeleder',\n                from_EN: isMentorBoard ? 'the mentor board' : 'group leader',\n                start_time: `${startTimeHour}:${startTimeMinute}`,\n                groups: groups.sort(groupComparator),\n            };\n\n            if (address.length >= 3) { event.address = address; }\n            if (endTimeHour.length === 2 && endTimeMinute.length === 2) { event.end_time = `${endTimeHour}:${endTimeMinute}` }\n            if (googleMaps && googleMaps.startsWith('https://')) { event.google_maps = googleMaps; }\n            if (link) {\n                event.link = link;\n                if (linkTextNO) event.linkText_NO = linkTextNO;\n                if (linkTextEN) event.linkText_EN = linkTextEN;\n            }\n            \n            if (editing) {\n                updateCallback({ ...event, id: existingEvent.id });\n            } else {\n                submitCallback(event);\n            }\n        }\n    }\n\n    return (\n        <div className=\"flex-column create-event-wrapper\">\n            <div className=\"create-event-header\"> \n                Legg til et nytt event. Felter merket med {redStar} er obligatoriske. \n            </div>\n            <Form className=\"create-event-form\" onSubmit={submit} loading={!availableGroups || submitting}>\n\n                { /** TITTEL  **/ }\n                <Form.Group grouped className=\"form-input-group\">\n                    <label className=\"form-field-header\"> Tittel {redStar} </label>\n                    <Form.Field error={errors.titleNO}>\n                        <label className=\"form-field-title\"> Norsk </label>\n                        { errors.titleNO && <ErrorLabel textKey={'ERROR_TITLE_NO'} /> }\n                        <Input \n                            value={titleNO} \n                            onChange={e => { setTitleNO(e.target.value); setErrors({ ...errors, titleNO: false }) }} \n                            type=\"text\"\n                            autoComplete=\"off\"\n                        />\n                    </Form.Field>\n                    <Form.Field error={errors.titleEN}>\n                        <label className=\"form-field-title\"> Engelsk </label>\n                        { errors.titleEN && <ErrorLabel textKey={'ERROR_TITLE_EN'} /> }\n                        <input \n                            value={titleEN} \n                            onChange={e => { setTitleEN(e.target.value); setErrors({ ...errors, titleEN: false }) }}  \n                            type=\"text\"\n                            autoComplete=\"off\"\n                        />\n                    </Form.Field>\n                </Form.Group>\n\n                { /** DAG **/ }\n                <Form.Field error={errors.day}>\n                    <label className=\"form-field-header\"> Dag { redStar } </label>\n                    { errors.day && <ErrorLabel textKey={'ERROR_DAY'} /> }\n                    <Button.Group className=\"full-width\" >\n                        <Button primary={day === 'mandag'} type='button' onClick={() => { setDay('mandag'); setErrors({ ...errors, day: false }) }}> Man </Button>\n                        <Button primary={day === 'tirsdag'} type='button' onClick={() => { setDay('tirsdag'); setErrors({ ...errors, day: false }) }}> Tirs </Button>\n                        <Button primary={day === 'onsdag'} type='button' onClick={() => { setDay('onsdag'); setErrors({ ...errors, day: false })}}> Ons </Button>\n                    </Button.Group>\n                    <Button.Group className=\"full-width margin-top-small\">\n                        <Button primary={day === 'torsdag'} type='button' onClick={() => { setDay('torsdag'); setErrors({ ...errors, day: false })}}> Tors </Button>\n                        <Button primary={day === 'fredag'} type='button' onClick={() => { setDay('fredag'); setErrors({ ...errors, day: false })}}> Fre </Button>\n                        <Button primary={day === 'lørdag'} type='button' onClick={() => { setDay('lørdag'); setErrors({ ...errors, day: false })}}> Lør </Button>\n                    </Button.Group>\n                    <Button.Group className=\"full-width margin-top-small\">\n                        <Button primary={day === 'søndag'} type='button' onClick={() => { setDay('søndag'); setErrors({ ...errors, day: false })}}> Søndag </Button>\n                    </Button.Group>\n\n                </Form.Field>\n\n                { /** TID **/ }\n                <Form.Group grouped className=\"form-input-group\">\n                    <label className=\"form-field-header\"> Tid </label>\n                    <div className=\"flex-row\">\n                        <div className=\"flex-column\">\n                            <div className=\"form-field-title\"> Start {redStar} </div>\n                            { errors.timeStart && <ErrorLabel textKey={'ERROR_START_TIME'} /> }\n                            <div className=\"flex-row\">\n                                <Form.Field error={errors.timeStart}>\n                                    <input \n                                        className=\"time-input\"\n                                        placeholder=\"00\"\n                                        value={startTimeHour} \n                                        onChange={e => { setTime(e, 'startTimeHour'); setErrors({ ...errors, timeStart: false })} }\n                                        type=\"text\"\n                                        autoComplete=\"off\"\n                                    />\n                                </Form.Field>\n                                <div className=\"time-separator flex-row align-center justify-center\">:</div>\n                                <Form.Field error={errors.timeStart}>\n                                    <input \n                                        ref={startTimeMinuteRef}\n                                        className=\"time-input\"\n                                        placeholder=\"00\"\n                                        value={startTimeMinute} \n                                        onChange={e => { setTime(e, 'startTimeMinute'); setErrors({ ...errors, timeStart: false })} }\n                                        type=\"text\"\n                                        autoComplete=\"off\"\n                                    />\n                                </Form.Field>\n                            </div>\n                        </div>\n                        <div className=\"flex-column margin-left-large\">\n                            <div className=\"form-field-title\"> Slutt </div>\n                            <div className=\"flex-row\">\n                                <Form.Field error={errors.timeEnd}>\n                                    <input \n                                        className=\"time-input\"\n                                        placeholder=\"00\"\n                                        value={endTimeHour} \n                                        onChange={e => { setTime(e, 'endTimeHour'); setErrors({ ...errors, timeEnd: false })} }\n                                        type=\"text\"\n                                        autoComplete=\"off\"\n                                    />\n                                </Form.Field>\n                                <div className=\"time-separator flex-row align-center justify-center\">:</div>\n                                <Form.Field error={errors.timeEnd}>\n                                    <input \n                                        ref={endTimeMinuteRef}\n                                        className=\"time-input\"\n                                        placeholder=\"00\"\n                                        value={endTimeMinute} \n                                        onChange={e => { setTime(e, 'endTimeMinute'); setErrors({ ...errors, timeEnd: false })} }\n                                        type=\"text\"\n                                        autoComplete=\"off\"\n                                    />\n                                </Form.Field>\n                            </div>\n                        </div>\n                    </div>\n                </Form.Group>\n\n                { /** BESKRIVELSE  **/ }\n                <Form.Group grouped className=\"form-input-group\">\n                    <label className=\"form-field-header\"> Beskrivelse {redStar} </label>\n                    <Form.Field error={errors.descNO}>\n                        <label className=\"form-field-title\"> Norsk </label>\n                        { errors.descNO && <ErrorLabel textKey={'ERROR_DESC_NO'} /> }\n                        <TextArea error={errors.desc} value={descNO}  onChange={e => { setDescNO(e.target.value); setErrors({ ...errors, descNO: false }) }}/>\n                    </Form.Field>\n                    <Form.Field error={errors.descEN}>\n                        <label className=\"form-field-title\"> Engelsk </label>\n                        { errors.descEN && <ErrorLabel textKey={'ERROR_DESC_EN'} /> }\n                        <TextArea error={errors.desc} value={descEN} onChange={e => { setDescEN(e.target.value); setErrors({ ...errors, descEN: false }) }}/>\n                    </Form.Field>\n                </Form.Group>\n\n                { /** STED  **/ }\n                <Form.Group grouped className=\"form-input-group\">\n                    <Form.Field>\n                        <label className=\"form-field-header\"> Adresse </label>\n                        <input \n                            value={address} \n                            onChange={e => {\n                                    setAddress(e.target.value);\n                                    if (googleMaps) { generateGoogleMaps(e.target.value); }\n                                }\n                            } \n                            type=\"text\"\n                            autoComplete=\"off\"\n                        />\n                    </Form.Field>\n                        { !googleMaps &&  \n                            <div className=\"flex-row align-center\">\n                                <Button\n                                    type='button'\n                                    disabled={address.length < 3}\n                                    content={'Generer lenke til Google maps'} \n                                    icon='map' labelPosition='left' \n                                    onClick={() => generateGoogleMaps(address)} \n                                    primary\n                                /> \n                            </div> \n                        }\n                    { googleMaps && \n                        <Button.Group className=\"margin-top-small\">\n                            <Button type='button' onClick={() => setGoogleMaps('')}>Fjern</Button>\n                            <Button.Or text='' />\n                            <Button type='button' primary> \n                                <a className=\"google-maps-link\" href={googleMaps} rel=\"noopener noreferrer\" target=\"_blank\"> \n                                    Test lenken \n                                </a> \n                            </Button>\n                        </Button.Group> \n                    }\n                </Form.Group>\n\n                { /** LINK **/}\n                <Form.Group grouped className=\"form-input-group\">\n                    <label className=\"form-field-header\"> Lenke </label>\n                    <Form.Field>\n                        <label className=\"form-field-title\"> Norsk tekst som vises </label>\n                        <input \n                            value={linkTextNO} \n                            onChange={e => setLinkTextNO(e.target.value) } \n                            type=\"text\"\n                            autoComplete=\"off\"\n                        />\n                    </Form.Field>\n                    <Form.Field>\n                        <label className=\"form-field-title\"> Engelsk tekst som vises </label>\n                        <input \n                            value={linkTextEN} \n                            onChange={e => setLinkTextEN(e.target.value) } \n                            type=\"text\"\n                            autoComplete=\"off\"\n                        />\n                    </Form.Field>\n                    <Form.Field  error={errors.link}>\n                        <label className=\"form-field-title\"> Lenke </label>\n                        { errors.link && <ErrorLabel textKey={'ERROR_LINK'} /> }\n                        <input \n                            value={link} \n                            onChange={e => { setLink(e.target.value); setErrors({ ...errors, link: false }); }} \n                            type=\"text\"\n                            autoComplete=\"off\"\n                        />\n                    </Form.Field>\n                </Form.Group>\n\n                { /** GROUPS **/ }\n                <Form.Group grouped className=\"form-input-group\">\n                    <label className={'form-field-header'}> Gjelder for gruppe(r): {redStar} </label>\n                    { errors.groups && <ErrorLabel textKey={'ERROR_GROUPS'} /> }\n                    <Form.Field>\n                        { availableGroups.map(group => \n                            <Checkbox key={group} \n                                label={group === 'all' ? 'Alle grupper' : `Gruppe ${group}`}\n                                className={`group-checkbox ${group === 'all' ? 'full-width' : ''} ${errors.groups ? 'checkbox-error' : ''}`}\n                                onClick={() => handleCheckbox(group)}\n                                disabled={group !== 'all' && allGroupsSelected}\n                                checked={allGroupsSelected || groups.indexOf(group) >= 0}\n                            />)\n                        }\n                    </Form.Field>\n                </Form.Group>\n\n                { /** SUBMIT **/ }\n                <Button type='button' onClick={() => cancelCallback()} className=\"full-width margin-bottom-small margin-top-medium\">\n                    Avbryt\n                </Button>\n                <Button primary type='submit' className=\"full-width margin-bottom-large\">\n                    { editing ? 'Lagre' : 'Ferdig' } \n                </Button>\n            </Form>\n\n        </div>\n    );\n};\n\nexport default CreateNewEvent;","import React, { useState, useEffect } from 'react';\nimport EditableEvent from './EditableEvent';\nimport { eventFilter, groupEventsByDay, weekdays_NO } from './utils';\nimport { Loader, Button } from 'semantic-ui-react';\nimport CreateNewEvent from './CreateNewEvent';\nimport './eventManager.scss';\n\nconst AddEventButton = ({ handleClick }) => {\n    return <div className=\"add-event-button\" onClick={handleClick}><p>+</p></div>\n}\n\nconst EventManager = ({ user, events = [], firestore }) => {\n    const [ groups, setGroups ] = useState(undefined);\n    const [ createNew, setCreateNew ] = useState(false);\n    const [ editEvent, setEditEvent ] = useState(undefined);\n    const [ eventToBeDeleted, setEventToBeDeleted ] = useState(undefined);\n\n    useEffect(() => {\n        firestore.fetchGroupsThatUserAdministrates(user.uid, setGroups);\n    }, [firestore, user.uid]);\n\n    const filteredEvents = !groups ? [] : events.filter(e => eventFilter(groups, e));\n    const groupedEvents = groupEventsByDay(filteredEvents);\n    const logout = () => firestore.logout();\n\n    if (createNew || editEvent) {\n        return <CreateNewEvent \n                    existingEvent={events.filter(e => e.id === editEvent)[0]}\n                    editing={editEvent !== undefined}\n                    cancelCallback={() => { setCreateNew(false); setEditEvent(undefined); window.scrollTo(0,0); } } \n                    submitCallback={event => { \n                        firestore.addEvent(event, user.uid).then(setCreateNew(false)); \n                        window.scrollTo(0,0);\n                    }}\n                    updateCallback={event => {\n                        firestore.updateEvent(event).then(setEditEvent(undefined));\n                        window.scrollTo(0,0);\n                    }}\n                    availableGroups={groups} \n                />\n    }\n\n    return (\n        <div className=\"event-manager-wrapper\">\n            { eventToBeDeleted && \n                <div className=\"delete-event-confirmation-dimmer\"> \n                    <div className=\"delete-event-confirmation-box\"> \n                        <div className=\"delete-event-content\"> \n                            <label>\n                                Er du sikker på at du vil slette <span className=\"font-bold\">{filteredEvents.filter(e => e.id === eventToBeDeleted)[0].title_NO}</span> ?\n                            </label>\n                            <div className=\"full-width flex-row\">\n                                <Button secondary onClick={() => setEventToBeDeleted(undefined)}> Nei, gå tilbake </Button>\n                                <Button primary onClick={() => { firestore.removeEvent(eventToBeDeleted); setEventToBeDeleted(undefined); }}> Ja, slett! </Button>\n                            </div>\n                        </div>\n                    </div>\n                </div>}\n            <Loader active={!groups} />\n            <div className=\"add-event-button-wrapper\">\n                <AddEventButton handleClick={() => setCreateNew(true) } />\n            </div>\n            { groups && events && weekdays_NO.map(day => {\n                const dayEvents = groupedEvents[day].map(e => \n                    <EditableEvent \n                        key={e.id} event={e} \n                        canManage={e.groups.reduce((acc, curr) => acc && groups.indexOf(curr) >= 0 ,true)} \n                        deleteCallback={(id) => setEventToBeDeleted(id)}\n                        editCallback={(id) => setEditEvent(id) } />\n                );\n                return (\n                    <div key={day} className=\"event-group\">\n                        <div className=\"event-group-day-label\"> { day } </div>\n                        { dayEvents }\n                    </div>\n                )\n            })}\n            <Button type='button' className=\"full-width margin-top-medium margin-bottom-large\" primary onClick={logout}> Logg ut </Button>            \n        </div>\n    );\n};\n\nexport default EventManager;","import React, { useState, useEffect } from 'react';\nimport LoginScreen from './LoginScreen';\nimport EventManager from './EventManager';\nimport { Loader, Dimmer } from 'semantic-ui-react';\nimport './backOffice.scss';\n\nconst BackOffice = ({ firestore }) => {\n    const [ events, setEvents ] = useState(undefined);\n    const [ user, setUser ] = useState(undefined);\n    const [ loadingUser, setLoadingUser ] = useState(true);\n\n    useEffect(() => {\n        firestore.fetchEvents(setEvents);\n        firestore.registerForAuthUpdates(setUser, setLoadingUser);\n    }, [firestore])\n\n    return (\n        <div className=\"back-office-wrapper\">\n            <Dimmer active={loadingUser} ><Loader active={loadingUser} /></Dimmer>\n            { !loadingUser &&\n                <>\n                    <div className=\"back-office-header\"> Adminpanel </div>\n                    { !user && <LoginScreen firestore={firestore} /> }\n                    { user && <EventManager user={user} firestore={firestore} events={events} /> }\n                </>\n            }\n        </div>\n    );\n};\n\nexport default BackOffice;","import app from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\nexport const config = {\n    apiKey: \"AIzaSyBz86p_Wdi_WBkLpcxhMaph4geiv69bcNc\",\n    authDomain: \"fadderuke-matnat.firebaseapp.com\",\n    databaseURL: \"https://fadderuke-matnat.firebaseio.com\",\n    projectId: \"fadderuke-matnat\",\n    storageBucket: \"fadderuke-matnat.appspot.com\",\n    messagingSenderId: \"909444728352\",\n    appId: \"1:909444728352:web:09ee2da490aafc00\"\n};\n\nclass Firebase {\n    constructor() {\n        app.initializeApp(config);\n        this.db = app.firestore();\n        this.auth = app.auth()\n    } \n\n    fetchEvents(setEventsCallback) {\n        this.db.collection('events').onSnapshot(snapshot => {\n            const events = snapshot.docs.map(doc => ({ id: doc.id, ...doc.data(), subEvents: [] }));\n            this.db.collection('subevents').onSnapshot(subSnapshot => {\n                subSnapshot.docs.map(d => d.data()).forEach(subEvent => {\n                    const subId = subEvent.parent_event_id;\n                    for (const event of events) {\n                        if (event.id === subId) {\n                            event.subEvents.push(subEvent);\n                        }\n                    }\n                }, console.log)\n                setEventsCallback(events);\n            }, console.log)\n        })\n    }\n\n    fetchGroupNames(setGroupNamesCallback) {\n        this.db.collection('groups').onSnapshot(snapshot => {\n            const groupNames = snapshot.docs.map(doc => {\n                return doc.data();\n            });\n            setGroupNamesCallback(groupNames)\n        }, console.log)\n    }\n\n    login(email, password, errorCallback) {\n        this.auth.signInWithEmailAndPassword(email, password).catch((error) => {\n            errorCallback(error);\n        });  \n    }\n\n    logout() {\n        this.auth.signOut();\n    }\n\n    registerForAuthUpdates(callback, loadingCallback) {\n\n        this.auth.onAuthStateChanged(user => {\n            if (user) {\n                callback(user);\n                loadingCallback(false);\n            } else {\n                callback(undefined);\n                loadingCallback(false);\n            }\n        })\n    }\n\n    fetchGroupsThatUserAdministrates(userId, callback) {\n        this.db.collection('writePermissions').doc(userId).get().then(doc => {\n            if (doc.exists) {\n                const groups = doc.data().groups;\n                if (groups === 'all') { callback(groups); }\n                else {\n                    callback(groups);    \n                }\n            }\n        })\n    }\n\n    addEvent(event, uid) {\n        if (event) {\n            return this.db.collection('events').add({...event, createdBy: uid })\n        }\n    }\n\n    removeEvent(event_id) {\n        if (event_id) {\n            return this.db.collection('events').doc(event_id).delete();\n        }\n    }\n\n    updateEvent(event) {\n        if (event) {\n            return this.db.collection('events').doc(event.id).set(event);\n        }\n    }\n}\n\nexport default Firebase;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter as Router, Route } from 'react-router-dom';\nimport './index.css';\nimport App from './Frontend/App';\nimport * as serviceWorker from './serviceWorker';\nimport { CookiesProvider } from 'react-cookie';\nimport BackOffice from './BackOffice/BackOffice';\nimport Firebase from './Firestore';\n\nconst firestore = new Firebase();\n\nReactDOM.render(\n    <Router basename={process.env.PUBLIC_URL}>\n        <Route exact path=\"/admin\" component={() => <BackOffice firestore={firestore} />} />\n        <Route exact path=\"/\" render={() => <CookiesProvider> <App firestore={firestore}/> </CookiesProvider> } />\n    </Router>\n, document.getElementById('root'));\nserviceWorker.unregister();\n"],"sourceRoot":""}