{"version":3,"sources":["Frontend/Mainscreen/tekna-logo.jpg","Frontend/textResources.js","Frontend/WelcomeScreen.js","Frontend/Mainscreen/NavBarButton.js","Frontend/Mainscreen/IconLabel.js","Frontend/utils.js","Frontend/Mainscreen/Event.js","Frontend/Mainscreen/MainScreen.js","Frontend/SelectLanguage.js","Frontend/App.js","serviceWorker.js","BackOffice/LoginScreen.js","BackOffice/EditableEvent.js","BackOffice/utils.js","BackOffice/ErrorLabel.js","BackOffice/TimeInput.js","BackOffice/CreateSubevents.js","BackOffice/CreateNewEvent.js","BackOffice/EventManager.js","BackOffice/BackOffice.js","Firestore.js","index.js"],"names":["module","exports","__webpack_require__","p","textResources","WELCOME_NO","WELCOME_EN","WELCOME_SUBTITLE_NO","WELCOME_SUBTITLE_EN","GROUP_PLACEHOLDER_NO","GROUP_PLACEHOLDER_EN","WELCOME_SCREEN_BUTTON_LABEL_NO","WELCOME_SCREEN_BUTTON_LABEL_EN","ERROR_TITLE_NO_NO","ERROR_TITLE_EN_NO","ERROR_DAY_NO","ERROR_START_TIME_NO","ERROR_END_TIME_NO","ERROR_DESC_NO_NO","ERROR_DESC_EN_NO","ERROR_GROUPS_NO","ERROR_LINK_NO","EMERGENCY_PHONE_NUMBER_NO","EMERGENCY_PHONE_NUMBER_EN","PHONE_NUMBER_NO","PHONE_NUMBER_EN","selectResource","label","lang","key","concat","Frontend_textResources","state","WelcomeScreen","_ref","group","setGroup","setCookie","groupNames","_useContext","useContext","AppContext","Object","slicedToArray","_useState","useState","_useState2","selected","setSelected","groups","map","_ref2","id","label_nor","label_eng","value","sort","a","b","parseInt","customStyles","container","provided","objectSpread","width","marginBottom","option","fontSize","menu","marginTop","currentSelectedLabel","header","resource","subtitle","placeholder","buttonLabel","react_default","createElement","className","src","alt","react_select_browser_esm","inputProps","readOnly","styles","onChange","v","options","isSearchable","isDisabled","length","onClick","path","index_es","icon","faChevronRight","NavBarButton","_ref$target","target","NO","EN","callback","iconColor","day","substring","IconLabel","link","mappedIcon","RegularIcons","SolidIcons","href","weekdays","translateDay","eventTimeComparator","start_time","end_time","groupComparator","selectField","event","field","language","selectTime","_ref3","selectGroups","_ref4","indexOf","join","SubEvent","google_maps","showUrl","startsWith","Event","data","open","setOpen","title","description","from","time","address","googleMaps","linkText","chevron","Mainscreen_IconLabel","subEvents","e","Event_SubEvent","parent_event_id","title_NO","noisyWidth","baseWidth","Math","random","skeleton","bundle_default","height","count","MainScreen","events","Date","getDay","dayToday","setDay","scrollRef","useRef","eventList","filter","_i","_weekdays","console","error","translateDayIdx","day_NO","eventForGroupFilter","Mainscreen_Event","Fragment","navBarButtons","el","Mainscreen_NavBarButton","current","scrollTop","faPhone","teknaLogo","ref","SelectLanguage","changeLanguage","position","NO_class","EN_class","React","createContext","App","props","firestore","_useCookies","useCookies","_useCookies2","cookies","removeCookie","_useState3","_useState4","setEvents","_useState5","_useState6","setSubEvents","_useState7","_useState8","setGroupNames","_useState9","_useState10","setState","useEffect","fetchEvents","fetchSubEvents","fetchGroupNames","eventsWithSubevents","s","Provider","Frontend_SelectLanguage","newLang","Frontend_WelcomeScreen","Mainscreen_MainScreen","Boolean","window","location","hostname","match","LoginScreen","email","setEmail","password","setPassword","setError","scrollTo","handleInput","handleLoginError","code","Form","Field","type","autoComplete","Button","login","CheckLabel","check","faCheck","faTimes","cx","EditableEvent","canManage","deleteCallback","editCallback","setLang","allFieldsEnglish","title_EN","from_EN","day_EN","desc_EN","hasAddress","hasGoogleMaps","EditableEvent_CheckLabel","faTrashAlt","faPen","weekdays_NO","ErrorLabel","textKey","TimeInput","hour","setHour","minutes","setMinute","mandatory","containerStyle","minuteRef","BackOffice_ErrorLabel","Input","CreateSubevents","existingEvents","submitCallback","cancelCallback","addressSuggestions","addingNew","setAddingNew","hours","startTime","setStartTime","endTime","setEndTime","titleNO","setTitleNO","titleEN","setTitleEN","_useState11","_useState12","setAddress","_useState13","_useState14","errors","setErrors","_useState15","_useState16","setGoogleMaps","_useState17","undefined","_useState18","suggestedAddress","setSuggestedAddress","startTimeMinuteRef","endTimeMinuteRef","handleTimeInput","f","t","input","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","split","Symbol","iterator","next","done","c","err","return","focus","handleAddressInput","toLowerCase","handleFieldInput","blankOutForm","primary","BackOffice_TimeInput","style","color","x","textDecoration","secondary","keys","reduce","acc","validate","CreateNewEvent","editing","_ref$existingEvent","existingEvent","availableGroups","updateCallback","submitSubeventCallback","deleteSubeventCallback","_existingEvent$title_","_existingEvent$title_2","_existingEvent$desc_N","desc_NO","_existingEvent$desc_E","_existingEvent$google","_existingEvent$start_","_existingEvent$end_ti","_existingEvent$day_NO","_existingEvent$linkTe","linkText_NO","_existingEvent$linkTe2","linkText_EN","descNO","setDescNO","descEN","setDescEN","linkTextNO","setLinkTextNO","linkTextEN","setLinkTextEN","setLink","_useState19","_useState20","startTimeHour","setStartTimeHour","_useState21","_useState22","startTimeMinute","setStartTimeMinute","_useState23","_useState24","endTimeHour","setEndTimeHour","_useState25","_useState26","endTimeMinute","setEndTimeMinute","_useState27","_useState28","setGroups","_useState29","_useState30","_useState31","timeStart","timeEnd","_useState32","_useState33","_useState34","submitting","setSubmitting","_useState35","_useState36","addSubevents","setAddSubevents","redStar","allGroupsSelected","generateGoogleMaps","setTime","max","BackOffice_CreateSubevents","onSubmit","errs","validateFieldsAndSetErrors","isMentorBoard","from_NO","loading","Group","grouped","TextArea","desc","disabled","content","labelPosition","Or","text","Checkbox","g","toConsumableArray","handleCheckbox","checked","Modal","setAppElement","defaultStyles","overlay","backgroundColor","AddEventButton","handleClick","EventManager","user","_ref2$events","createNew","setCreateNew","editEvent","setEditEvent","eventToBeDeleted","setEventToBeDeleted","fetchGroupsThatUserAdministrates","uid","filteredEvents","g1","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","eventFilter","groupedEvents","forEach","push","groupEventsByDay","BackOffice_CreateNewEvent","addEvent","then","addSubEvent","event_id","removeSubEvent","updateEvent","lib_default","isOpen","removeEvent","Loader","active","EventManager_AddEventButton","dayEvents","BackOffice_EditableEvent","curr","logout","BackOffice","setUser","loadingUser","setLoadingUser","registerForAuthUpdates","eventsWithSubEvents","suggestions","createAddressSuggestions","Dimmer","BackOffice_LoginScreen","BackOffice_EventManager","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","Firebase","classCallCheck","this","app","initializeApp","db","auth","setEventsCallback","collection","onSnapshot","snapshot","docs","doc","log","setSubeventsCallback","subSnapshot","d","setGroupNamesCallback","errorCallback","signInWithEmailAndPassword","catch","signOut","loadingCallback","onAuthStateChanged","userId","get","exists","add","createdBy","delete","set","ReactDOM","render","react_router_dom","basename","process","react_router","exact","component","src_BackOffice_BackOffice","es6","Frontend_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ed9060a5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/tekna-logo.04ca97dd.jpg\";","const textResources = {\n    /** Welcome screen **/\n    'WELCOME_NO': 'Velkommen!',\n    'WELCOME_EN': 'Welcome!',\n    'WELCOME_SUBTITLE_NO': 'For å kunne gi deg relevant informasjon, trenger vi å vite hvilken gruppe du tilhører. Du kan gå tilbake og endre dette senere!',\n    'WELCOME_SUBTITLE_EN': 'To provide you with relevant information, we need to know which group you belong to. You can go back and change this later!',\n    'GROUP_PLACEHOLDER_NO': 'Velg gruppe...',\n    'GROUP_PLACEHOLDER_EN': 'Select group...',\n    'WELCOME_SCREEN_BUTTON_LABEL_NO': 'Jeg er klar',\n    'WELCOME_SCREEN_BUTTON_LABEL_EN': 'I\\'m ready',\n    \n    /** Form error labels **/\n    'ERROR_TITLE_NO_NO': 'Du må fylle inn norsk tittel',\n    'ERROR_TITLE_EN_NO': 'Du må fylle inn engelsk tittel',\n    'ERROR_DAY_NO': 'Du må velge en dag',\n    'ERROR_START_TIME_NO': 'Velg starttidspunkt (hh:mm)',\n    'ERROR_END_TIME_NO': 'Fyll ut hele sluttidspunktet',\n    'ERROR_DESC_NO_NO': 'Du må fylle inn norsk beskrivelse',\n    'ERROR_DESC_EN_NO': 'Du må fylle inn engelsk beskrivelse',\n    'ERROR_GROUPS_NO': 'Du må velge gruppe(r) arrangementet gjelder for',\n    'ERROR_LINK_NO': 'Du kan ikke ha lenketekst uten lenke',\n\n    /** PHONE **/\n    'EMERGENCY_PHONE_NUMBER_NO': 'Vakttelefon',\n    'EMERGENCY_PHONE_NUMBER_EN': 'Mentor board',\n    'PHONE_NUMBER_NO': '404 66 599',\n    'PHONE_NUMBER_EN': '404 66 599'\n}\n\nconst selectResource = (label, lang) => {\n    const key = `${label}_${lang}`;\n    if (key in textResources) \n        return textResources[key]\n    else \n        return label\n}\n\nexport default (label, state) => {\n    if (!state || !state.lang) {\n        return selectResource(label, 'NO')\n    }\n    else {\n        return selectResource(label, state.lang)\n    }  \n}","import React, { useState, useContext } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faChevronRight  } from '@fortawesome/free-solid-svg-icons';\nimport { AppContext } from './App';\nimport resource from './textResources';\nimport Select from 'react-select';\n\nconst WelcomeScreen = ({ group, setGroup, setCookie, groupNames }) => {\n    const [ state ] = useContext(AppContext);\n    const [ selected, setSelected ] = useState(group);\n    const lang = state.lang ? state.lang : 'NO'\n    const groups = groupNames \n        ? groupNames.map(\n            ({ id, label_nor, label_eng }) => (\n                {   value: id, \n                    label: lang === 'NO' ? label_nor : label_eng,\n                    label_nor: label_nor, \n                    label_eng: label_eng })\n                ).sort((a, b) => parseInt(a.value) - parseInt(b.value)) \n        : [];\n    \n    const submit = () => {\n        if (selected) {\n            setGroup(selected);\n            setCookie('group', selected, { path: '/'});\n        }\n    }\n\n    const customStyles = {\n        container: provided => ({\n                ...provided,\n                width: '100%',\n                marginBottom: 20,\n        }),\n        option: provided => ({\n            ...provided,\n            fontSize: '0.8rem',\n        }),\n        menu: provided => ({\n            ...provided,\n            marginTop: 0,\n        })\n    }\n\n    const currentSelectedLabel = selected && { label: (lang === 'NO' ? selected.label_nor : selected.label_eng) };\n    const header = resource('WELCOME', state);\n    const subtitle = resource('WELCOME_SUBTITLE', state);\n    const placeholder = resource('GROUP_PLACEHOLDER', state);\n    const buttonLabel = resource('WELCOME_SCREEN_BUTTON_LABEL', state);\n\n    return (\n        <div className=\"welcome-screen\">\n            <div>\n                <h1 className=\"welcome-screen-main-title\"> { header } </h1>\n                <h3 className=\"welcome-screen-sub-title\"> { subtitle } </h3>\n            </div>\n            <img className=\"person-img\" src=\"https://image.flaticon.com/icons/svg/145/145867.svg\" alt=\"person\" />\n            <div className=\"dropdown-wrapper\">\n                <Select \n                    inputProps={{ readOnly:true }}\n                    placeholder={ placeholder } \n                    styles={ customStyles } \n                    value={ currentSelectedLabel } \n                    onChange={(v) => setSelected(v)} \n                    options={ groups } \n                    isSearchable={ false }\n                    isDisabled={groups.length === 0}\n                />\n                <div className=\"ready-button\" onClick={submit}>\n                    <p className=\"ready-button-text\"> { buttonLabel } <FontAwesomeIcon icon={faChevronRight} /> </p>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default WelcomeScreen;","import React from 'react';\n\nconst NavBarButton = ({target: { id, NO, EN }, lang, callback, selected}) => {\n    const iconColor = selected ? 'navbar-selected' : '';\n    const day = lang === 'NO' ? NO : EN;\n    \n    return (\n        <div className=\"navbar-button\" onClick={() => callback(id)}>\n            <div className={`${iconColor} navbar-button-icon`} />\n            <label> { day.substring(0,3) } </label>\n        </div>\n    );\n};\n\nexport default NavBarButton;","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport * as RegularIcons from '@fortawesome/free-regular-svg-icons';\nimport * as SolidIcons from '@fortawesome/free-solid-svg-icons';\n\nconst IconLabel = ({icon, label, link}) => {\n    const mappedIcon = icon in RegularIcons ? RegularIcons[icon] : SolidIcons[icon];\n\n    return (\n        <div className=\"icon-label-wrapper\">\n            <FontAwesomeIcon className=\"event-icon\" icon={mappedIcon} />\n            { !link && <label className=\"event-icon-label\"> { label } </label> }\n            { link && <a className=\"icon-link event-icon-label\" href={link}> { label } </a>}\n        </div>\n    );\n};\n\nexport default IconLabel;","export const weekdays = [ \n    { id: 0, NO: 'mandag', EN: 'monday' },\n    { id: 1, NO: 'tirsdag', EN: 'tuesday' },\n    { id: 2, NO: 'onsdag', EN: 'wednesday' },\n    { id: 3, NO: 'torsdag', EN: 'thursday' },\n    { id: 4, NO: 'fredag', EN: 'friday' },\n    { id: 5, NO: 'lørdag', EN: 'saturday' },\n    { id: 6, NO: 'søndag', EN: 'sunday' }\n];\n\nexport const translateDayIdx = day => {\n    for (const { id, NO, EN } of weekdays) {\n        if (day === NO || day === EN) \n            return id;\n    }\n    \n    console.error(`Error: Could not translate day ${day} to index`);\n    return -1;\n}\n\nexport const translateDay = day => {\n    switch(day) {\n        case 'mandag': return 'monday';\n        case 'tirsdag': return 'tuesday';\n        case 'onsdag': return 'wednesday';\n        case 'torsdag': return 'thursday';\n        case 'fredag': return 'friday';\n        case 'lørdag': return 'saturday';\n        case 'søndag': return 'sunday';\n        default: return day;\n    }\n}\n\nexport const eventTimeComparator = (a, b) => {\n    if (!a.start_time && !b.start_time) return 0;\n    if (!a.start_time) return -1;\n    if (!b.start_time) return 1;\n\n    if (a.start_time === b.start_time) {\n        if (a.end_time && !b.end_time) return -1;\n        else if (!a.end_time && b.end_time) return 1;\n        else if (!a.end_time && !b.end_time) return 0;\n        else return a.end_time > b.end_time ? 1 : (a.end_time < b.end_time ? -1 : 0);\n    } else {\n        return a.start_time > b.start_time ? 1 : -1;\n    }\n}\n\nexport const groupComparator = (a, b) => {\n    if (a === b) return 0;\n    if (a === 'all') return -1;\n    if (b === 'all') return 1;\n    return parseInt(a) - parseInt(b);\n}\n\nexport const dayToday = () => {\n    const day = new Date().getDay() - 1;\n    return day === -1 ? 6 : day;\n}\n\nexport const selectField = (event, field, lang) => {\n    const language = lang ? lang : 'NO';\n    const key = `${field}_${language}`\n\n    if (!event[key]) return '';\n    else if (field === 'from') return `${language === 'NO' ? 'Fra' : 'From'} ${event[key]}`\n    else return event[key];\n}\n\nexport const selectTime = ({ start_time, end_time }) => {\n    if (!start_time) return '';\n    if (!end_time) return start_time;\n\n    return `${start_time} – ${end_time}`;\n}\n\nexport const selectGroups = ({ groups }, lang) => {\n    const language = lang ? lang : 'NO';\n    if (groups.indexOf('all') >= 0) return language === 'NO' ? 'Alle grupper' : 'All groups';\n    \n    const prefix = language === 'NO' ? 'Gruppe ' : 'Group ';\n    return `${prefix} ${groups.join(', ')}`;   \n}","import React, { useContext, useState } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport * as SolidIcons from '@fortawesome/free-solid-svg-icons';\nimport IconLabel from './IconLabel';\nimport { AppContext } from '../App';\nimport { eventTimeComparator, selectField, selectTime, selectGroups } from '../utils';\nimport './event.scss';\n\n/****************************/\n/**** SubEvent component ****/\n/****************************/\nconst SubEvent = ({ event, event: { google_maps }, lang }) => {\n    const showUrl = google_maps && google_maps.startsWith('https');\n\n    return (\n        <div className=\"sub-event\">\n            <div className=\"sub-event-time-and-title\">\n                <p className=\"sub-event-time\"> { selectTime(event) } </p>\n                <p className=\"sub-event-title\"> { selectField(event, 'title', lang ) } </p>\n            </div>\n            { showUrl && <a className=\"sub-event-address\" href={google_maps}> { lang === 'NO' ? '(kart)' : '(map)' } </a> }\n        </div>\n    );\n}\n\n/*****************************/\n/****** Event component ******/\n/*****************************/\nconst Event = ({ data }) => {\n    const event = data;\n    const [ open, setOpen ] = useState(true);\n    const [ state ] = useContext(AppContext);\n    const lang = state.lang;\n    const title = selectField(event, 'title', lang);\n    const description = selectField(event, 'desc', lang);\n    const from = selectField(event, 'from', lang)\n    const time = selectTime(event);\n    const groups = selectGroups(event, lang);\n    const address = data.address;\n    const googleMaps = data.google_maps;\n    const link = data.link;\n    const linkText = selectField(event, 'linkText', lang);\n    const chevron = open ? SolidIcons[\"faChevronUp\"] : SolidIcons[\"faChevronDown\"];\n\n    return (\n        <div className=\"event-wrapper\">\n            <div className=\"event\">\n                <label className=\"event-title\"> { title } </label>\n                { time && <IconLabel icon=\"faClock\" label={time} />}\n                { open && address && <IconLabel icon=\"faMap\" label={address} link={googleMaps ? googleMaps : null}/> }\n                { open && data.groups && <IconLabel icon=\"faUser\" label={groups} /> }\n                { open && from && <IconLabel icon=\"faComment\" label={from} /> }\n                { open && link && linkText && <IconLabel icon=\"faLink\" label={linkText} link={link}/> }\n                { open && description && <p className=\"event-description\"> { description } </p> }\n                { open && event.subEvents && event.subEvents.length > 0 && ( \n                    <div className=\"sub-event-wrapper\">\n                        { event.subEvents\n                            .sort(eventTimeComparator)\n                            .map(e => <SubEvent key={`${e.parent_event_id}-${e.title_NO}`} event={e} lang={lang}/>) }\n                    </div>\n                )}\n                <div className=\"event-chevron\" onClick={() => setOpen(!open)}>\n                    <FontAwesomeIcon icon={chevron} />\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Event;","import React, { useState, useContext, useRef } from 'react';\nimport NavBarButton from './NavBarButton';\nimport { AppContext } from '../App';\nimport Event from './Event';\nimport resource from '../textResources';\nimport Skeleton from 'react-loading-skeleton';\nimport { weekdays, translateDayIdx, dayToday, eventTimeComparator} from '../utils'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPhone } from '@fortawesome/free-solid-svg-icons';\nimport teknaLogo from './tekna-logo.jpg';\nimport './Mainscreen.scss';\n\nconst noisyWidth = baseWidth => baseWidth + (-10) + Math.random()*25\n\nconst skeleton = (\n    <div className=\"skeleton-wrapper\">\n        <Skeleton key={'skel-1'} height={24} width={noisyWidth(170)}/>\n        <div className=\"icon-label-skeletons\">\n            <Skeleton key={'skel-2'} height={13} width={noisyWidth(110)}/>\n            <Skeleton key={'skel-3'} height={13} width={noisyWidth(210)}/>\n            <Skeleton key={'skel-4'} height={13} width={noisyWidth(100)}/>\n            <Skeleton key={'skel-5'} height={13} width={noisyWidth(155)}/>\n        </div>,\n        <Skeleton key={'skel-6'} height={13} width={noisyWidth(275)} count={3} />\n    </div>\n)\n\nconst eventForGroupFilter = (event, group) => {\n    if (!group || !group.value) return false; //If group is not set, show no events.\n    if (!event.groups || event.groups.indexOf('all') >= 0) return true;\n    return event.groups.indexOf(group.value) >= 0; \n}\n\nconst MainScreen = ({ group, events }) => {\n    const [ day, setDay ] = useState(dayToday())\n    const [ state ] = useContext(AppContext);\n    const TEKNA_DAY = 4; // friday\n    const scrollRef = useRef();\n    const eventList = events\n        ? events\n            .filter(e => translateDayIdx(e.day_NO) === day)\n            .filter(e => eventForGroupFilter(e, group))\n            .sort(eventTimeComparator)\n            .map(e => <Event key={e.id} data={e} />)\n        : <> { skeleton } { skeleton } </>;\n\n    const navBarButtons = weekdays.map(\n        el => <NavBarButton key={el.NO} lang={state.lang} target={el} callback={(day) => { setDay(day); scrollRef.current.scrollTop = 0; }} selected={day === el.id} />\n    )\n\n    return (\n        <div className=\"mainscreen-wrapper\">\n            <a href=\"tel:004740466599\" className=\"sticky-side-button\">\n                <FontAwesomeIcon className=\"phone-icon\" icon={faPhone} />\n                <div className=\"phonenumber-container\">\n                    <span> {resource('EMERGENCY_PHONE_NUMBER', state)} </span>\n                    <span className=\"phone-number\"> {resource('PHONE_NUMBER', state)} </span>\n                </div>\n            </a>\n            <div className=\"mainscreen-header\"> \n                { <div className=\"tekna-container\"> { day === TEKNA_DAY && <img className=\"header-tekna-logo\" src={teknaLogo} alt=\"Tekna logo\" /> } </div> }\n                { <label> { state.lang === 'NO' ? group.label_nor : group.label_eng } </label> }\n            </div>\n            <div className=\"mainscreen-event-container\" ref={scrollRef}>\n                { eventList }\n                { day === TEKNA_DAY && <img className=\"event-list-tekna-logo\" src={teknaLogo} alt=\"Tekna logo\"/>}\n                <div className=\"margin-bottom-XXL mobile-only\"></div>\n            </div>\n            <div className=\"mainscreen-navbar-container\">\n                { navBarButtons }\n            </div>\n        </div>\n    );\n};\n\nexport default MainScreen;","import React from 'react';\n\nconst SelectLanguage = ({ state: { lang }, changeLanguage, position }) => {\n    const NO_class = lang === 'NO' ? 'selected-lang' : '';\n    const EN_class = lang === 'EN' ? 'selected-lang' : '';\n\n    return (\n        <div className={`${position !== 'relative' ? 'language-pos-absolute' : ''} language-select`} onClick={changeLanguage}>\n            <p className={NO_class}> NO </p> <p>|</p> <p className={EN_class}> EN </p>\n        </div>\n    );\n};\n\nexport default SelectLanguage;","import React, { useState, useEffect } from 'react';\nimport { useCookies } from 'react-cookie';\nimport WelcomeScreen from './WelcomeScreen';\nimport MainScreen from './Mainscreen/MainScreen';\nimport SelectLanguage from './SelectLanguage';\nimport './App.scss';\n\nconst AppContext = React.createContext();\n\nfunction App(props) {\n  const { firestore } = props;\n  const [ cookies, setCookie, removeCookie ] = useCookies(['group', 'language']);\n  const [ group, setGroup ] = useState(cookies.group)\n  const [ events, setEvents ] = useState([])\n  const [ subEvents, setSubEvents ] = useState([])\n  const [ groupNames, setGroupNames ] = useState([])\n  const [ state, setState ] = useState({ lang: cookies.language ? cookies.language : 'NO' });\n  const changeLanguage = () => {\n    const newLang = state.lang === 'NO' ? 'EN' : 'NO';\n    setCookie('language', newLang)\n    setState({ ...state, lang: newLang });\n  }\n\n  useEffect(() => {\n    firestore.fetchEvents(setEvents);\n    firestore.fetchSubEvents(setSubEvents);\n    firestore.fetchGroupNames(setGroupNames)\n  }, [firestore, setEvents, setGroupNames])\n\n  const eventsWithSubevents = events.map(e => ({ ...e, subEvents: subEvents.filter(s => s.parent_event_id === e.id)}));\n  \n  return (\n    <AppContext.Provider value={[ state, setState ]}>\n      <div className=\"app\">\n        {  <SelectLanguage state={state} changeLanguage={changeLanguage} /> }\n        { !group && <WelcomeScreen groupNames={groupNames} setGroup={setGroup} setCookie={setCookie} /> }\n        { group && <MainScreen events={eventsWithSubevents} group={group} setGroup={setGroup} removeCookie={removeCookie}/> }\n      </div>\n    </AppContext.Provider>\n  );\n}\n\nexport { AppContext };\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { useState, useEffect } from 'react';\nimport { Form, Button } from 'semantic-ui-react';\nimport './loginScreen.scss';\n\nconst LoginScreen = ({ firestore }) => {\n    const [ email, setEmail ] = useState('');\n    const [ password, setPassword ] = useState('');\n    const [ error, setError ] = useState('');\n\n    useEffect(() => {\n        window.scrollTo(0,0);\n    });\n\n    const handleInput = (event, callback) => {\n        callback(event.target.value);\n    }\n\n    const handleLoginError = ({ code }) => {\n        if (code === 'auth/user-not-found') {\n            setError(\"Denne brukeren finnes ikke. Prøv igjen!\")\n        }\n    }\n\n    const handleSubmit = () => {\n        setError('');\n        \n        if (email && password) {\n            firestore.login(email, password, handleLoginError);\n        } else {\n            setError('Fyll inn brukernavn og passord!');\n        }\n    }\n\n    return (\n        <div className=\"login-screen\">\n            <Form className=\"login-form\">\n                { error && <label className=\"login-error-label\"> { error } </label> }\n                <Form.Field>\n                    <label> Epost </label>\n                    <input \n                        value={email} \n                        onChange={e => handleInput(e, setEmail)} \n                        type=\"email\"\n                        autoComplete=\"email\"\n                        />\n                </Form.Field>\n                <Form.Field>\n                    <label> Passord </label>\n                    <input \n                        value={password} \n                        onChange={e => handleInput(e, setPassword)} \n                        type=\"password\"\n                        autoComplete=\"current-password\" \n                        />\n                </Form.Field>\n                <Button className=\"login-button\" onClick={handleSubmit}> Logg inn </Button>\n            </Form>\n        </div>\n    );\n};\n\nexport default LoginScreen;\n","import React, { useState } from 'react';\nimport { selectField, selectTime, selectGroups } from '../Frontend/utils';\nimport SelectLanguage from '../Frontend/SelectLanguage';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCheck, faTimes, faTrashAlt, faPen  } from '@fortawesome/free-solid-svg-icons';\n\nconst CheckLabel = ({ check, label }) => {\n    const icon = check ? faCheck : faTimes;\n    const cx = [ 'check-label-wrapper', check ? 'check-green' : 'times-red'].join(' ')\n\n    return (\n        <div className={cx}>\n            <FontAwesomeIcon icon={icon} />\n            <label> { label } </label>\n        </div>\n    );\n}\n\nconst EditableEvent = ({ event, canManage, deleteCallback, editCallback }) => {\n    let [ lang, setLang ] = useState('NO');\n    const changeLanguage = () => setLang(lang === 'NO' ? 'EN' : 'NO')\n    \n    const title = selectField(event, 'title', lang) ? selectField(event, 'title', lang) : `Tittel mangler (${lang})`\n    const time = selectTime(event);\n    const groups = selectGroups(event, lang);\n    const allFieldsEnglish = event.title_EN && event.from_EN && event.day_EN && event.desc_EN;\n    const hasAddress = event.address && event.address.length > 0;\n    const hasGoogleMaps = event.google_maps && event.google_maps.startsWith('https');\n\n    return (\n        <div className='editable-event-wrapper'>\n            <div className='title-language-wrapper'>\n                <label className='editable-event-title'>{ title }</label>\n                <SelectLanguage state={{lang: lang}} changeLanguage={changeLanguage} position='relative'/>\n            </div>\n            <label className='editable-event-info-label'>{ groups }</label>\n            <label className='editable-event-info-label'>{ time }</label>\n            { event.address && <label className='editable-event-info-label'> Addresse: { event.address }</label> }\n            <div className='flex-row'>\n                { hasAddress && <CheckLabel check={hasGoogleMaps} label={hasGoogleMaps ? 'Har google maps' : 'Mangler google maps'} /> }\n                { !hasAddress && <CheckLabel check={hasAddress} label='Mangler adresse' /> }\n                { !allFieldsEnglish && <CheckLabel check={allFieldsEnglish} label='Mangler oversettelse' /> }\n                { canManage && <FontAwesomeIcon className=\"trash-icon\" icon={faTrashAlt} onClick={() => deleteCallback(event.id) } /> } \n                { canManage && <FontAwesomeIcon className=\"pen-icon\" icon={faPen} onClick={() => editCallback(event.id) } /> } \n            </div>\n        </div>\n    );\n};\n\nexport default EditableEvent;","import { eventTimeComparator } from \"../Frontend/utils\";\n\nexport const eventFilter = (group, e) => {\n    if (e.groups.indexOf('all') >= 0 || group === 'all') return true;\n\n    for (const g1 of group) {\n        for (const g2 of e.groups) {\n            if (g1 === g2) return true;\n        }\n    }\n}\n\nexport const weekdays_NO = ['mandag', 'tirsdag', 'onsdag', 'torsdag', 'fredag', 'lørdag', 'søndag'];\n\nexport const groupEventsByDay = events => {\n    const grouped = {}\n    weekdays_NO.forEach(day => grouped[day] = [])\n    events.forEach(e => grouped[e.day_NO].push(e));\n    Object.keys(grouped).forEach(key => grouped[key].sort(eventTimeComparator));\n\n    return grouped;\n}\n\nexport const createAddressSuggestions = events => {\n    const suggestions = { }\n    events.forEach(e => {\n        if (e.title_NO && e.address && e.google_maps) {\n            suggestions[e.title_NO.toLowerCase()] = e.address;\n        }\n    })\n\n    return suggestions;\n}","import React from 'react';\nimport resource from '../Frontend/textResources';\n\nconst ErrorLabel = ({ textKey }) => {\n    return (\n        <div className=\"error-label\">\n            { resource(textKey) }\n        </div>\n    );\n};\n\nexport default ErrorLabel;    ","import React from 'react';\nimport { Form, Input } from 'semantic-ui-react';\nimport ErrorLabel from './ErrorLabel';\n\nconst TimeInput = ({ title, hour, setHour, minutes, setMinute, mandatory, error, containerStyle, minuteRef }) => {\n    return (\n        <div className={`${containerStyle} flex-column`}>\n            <div className=\"form-field-title\"> {title} {mandatory} </div>\n            { error && <ErrorLabel textKey={error} /> }\n            <div className=\"flex-row\">\n                <Form.Field error={error.length !== 0}>\n                    <Input \n                        className=\"time-input\"\n                        placeholder=\"00\"\n                        value={hour} \n                        onChange={setHour}\n                        type=\"text\"\n                        autoComplete=\"off\"\n                    />\n                </Form.Field>\n                <div className=\"time-separator flex-row align-center justify-center\">:</div>\n                <Form.Field error={error.length !== 0}>\n                    <Input \n                        ref={minuteRef}\n                        className=\"time-input\"\n                        placeholder=\"00\"\n                        value={minutes} \n                        onChange={setMinute}\n                        type=\"text\"\n                        autoComplete=\"off\"\n                    />\n                </Form.Field>\n            </div>\n        </div>\n    );\n};\n\nexport default TimeInput;","import React, { useState, useRef, useEffect } from 'react';\nimport { Button, Form, Input } from 'semantic-ui-react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTrashAlt  } from '@fortawesome/free-solid-svg-icons';\nimport TimeInput from './TimeInput';\nimport { eventTimeComparator } from '../Frontend/utils';\n\nconst CreateSubevents = ({ existingEvents, submitCallback, cancelCallback, deleteCallback, addressSuggestions }) => {\n    const [ addingNew, setAddingNew ] = useState(false);\n    const [ startTime, setStartTime ] = useState({hours: '', minutes: ''})\n    const [ endTime, setEndTime ] = useState({hours: '', minutes: ''})\n    const [ titleNO, setTitleNO ] = useState('')\n    const [ titleEN, setTitleEN ] = useState('')\n    const [ address, setAddress ] = useState('')\n    const [ errors, setErrors ] = useState({ startTime: false, endTime: false, titleNO: false, titleEN: false, address: false });\n    const [ googleMaps, setGoogleMaps ] = useState('')\n    const [ suggestedAddress, setSuggestedAddress ] = useState(undefined);\n\n    const startTimeMinuteRef = useRef();\n    const endTimeMinuteRef = useRef();\n\n    useEffect(() => {\n        window.scrollTo(0, 0);\n    }, [])\n\n    const handleTimeInput = (f, t, event) => {\n        const input = event.target.value;\n        for (const c of input.split('')) { if (c < '0' || c > '9') return }\n        if (input.length > 2 || parseInt(input) > (t === 'hours' ? 23 : 59)) return;\n\n        \n        if (f === 'start') {\n            setErrors({ ...errors, startTime: false })\n            if (t === 'hours') { if (input.length === 2) { startTimeMinuteRef.current.focus(); } setStartTime({ ...startTime, hours: input })}\n            if (t === 'minutes') { setStartTime({ ...startTime, minutes: input })}\n        } else {\n            setErrors({ ...errors, endTime: false })\n            if (t === 'hours') { if (input.length === 2) { endTimeMinuteRef.current.focus(); } setEndTime({ ...endTime, hours: input })}\n            if (t === 'minutes') { setEndTime({ ...endTime, minutes: input })}\n        }\n    }\n\n    const handleAddressInput = input => {\n        setAddress(input);\n\n        if (input.length >= 3) {\n            if (input.toLowerCase().indexOf('bergen') === -1) { \n                input = input + ', Bergen' \n           }\n   \n           setGoogleMaps(`https://www.google.com/maps/search/?api=1&query=${input}`);\n        } else {\n            setGoogleMaps('');\n        }\n    }\n\n    const handleFieldInput = (input, field) => {\n        if (field === 'title_NO') {\n            if (address.length === 0 && input.toLowerCase() in addressSuggestions) {\n                setSuggestedAddress(addressSuggestions[input.toLowerCase()]);\n            }\n            setTitleNO(input);\n            setErrors({ ...errors, titleNO: false });\n\n        } else if (field === 'title_EN') {\n            setTitleEN(input);\n            setErrors({ ...errors, titleEN: false });\n        }   \n    }\n\n    const blankOutForm = () => {\n        setTitleNO('');\n        setTitleEN('');\n        setStartTime({ hours: '', minutes: ''})\n        setEndTime({ hours: '', minutes: ''})\n        setAddress('')\n        setGoogleMaps('');\n        setErrors({ startTime: false, endTime: false, titleNO: false, titleEN: false, address: false });\n    }\n\n    const cancelAdding = () => {\n        setAddingNew(false);\n        blankOutForm();\n    }\n\n    const validate = () => {\n        const errors = { \n            titleNO: titleNO.length === 0,\n            titleEN: titleEN.length === 0,\n            startTime: startTime.hours.length !== 2 || startTime.minutes.length !== 2,\n            endTime: endTime.hours.length === 1 || (endTime.hours.length === 2 && endTime.minutes.length !== 2),\n            address: address.length > 0 && address.length < 3,\n         };\n\n         setErrors(errors);\n         return !Object.keys(errors).reduce((acc, key) => errors[key] || acc, false);\n    }\n\n    const validateAndSubmit = () => {\n        if (validate()) {\n            const event = {\n                title_NO: titleNO,\n                title_EN: titleEN,\n                start_time: `${startTime.hours}:${startTime.minutes}`,\n            };\n\n            if (address.length !== 0) { event.address = address; }\n            if (googleMaps.length !== 0) { event.google_maps = googleMaps; }\n            if (endTime.hours.length === 2 && endTime.minutes.length === 2) { event.end_time =  `${endTime.hours}:${endTime.minutes}`; }\n\n            submitCallback(event)\n            setAddingNew(false);\n            blankOutForm();\n        }\n    }\n\n    return (\n        <div className=\"flex-column align-center add-sub-event-wrapper\">\n            { existingEvents.sort(eventTimeComparator).map(e => (\n                <div key={e.id} className={`${addingNew ? 'mobile-excluded' : ''} margin-top-medium flex-row existing-subevent`}>\n                    <label className=\"margin-left-medium sub-event-time-label\"> { e.start_time } – { e.end_time } </label>\n                    <div className=\"margin-left-medium flex-column sub-event-title-wrapper\"> \n                        <label className=\"sub-event-title-label\"> NO: { e.title_NO } </label> \n                        <label className=\"sub-event-title-label\"> EN: { e.title_EN } </label> \n                    </div>\n                    <label className=\"sub-event-google-maps\"> { e.google_maps } </label>\n                    <FontAwesomeIcon className=\"sub-event-trash\" icon={faTrashAlt} onClick={() => deleteCallback(e.id)} />\n                </div>\n            ))}\n            \n            { !addingNew && <Button type='button' className=\"margin-top-large full-width\" onClick={cancelCallback}>\n                Tilbake\n            </Button>}\n            { !addingNew && <Button type='button' primary className=\"margin-top-small margin-bottom-large full-width\" onClick={() => { setAddingNew(true) }}> Legg til nytt event </Button> }\n            { addingNew && \n                <Form className=\"subevent-form\">\n                    <div className=\"flex-column margin-top-large\">\n                        <div className=\"flex-row\">\n                            <TimeInput \n                                title='Start'\n                                hour={startTime.hours}\n                                minutes={startTime.minutes}\n                                setHour={e => handleTimeInput('start', 'hours', e)}\n                                setMinute={e => handleTimeInput('start', 'minutes', e)}\n                                error={errors.startTime ? 'ERROR_START_TIME' : ''}\n                                mandatory={<span style={{ color: 'red' }}>*</span>}\n                                minuteRef={startTimeMinuteRef}\n                                />\n                            <TimeInput \n                                title='Slutt'\n                                hour={endTime.hours}\n                                minutes={endTime.minutes}\n                                setHour={e => handleTimeInput('end', 'hours', e)}\n                                setMinute={e => handleTimeInput('end', 'minutes', e)}\n                                containerStyle=\"margin-left-medium\"\n                                error={errors.endTime ? 'ERROR_END_TIME' : ''}\n                                minuteRef={endTimeMinuteRef}\n                            />\n                        </div>\n\n                        <Form.Field error={errors.titleNO}>\n                            <label className=\"form-field-title margin-top-large\"> Norsk tittel </label>\n                            <Input \n                                value={titleNO} \n                                onChange={e => { handleFieldInput(e.target.value, 'title_NO'); }} \n                                type=\"text\"\n                                autoComplete=\"off\"\n                            />\n                        </Form.Field>\n\n                        <Form.Field error={errors.titleEN}>\n                            <label className=\"form-field-title margin-top-small\"> Engelsk tittel </label>\n                            <Input \n                                value={titleEN} \n                                onChange={e => { handleFieldInput(e.target.value, 'title_EN'); }} \n                                type=\"text\"x\n                                autoComplete=\"off\"\n                            />\n                        </Form.Field>\n\n                        <Form.Field error={errors.address}>\n                            <label className=\"form-field-title margin-top-large\"> Adresse </label>\n                            { suggestedAddress && <label style={{color: 'blue', textDecoration: 'underline'}} onClick={() => { handleAddressInput(suggestedAddress); setSuggestedAddress(undefined); }}> Bruk foreslått adresse: {suggestedAddress} </label>}\n                            <Input \n                                value={address} \n                                onChange={e => { handleAddressInput(e.target.value); setErrors({ ...errors, address: false }) }} \n                                type=\"text\"\n                                autoComplete=\"off\"\n                            />\n                            { googleMaps &&  <Button className=\"test-link-button\" type='button' primary onClick={() => window.open(googleMaps, '_blank')}> Test lenke </Button> }\n                        </Form.Field>\n                        <Button type='button' secondary className=\"margin-top-small\" onClick={cancelAdding}>\n                            Avbryt\n                        </Button>\n                        <Button type='submit' primary className=\"margin-top-small margin-bottom-large\" onClick={validateAndSubmit}>\n                            Ferdig\n                        </Button>\n                    </div>\n                </Form>\n            }\n        </div>\n    );\n};\n\nexport default CreateSubevents;","import React, { useState, useRef, useEffect } from 'react';\nimport { Form, TextArea, Button, Input, Checkbox } from 'semantic-ui-react';\nimport { translateDay, groupComparator } from '../Frontend/utils';\nimport ErrorLabel from './ErrorLabel';\nimport CreateSubevents from './CreateSubevents';\nimport './createNewEvent.scss';\nimport TimeInput from './TimeInput';\n\nconst CreateNewEvent = ({ editing, existingEvent = {}, availableGroups, cancelCallback, submitCallback, updateCallback, submitSubeventCallback, deleteSubeventCallback, addressSuggestions }) => {\n    const { title_NO = '', title_EN = '', desc_NO = '', desc_EN = '', google_maps = '', start_time = '', end_time = '', day_NO = '', linkText_NO='', linkText_EN=''} = existingEvent;\n    const [ titleNO, setTitleNO ] = useState(title_NO);\n    const [ titleEN, setTitleEN ] = useState(title_EN);\n    const [ descNO, setDescNO ] = useState(desc_NO);\n    const [ descEN, setDescEN ] = useState(desc_EN);\n    const [ address, setAddress ] = useState(existingEvent.address ? existingEvent.address : '');\n    const [ googleMaps, setGoogleMaps ] = useState(google_maps);\n    const [ linkTextNO, setLinkTextNO ] = useState(linkText_NO);\n    const [ linkTextEN, setLinkTextEN ] = useState(linkText_EN);\n    const [ link, setLink ] = useState(existingEvent.link ? existingEvent.link : '');\n    const [ startTimeHour, setStartTimeHour ] = useState(start_time.length === 5 ? start_time.split(':')[0] : '')\n    const [ startTimeMinute, setStartTimeMinute ] = useState(start_time.length === 5 ? start_time.split(':')[1] : '')\n    const [ endTimeHour, setEndTimeHour ] = useState(end_time.length === 5 ? end_time.split(':')[0] : '')\n    const [ endTimeMinute, setEndTimeMinute ] = useState(end_time.length === 5 ? end_time.split(':')[1] : '')\n    const [ groups, setGroups ] = useState(existingEvent.groups ? existingEvent.groups : []);\n    const [ day, setDay ] = useState(day_NO)\n    const [ errors, setErrors ] = useState({ titleNO: false, titleEN: false, descNO: false, descEN: false, day: false, address: false, timeStart: false, timeEnd: false, groups: false })\n    const [ submitting, setSubmitting ] = useState(false);\n    const [ addSubevents, setAddSubevents ] = useState(false);\n\n    const startTimeMinuteRef = useRef(null);\n    const endTimeMinuteRef = useRef(null);\n\n    const redStar = <span style={{ color: 'red' } }>*</span>\n    const allGroupsSelected = groups.indexOf('all') >= 0;\n\n    useEffect(() => {\n        window.scrollTo(0,0);\n    }, [])\n\n    const generateGoogleMaps = input => {\n        if (input.length < 3) { setGoogleMaps(''); return; }\n        if (input.toLowerCase().indexOf('bergen') === -1) { \n             input = input + ', Bergen' \n        }\n\n        setGoogleMaps(`https://www.google.com/maps/search/?api=1&query=${input}`);\n    }\n\n    const setTime = (event, field) => {\n        const input = event.target.value;\n        for (const c of input.split('')) { if (c < '0' || c > '9') return }\n        const max = field === 'startTimeHour' || field === 'endTimeHour' ? 23 : 59;\n        if (input.length > 2 || parseInt(input) > max) return;\n\n        if (field === 'startTimeHour') { \n            if (input.length === 2) startTimeMinuteRef.current.focus();\n            setStartTimeHour(input);\n        }\n        if (field === 'startTimeMinute') setStartTimeMinute(input);\n        if (field === 'endTimeHour') {\n            if (input.length === 2) endTimeMinuteRef.current.focus();\n            setEndTimeHour(input);\n        }\n        if (field === 'endTimeMinute') setEndTimeMinute(input);\n    }\n\n    const handleCheckbox = group => {\n        setErrors({ ...errors, groups: false })\n        if (group === 'all' && groups.indexOf('all') === -1) { \n            setGroups(['all']);\n        } else if (groups.indexOf(group) >= 0) {\n            setGroups(groups.filter(g => g !== group));\n        } else {\n            setGroups([ group, ...groups ]);\n        }\n    }\n\n    const validateFieldsAndSetErrors = callback => {\n        const errs = {\n            titleNO: titleNO === '',\n            titleEN: titleEN === '',\n            descNO: descNO === '',\n            descEN: descEN === '',\n            timeStart: startTimeHour.length !== 2 || startTimeMinute.length !== 2,\n            timeEnd: endTimeHour !== '' && (endTimeHour.length !== 2 || endTimeMinute.length !== 2),\n            day: day === '' || ['mandag', 'tirsdag', 'onsdag', 'torsdag', 'fredag', 'lørdag', 'søndag'].indexOf(day) === -1,\n            link: (linkTextEN.length !== 0 || linkTextNO.length !== 0) && !link,\n            groups: groups.length === 0,\n        };\n\n        callback(errs);\n        return !Object.keys(errs).reduce((acc, key) => errs[key] || acc, false);\n    }\n\n    const submit = () => {\n        if (validateFieldsAndSetErrors(setErrors)) {\n            setSubmitting(true);\n            const isMentorBoard = availableGroups.indexOf('all') >= 0;\n            const event = {\n                title_NO: titleNO,\n                title_EN: titleEN,\n                desc_NO: descNO, \n                desc_EN: descEN,\n                day_NO: day,\n                day_EN: translateDay(day),\n                from_NO: isMentorBoard ? 'fadderstyret' : 'gruppeleder',\n                from_EN: isMentorBoard ? 'the mentor board' : 'group leader',\n                start_time: `${startTimeHour}:${startTimeMinute}`,\n                groups: groups.sort(groupComparator),\n            };\n\n            if (address.length >= 3) { event.address = address; }\n            if (endTimeHour.length === 2 && endTimeMinute.length === 2) { event.end_time = `${endTimeHour}:${endTimeMinute}` }\n            if (googleMaps && googleMaps.startsWith('https://')) { event.google_maps = googleMaps; }\n            if (link) {\n                event.link = link;\n                if (linkTextNO) event.linkText_NO = linkTextNO;\n                if (linkTextEN) event.linkText_EN = linkTextEN;\n            }\n            \n            if (editing) {\n                updateCallback({ ...event, id: existingEvent.id });\n            } else {\n                submitCallback(event);\n            }\n        }\n    }\n\n    const submitSubevent = e => {\n        if (existingEvent) {\n            submitSubeventCallback({ ...e, parent_event_id: existingEvent.id })\n        }\n    }\n\n    return (\n        <div className=\"flex-column create-event-wrapper\">\n            { addSubevents \n                ? <CreateSubevents \n                    existingEvents={existingEvent.subEvents ? existingEvent.subEvents : [] } \n                    submitCallback={submitSubevent} \n                    cancelCallback={() => setAddSubevents(false) } \n                    deleteCallback={deleteSubeventCallback} \n                    addressSuggestions={addressSuggestions}    \n                />\n                : (<React.Fragment>\n                    <div className=\"create-event-header\"> \n                        Legg til et nytt event. Felter merket med {redStar} er obligatoriske. \n                    </div>\n            <Form className=\"create-event-form\" onSubmit={submit} loading={!availableGroups || submitting}>\n\n                { /** TITTEL  **/ }\n                <Form.Group grouped className=\"form-input-group\">\n                    <label className=\"form-field-header\"> Tittel {redStar} </label>\n                    <Form.Field error={errors.titleNO}>\n                        <label className=\"form-field-title\"> Norsk </label>\n                        { errors.titleNO && <ErrorLabel textKey={'ERROR_TITLE_NO'} /> }\n                        <Input \n                            value={titleNO} \n                            onChange={e => { setTitleNO(e.target.value); setErrors({ ...errors, titleNO: false }) }} \n                            type=\"text\"\n                            autoComplete=\"off\"\n                        />\n                    </Form.Field>\n                    <Form.Field error={errors.titleEN}>\n                        <label className=\"form-field-title\"> Engelsk </label>\n                        { errors.titleEN && <ErrorLabel textKey={'ERROR_TITLE_EN'} /> }\n                        <input \n                            value={titleEN} \n                            onChange={e => { setTitleEN(e.target.value); setErrors({ ...errors, titleEN: false }) }}  \n                            type=\"text\"\n                            autoComplete=\"off\"\n                        />\n                    </Form.Field>\n                </Form.Group>\n\n                { /** DAG **/ }\n                <Form.Field error={errors.day}>\n                    <label className=\"form-field-header\"> Dag { redStar } </label>\n                    { errors.day && <ErrorLabel textKey={'ERROR_DAY'} /> }\n                    <Button.Group className=\"full-width\" >\n                        <Button primary={day === 'mandag'} type='button' onClick={() => { setDay('mandag'); setErrors({ ...errors, day: false }) }}> Man </Button>\n                        <Button primary={day === 'tirsdag'} type='button' onClick={() => { setDay('tirsdag'); setErrors({ ...errors, day: false }) }}> Tirs </Button>\n                        <Button primary={day === 'onsdag'} type='button' onClick={() => { setDay('onsdag'); setErrors({ ...errors, day: false })}}> Ons </Button>\n                    </Button.Group>\n                    <Button.Group className=\"full-width margin-top-small\">\n                        <Button primary={day === 'torsdag'} type='button' onClick={() => { setDay('torsdag'); setErrors({ ...errors, day: false })}}> Tors </Button>\n                        <Button primary={day === 'fredag'} type='button' onClick={() => { setDay('fredag'); setErrors({ ...errors, day: false })}}> Fre </Button>\n                        <Button primary={day === 'lørdag'} type='button' onClick={() => { setDay('lørdag'); setErrors({ ...errors, day: false })}}> Lør </Button>\n                    </Button.Group>\n                    <Button.Group className=\"full-width margin-top-small\">\n                        <Button primary={day === 'søndag'} type='button' onClick={() => { setDay('søndag'); setErrors({ ...errors, day: false })}}> Søndag </Button>\n                    </Button.Group>\n\n                </Form.Field>\n\n                { /** TID **/ }\n                <Form.Group grouped className=\"form-input-group\">\n                    <label className=\"form-field-header\"> Tid </label>\n                    <div className=\"flex-row\">\n                        <TimeInput\n                            title='Start'\n                            hour={startTimeHour}\n                            minutes={startTimeMinute}\n                            setHour={e => { setTime(e, 'startTimeHour'); setErrors({ ...errors, timeStart: false })} }\n                            setMinute={e => { setTime(e, 'startTimeMinute'); setErrors({ ...errors, timeStart: false })} }\n                            error={errors.timeStart ? 'ERROR_START_TIME' : ''}\n                            mandatory={redStar}\n                            minuteRef={startTimeMinuteRef}\n                        />\n                        <TimeInput\n                            title='End'\n                            hour={endTimeHour}\n                            minutes={endTimeMinute}\n                            setHour={e => { setTime(e, 'endTimeHour'); setErrors({ ...errors, timeEnd: false })} }\n                            setMinute={e => { setTime(e, 'endTimeMinute'); setErrors({ ...errors, timeEnd: false })} }\n                            error={errors.timeEnd ? 'ERROR_END_TIME' : ''}\n                            mandatory={false}\n                            containerStyle='margin-left-large'\n                            minuteRef={endTimeMinuteRef}\n\n                        />\n                    </div>\n                </Form.Group>\n\n                { /** BESKRIVELSE  **/ }\n                <Form.Group grouped className=\"form-input-group\">\n                    <label className=\"form-field-header\"> Beskrivelse {redStar} </label>\n                    <Form.Field error={errors.descNO}>\n                        <label className=\"form-field-title\"> Norsk </label>\n                        { errors.descNO && <ErrorLabel textKey={'ERROR_DESC_NO'} /> }\n                        <TextArea error={errors.desc} value={descNO}  onChange={e => { setDescNO(e.target.value); setErrors({ ...errors, descNO: false }) }}/>\n                    </Form.Field>\n                    <Form.Field error={errors.descEN}>\n                        <label className=\"form-field-title\"> Engelsk </label>\n                        { errors.descEN && <ErrorLabel textKey={'ERROR_DESC_EN'} /> }\n                        <TextArea error={errors.desc} value={descEN} onChange={e => { setDescEN(e.target.value); setErrors({ ...errors, descEN: false }) }}/>\n                    </Form.Field>\n                </Form.Group>\n\n                { /** STED  **/ }\n                <Form.Group grouped className=\"form-input-group\">\n                    <Form.Field>\n                        <label className=\"form-field-header\"> Adresse </label>\n                        <input \n                            value={address} \n                            onChange={e => {\n                                    setAddress(e.target.value);\n                                    if (googleMaps) { generateGoogleMaps(e.target.value); }\n                                }\n                            } \n                            type=\"text\"\n                            autoComplete=\"off\"\n                        />\n                    </Form.Field>\n                    { !googleMaps &&  \n                        <div className=\"flex-row align-center\">\n                            <Button\n                                type='button'\n                                disabled={address.length < 3}\n                                content={'Generer lenke til Google maps'} \n                                icon='map' labelPosition='left' \n                                onClick={() => generateGoogleMaps(address)} \n                                primary\n                            /> \n                        </div> \n                    }\n                    { googleMaps && \n                        <Button.Group className=\"margin-top-small\">\n                            <Button type='button' onClick={() => setGoogleMaps('')}>Fjern</Button>\n                            <Button.Or text='' />\n                            <Button type='button' primary onClick={() => window.open(googleMaps, '_blank')}> \n                                Test lenke\n                            </Button>\n                        </Button.Group> \n                    }\n                </Form.Group>\n\n                { /** LINK **/}\n                <Form.Group grouped className=\"form-input-group\">\n                    <label className=\"form-field-header\"> Lenke </label>\n                    <Form.Field>\n                        <label className=\"form-field-title\"> Norsk tekst som vises </label>\n                        <input \n                            value={linkTextNO} \n                            onChange={e => setLinkTextNO(e.target.value) } \n                            type=\"text\"\n                            autoComplete=\"off\"\n                        />\n                    </Form.Field>\n                    <Form.Field>\n                        <label className=\"form-field-title\"> Engelsk tekst som vises </label>\n                        <input \n                            value={linkTextEN} \n                            onChange={e => setLinkTextEN(e.target.value) } \n                            type=\"text\"\n                            autoComplete=\"off\"\n                        />\n                    </Form.Field>\n                    <Form.Field  error={errors.link}>\n                        <label className=\"form-field-title\"> Lenke </label>\n                        { errors.link && <ErrorLabel textKey={'ERROR_LINK'} /> }\n                        <input \n                            value={link} \n                            onChange={e => { setLink(e.target.value); setErrors({ ...errors, link: false }); }} \n                            type=\"text\"\n                            autoComplete=\"off\"\n                        />\n                    </Form.Field>\n                </Form.Group>\n\n                { /** GROUPS **/ }\n                <Form.Group grouped className=\"form-input-group\">\n                    <label className={'form-field-header'}> Gjelder for gruppe(r): {redStar} </label>\n                    { errors.groups && <ErrorLabel textKey={'ERROR_GROUPS'} /> }\n                    <Form.Field>\n                        { availableGroups.map(group => \n                            <Checkbox key={group} \n                                label={group === 'all' ? 'Alle grupper' : `Gruppe ${group}`}\n                                className={`group-checkbox ${group === 'all' ? 'full-width' : ''} ${errors.groups ? 'checkbox-error' : ''}`}\n                                onClick={() => handleCheckbox(group)}\n                                disabled={group !== 'all' && allGroupsSelected}\n                                checked={allGroupsSelected || groups.indexOf(group) >= 0}\n                            />)\n                        }\n                    </Form.Field>\n                </Form.Group>\n\n                { editing &&\n                    <Button type='button' onClick={() => { setAddSubevents(true) }} className=\"full-width margin-bottom-small margin-top-small\">\n                        Legg til hendelser\n                    </Button>\n                }\n\n                { /** SUBMIT **/ }\n                <Button type='button' onClick={() => cancelCallback()} className=\"full-width margin-bottom-small margin-top-medium\">\n                    Avbryt\n                </Button>\n                <Button primary type='submit' className=\"full-width margin-bottom-large\">\n                    { editing ? 'Lagre' : 'Ferdig' } \n                </Button>\n            </Form>\n            </React.Fragment>)\n            }\n        </div>\n    );\n};\n\nexport default CreateNewEvent;","import React, { useState, useEffect } from 'react';\nimport EditableEvent from './EditableEvent';\nimport { eventFilter, groupEventsByDay, weekdays_NO } from './utils';\nimport { Loader, Button } from 'semantic-ui-react';\nimport CreateNewEvent from './CreateNewEvent';\nimport Modal from 'react-modal';\nimport './eventManager.scss';\n\nModal.setAppElement('#root')\nModal.defaultStyles.overlay.backgroundColor = 'rgba(0,0,0,0.50)';\n\nconst AddEventButton = ({ handleClick }) => {\n    return <div className=\"add-event-button\" onClick={handleClick}><p>+</p></div>\n}\n\nconst EventManager = ({ user, events = [], addressSuggestions, firestore }) => {\n    const [ groups, setGroups ] = useState(undefined);\n    const [ createNew, setCreateNew ] = useState(false);\n    const [ editEvent, setEditEvent ] = useState(undefined);\n    const [ eventToBeDeleted, setEventToBeDeleted ] = useState(undefined);\n\n    useEffect(() => {\n        firestore.fetchGroupsThatUserAdministrates(user.uid, setGroups);\n    }, [firestore, user.uid]);\n\n    const filteredEvents = !groups ? [] : events.filter(e => eventFilter(groups, e));\n    const groupedEvents = groupEventsByDay(filteredEvents);\n    const logout = () => firestore.logout();\n\n    if (createNew || editEvent) {\n        return <CreateNewEvent \n                    existingEvent={events.filter(e => e.id === editEvent)[0]}\n                    editing={editEvent !== undefined}\n                    cancelCallback={() => { setCreateNew(false); setEditEvent(undefined); window.scrollTo(0,0); } } \n                    submitCallback={event => { \n                        firestore.addEvent(event, user.uid).then(setCreateNew(false)); \n                        window.scrollTo(0,0);\n                    }}\n                    submitSubeventCallback={event => {\n                        firestore.addSubEvent(event, user.uid);\n                    }}\n                    deleteSubeventCallback={event_id => {\n                        firestore.removeSubEvent(event_id);\n                    }}\n                    updateCallback={event => {\n                        firestore.updateEvent(event).then(setEditEvent(undefined));\n                        window.scrollTo(0,0);\n                    }}\n                    availableGroups={groups} \n                    addressSuggestions={addressSuggestions}\n                />\n    }\n\n    return (\n        <div className=\"event-manager-wrapper\">\n            <Modal\n                isOpen={eventToBeDeleted !== undefined}\n                className=\"delete-event-modal\"\n            > \n                {eventToBeDeleted && \n                    <label>\n                        Er du sikker på at du vil slette <span className=\"font-bold\">{filteredEvents.filter(e => e.id === eventToBeDeleted)[0].title_NO}</span> ?\n                    </label>\n                }\n                <div className=\"full-width flex-row margin-top-large\">\n                    <Button secondary onClick={() => setEventToBeDeleted(undefined)}> Nei, gå tilbake </Button>\n                    <Button primary onClick={() => { firestore.removeEvent(eventToBeDeleted); setEventToBeDeleted(undefined); }}> Ja, slett! </Button>\n                </div>\n            </Modal>\n\n            <Loader active={!groups} />\n            <div className=\"add-event-button-wrapper\">\n                <AddEventButton handleClick={() => setCreateNew(true) } />\n            </div>\n            { groups && events && weekdays_NO.map(day => {\n                const dayEvents = groupedEvents[day].map(e => \n                    <EditableEvent \n                        key={e.id} event={e} \n                        canManage={e.groups.reduce((acc, curr) => acc && groups.indexOf(curr) >= 0 ,true)} \n                        deleteCallback={(id) => setEventToBeDeleted(id)}\n                        editCallback={(id) => setEditEvent(id) } />\n                );\n                return (\n                    <div key={day} className=\"event-group\">\n                        <div className=\"event-group-day-label\"> { day } </div>\n                        { dayEvents }\n                    </div>\n                )\n            })}\n            <Button type='button' className=\"full-width margin-top-medium margin-bottom-large\" primary onClick={logout}> Logg ut </Button>            \n        </div>\n    );\n};\n\nexport default EventManager;","import React, { useState, useEffect } from 'react';\nimport LoginScreen from './LoginScreen';\nimport EventManager from './EventManager';\nimport { Loader, Dimmer } from 'semantic-ui-react';\nimport './backOffice.scss';\nimport { createAddressSuggestions } from './utils';\n\nconst BackOffice = ({ firestore }) => {\n    const [ events, setEvents ] = useState([]);\n    const [ subEvents, setSubEvents ] = useState([])\n    const [ user, setUser ] = useState(undefined);\n    const [ loadingUser, setLoadingUser ] = useState(true);\n\n\n    useEffect(() => {\n        firestore.fetchEvents(setEvents);\n        firestore.fetchSubEvents(setSubEvents);\n        firestore.registerForAuthUpdates(setUser, setLoadingUser);\n    }, [firestore])\n\n    const eventsWithSubEvents = events.length === 0 ? [] : events.map(e => ({ ...e, subEvents: subEvents.filter(s => s.parent_event_id === e.id)}));\n    const addressSuggestions = createAddressSuggestions(subEvents);\n\n    return (\n        <div className=\"back-office-wrapper\" id=\"app\">\n            <Dimmer active={loadingUser} ><Loader active={loadingUser} /></Dimmer>\n            { !loadingUser &&\n                <>\n                    <div className=\"back-office-header\"> Adminpanel </div>\n                    { !user && <LoginScreen firestore={firestore} /> }\n                    { user && <EventManager user={user} firestore={firestore} events={eventsWithSubEvents} addressSuggestions={addressSuggestions} /> }\n                </>\n            }\n        </div>\n    );\n};\n\nexport default BackOffice;","import app from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\nexport const config = {\n    apiKey: \"AIzaSyBz86p_Wdi_WBkLpcxhMaph4geiv69bcNc\",\n    authDomain: \"fadderuke-matnat.firebaseapp.com\",\n    databaseURL: \"https://fadderuke-matnat.firebaseio.com\",\n    projectId: \"fadderuke-matnat\",\n    storageBucket: \"fadderuke-matnat.appspot.com\",\n    messagingSenderId: \"909444728352\",\n    appId: \"1:909444728352:web:09ee2da490aafc00\"\n};\n\nclass Firebase {\n    constructor() {\n        app.initializeApp(config);\n        this.db = app.firestore();\n        this.auth = app.auth()\n    } \n\n    fetchEvents(setEventsCallback) {\n        this.db.collection('events').onSnapshot(snapshot => {\n            const events = snapshot.docs.map(doc => ({ id: doc.id, ...doc.data(), subEvents: [] }));\n            setEventsCallback(events);\n            console.log(\"Events fetched successfully!\");\n        })\n    }\n\n    fetchSubEvents(setSubeventsCallback) {\n        this.db.collection('subevents').onSnapshot(subSnapshot => {\n            setSubeventsCallback(subSnapshot.docs.map(d => ({ id: d.id, ...d.data() })));\n            console.log(\"Sub-events fetched successfully!\");\n        })\n    }\n\n    fetchGroupNames(setGroupNamesCallback) {\n        this.db.collection('groups').onSnapshot(snapshot => {\n            const groupNames = snapshot.docs.map(doc => {\n                return doc.data();\n            });\n            setGroupNamesCallback(groupNames)\n        }, console.log)\n    }\n\n    login(email, password, errorCallback) {\n        this.auth.signInWithEmailAndPassword(email, password).catch((error) => {\n            errorCallback(error);\n        });  \n    }\n\n    logout() {\n        this.auth.signOut();\n    }\n\n    registerForAuthUpdates(callback, loadingCallback) {\n\n        this.auth.onAuthStateChanged(user => {\n            if (user) {\n                callback(user);\n                loadingCallback(false);\n            } else {\n                callback(undefined);\n                loadingCallback(false);\n            }\n        })\n    }\n\n    fetchGroupsThatUserAdministrates(userId, callback) {\n        this.db.collection('writePermissions').doc(userId).get().then(doc => {\n            if (doc.exists) {\n                const groups = doc.data().groups;\n                if (groups === 'all') { callback(groups); }\n                else {\n                    callback(groups);    \n                }\n            }\n        })\n    }\n\n    addEvent(event, uid) {\n        if (event) {\n            return this.db.collection('events').add({...event, createdBy: uid });\n        }\n    }\n\n    removeEvent(event_id) {\n        if (event_id) {\n            return this.db.collection('events').doc(event_id).delete();\n        }\n    }\n\n    addSubEvent(event, uid) {\n        if (event) {\n            return this.db.collection('subevents').add({ ...event, createdBy: uid });\n        }\n    }\n\n    removeSubEvent(event_id) {\n        if (event_id) {\n            return this.db.collection('subevents').doc(event_id).delete();\n        }\n    }\n\n    updateEvent(event) {\n        if (event) {\n            return this.db.collection('events').doc(event.id).set(event);\n        }\n    }\n}\n\nexport default Firebase;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter as Router, Route } from 'react-router-dom';\nimport './index.css';\nimport App from './Frontend/App';\nimport * as serviceWorker from './serviceWorker';\nimport { CookiesProvider } from 'react-cookie';\nimport BackOffice from './BackOffice/BackOffice';\nimport Firebase from './Firestore';\n\nconst firestore = new Firebase();\n\nReactDOM.render(\n    <Router basename={process.env.PUBLIC_URL}>\n        <Route exact path=\"/admin\" component={() => <BackOffice firestore={firestore} />} />\n        <Route exact path=\"/\" render={() => <CookiesProvider> <App firestore={firestore}/> </CookiesProvider> } />\n    </Router>\n, document.getElementById('root'));\nserviceWorker.unregister();\n"],"sourceRoot":""}