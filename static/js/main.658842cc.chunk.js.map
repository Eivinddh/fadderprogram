{"version":3,"sources":["Frontend/Mainscreen/tekna-logo.jpg","Frontend/textResources.js","Frontend/WelcomeScreen.js","Frontend/Mainscreen/NavBarButton.js","Frontend/Mainscreen/IconLabel.js","Frontend/utils.js","Frontend/Mainscreen/Event.js","Frontend/Mainscreen/MainScreen.js","Frontend/SelectLanguage.js","Frontend/App.js","serviceWorker.js","BackOffice/LoginScreen.js","BackOffice/EditableEvent.js","BackOffice/utils.js","BackOffice/ErrorLabel.js","BackOffice/CreateNewEvent.js","BackOffice/EventManager.js","BackOffice/BackOffice.js","Firestore.js","index.js"],"names":["module","exports","__webpack_require__","p","textResources","WELCOME_NO","WELCOME_EN","WELCOME_SUBTITLE_NO","WELCOME_SUBTITLE_EN","GROUP_PLACEHOLDER_NO","GROUP_PLACEHOLDER_EN","WELCOME_SCREEN_BUTTON_LABEL_NO","WELCOME_SCREEN_BUTTON_LABEL_EN","ERROR_TITLE_NO_NO","ERROR_TITLE_EN_NO","ERROR_DAY_NO","ERROR_START_TIME_NO","ERROR_DESC_NO_NO","ERROR_DESC_EN_NO","ERROR_GROUPS_NO","ERROR_LINK_NO","selectResource","label","lang","key","concat","Frontend_textResources","state","WelcomeScreen","_ref","group","setGroup","setCookie","groupNames","_useContext","useContext","AppContext","Object","slicedToArray","_useState","useState","_useState2","selected","setSelected","groups","map","_ref2","id","label_nor","label_eng","value","sort","a","b","parseInt","customStyles","container","provided","objectSpread","width","marginBottom","option","fontSize","menu","marginTop","currentSelectedLabel","header","resource","subtitle","placeholder","buttonLabel","react_default","createElement","className","src","alt","react_select_browser_esm","inputProps","readOnly","styles","onChange","v","options","isSearchable","onClick","path","index_es","icon","faChevronRight","NavBarButton","_ref$target","target","NO","EN","callback","iconColor","day","substring","IconLabel","link","mappedIcon","RegularIcons","SolidIcons","href","weekdays","translateDay","eventTimeComparator","start_time","end_time","groupComparator","selectField","event","field","language","selectTime","_ref3","selectGroups","_ref4","indexOf","join","SubEvent","google_maps","showUrl","startsWith","Event","data","open","setOpen","title","description","from","time","address","googleMaps","linkText","chevron","Mainscreen_IconLabel","subEvents","length","e","Event_SubEvent","parent_event_id","title_NO","noisyWidth","baseWidth","Math","random","skeleton","bundle_default","height","count","MainScreen","events","Date","getDay","dayToday","setDay","scrollRef","useRef","eventList","filter","_i","_weekdays","console","error","translateDayIdx","day_NO","eventForGroupFilter","Mainscreen_Event","Fragment","navBarButtons","el","Mainscreen_NavBarButton","current","scrollTop","teknaLogo","ref","SelectLanguage","changeLanguage","position","NO_class","EN_class","React","createContext","App","props","firestore","_useCookies","useCookies","_useCookies2","cookies","removeCookie","_useState3","undefined","_useState4","setEvents","_useState5","_useState6","setGroupNames","_useState7","_useState8","setState","useEffect","fetchEvents","fetchGroupNames","Provider","Frontend_SelectLanguage","newLang","Frontend_WelcomeScreen","Mainscreen_MainScreen","Boolean","window","location","hostname","match","LoginScreen","email","setEmail","password","setPassword","setError","handleInput","handleLoginError","code","Form","Field","type","autoComplete","Button","login","CheckLabel","check","faCheck","faTimes","cx","EditableEvent","canManage","deleteCallback","editCallback","setLang","allFieldsEnglish","title_EN","from_EN","day_EN","desc_EN","hasAddress","hasGoogleMaps","EditableEvent_CheckLabel","faTrashAlt","faPen","weekdays_NO","ErrorLabel","textKey","CreateNewEvent","editing","_ref$existingEvent","existingEvent","availableGroups","cancelCallback","submitCallback","updateCallback","_existingEvent$title_","_existingEvent$title_2","_existingEvent$desc_N","desc_NO","_existingEvent$desc_E","_existingEvent$google","_existingEvent$start_","_existingEvent$end_ti","_existingEvent$day_NO","_existingEvent$linkTe","linkText_NO","_existingEvent$linkTe2","linkText_EN","titleNO","setTitleNO","titleEN","setTitleEN","descNO","setDescNO","descEN","setDescEN","_useState9","_useState10","setAddress","_useState11","_useState12","setGoogleMaps","_useState13","_useState14","linkTextNO","setLinkTextNO","_useState15","_useState16","linkTextEN","setLinkTextEN","_useState17","_useState18","setLink","_useState19","split","_useState20","startTimeHour","setStartTimeHour","_useState21","_useState22","startTimeMinute","setStartTimeMinute","_useState23","_useState24","endTimeHour","setEndTimeHour","_useState25","_useState26","endTimeMinute","setEndTimeMinute","_useState27","_useState28","setGroups","_useState29","_useState30","_useState31","timeStart","timeEnd","_useState32","errors","setErrors","_useState33","_useState34","submitting","setSubmitting","startTimeMinuteRef","endTimeMinuteRef","redStar","style","color","allGroupsSelected","generateGoogleMaps","input","toLowerCase","setTime","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","c","err","return","max","focus","onSubmit","errs","keys","reduce","acc","validateFieldsAndSetErrors","isMentorBoard","from_NO","loading","Group","grouped","BackOffice_ErrorLabel","Input","primary","TextArea","desc","disabled","content","labelPosition","Or","text","rel","Checkbox","g","toConsumableArray","handleCheckbox","checked","AddEventButton","handleClick","EventManager","user","_ref2$events","createNew","setCreateNew","editEvent","setEditEvent","eventToBeDeleted","setEventToBeDeleted","fetchGroupsThatUserAdministrates","uid","filteredEvents","g1","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","eventFilter","groupedEvents","forEach","push","groupEventsByDay","BackOffice_CreateNewEvent","scrollTo","addEvent","then","updateEvent","secondary","removeEvent","Loader","active","EventManager_AddEventButton","dayEvents","BackOffice_EditableEvent","curr","logout","BackOffice","setUser","loadingUser","setLoadingUser","registerForAuthUpdates","Dimmer","BackOffice_LoginScreen","BackOffice_EventManager","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","Firebase","classCallCheck","this","app","initializeApp","db","auth","setEventsCallback","_this","collection","onSnapshot","snapshot","docs","doc","subSnapshot","d","subEvent","subId","log","setGroupNamesCallback","errorCallback","signInWithEmailAndPassword","catch","signOut","loadingCallback","onAuthStateChanged","userId","get","exists","add","createdBy","event_id","delete","set","ReactDOM","render","react_router_dom","basename","process","react_router","exact","component","src_BackOffice_BackOffice","es6","Frontend_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.658842cc.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/tekna-logo.04ca97dd.jpg\";","const textResources = {\n    /** Welcome screen **/\n    'WELCOME_NO': 'Velkommen!',\n    'WELCOME_EN': 'Welcome!',\n    'WELCOME_SUBTITLE_NO': 'For å kunne gi deg relevant informasjon, trenger vi å vite hvilken gruppe du tilhører. Du kan gå tilbake og endre dette senere!',\n    'WELCOME_SUBTITLE_EN': 'To provide you with relevant information, we need to know which group you belong to. You can go back and change this later!',\n    'GROUP_PLACEHOLDER_NO': 'Velg gruppe...',\n    'GROUP_PLACEHOLDER_EN': 'Select group...',\n    'WELCOME_SCREEN_BUTTON_LABEL_NO': 'Jeg er klar',\n    'WELCOME_SCREEN_BUTTON_LABEL_EN': 'I\\'m ready',\n    \n    /** Form error labels **/\n    'ERROR_TITLE_NO_NO': 'Du må fylle inn norsk tittel',\n    'ERROR_TITLE_EN_NO': 'Du må fylle inn engelsk tittel',\n    'ERROR_DAY_NO': 'Du må velge en dag',\n    'ERROR_START_TIME_NO': 'Velg starttidspunkt (hh:mm)',\n    'ERROR_DESC_NO_NO': 'Du må fylle inn norsk beskrivelse',\n    'ERROR_DESC_EN_NO': 'Du må fylle inn engelsk beskrivelse',\n    'ERROR_GROUPS_NO': 'Du må velge gruppe(r) arrangementet gjelder for',\n    'ERROR_LINK_NO': 'Du kan ikke ha lenketekst uten lenke',\n}\n\nconst selectResource = (label, lang) => {\n    const key = `${label}_${lang}`;\n    if (key in textResources) \n        return textResources[key]\n    else \n        return label\n}\n\nexport default (label, state) => {\n    if (!state || !state.lang) {\n        return selectResource(label, 'NO')\n    }\n    else {\n        return selectResource(label, state.lang)\n    }  \n}","import React, { useState, useContext } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faChevronRight  } from '@fortawesome/free-solid-svg-icons';\nimport { AppContext } from './App';\nimport resource from './textResources';\nimport Select from 'react-select';\n\nconst WelcomeScreen = ({ group, setGroup, setCookie, groupNames }) => {\n    const [ state ] = useContext(AppContext);\n    const [ selected, setSelected ] = useState(group);\n    const lang = state.lang ? state.lang : 'NO'\n    const groups = groupNames \n        ? groupNames.map(\n            ({ id, label_nor, label_eng }) => (\n                {   value: id, \n                    label: lang === 'NO' ? label_nor : label_eng,\n                    label_nor: label_nor, \n                    label_eng: label_eng })\n                ).sort((a, b) => parseInt(a.value) - parseInt(b.value)) \n        : []\n    \n    const submit = () => {\n        if (selected) {\n            setGroup(selected);\n            setCookie('group', selected, { path: '/'});\n        }\n    }\n\n    const customStyles = {\n        container: provided => ({\n                ...provided,\n                width: '100%',\n                marginBottom: 20,\n        }),\n        option: provided => ({\n            ...provided,\n            fontSize: '0.8rem',\n        }),\n        menu: provided => ({\n            ...provided,\n            marginTop: 0,\n        })\n    }\n\n    const currentSelectedLabel = selected && { label: (lang === 'NO' ? selected.label_nor : selected.label_eng) };\n    const header = resource('WELCOME', state);\n    const subtitle = resource('WELCOME_SUBTITLE', state);\n    const placeholder = resource('GROUP_PLACEHOLDER', state);\n    const buttonLabel = resource('WELCOME_SCREEN_BUTTON_LABEL', state)\n\n    return (\n        <div className=\"welcome-screen\">\n            <div>\n                <h1 className=\"welcome-screen-main-title\"> { header } </h1>\n                <h3 className=\"welcome-screen-sub-title\"> { subtitle } </h3>\n            </div>\n            <img className=\"person-img\" src=\"https://image.flaticon.com/icons/svg/145/145867.svg\" alt=\"person\" />\n            <div className=\"dropdown-wrapper\">\n                <Select \n                    inputProps={{ readOnly:true }}\n                    placeholder={ placeholder } \n                    styles={ customStyles } \n                    value={ currentSelectedLabel } \n                    onChange={(v) => setSelected(v)} \n                    options={ groups } \n                    isSearchable={ false }\n                />\n                <div className=\"ready-button\" onClick={submit}>\n                    <p className=\"ready-button-text\"> { buttonLabel } <FontAwesomeIcon icon={faChevronRight} /> </p>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default WelcomeScreen;","import React from 'react';\n\nconst NavBarButton = ({target: { id, NO, EN }, lang, callback, selected}) => {\n    const iconColor = selected ? 'navbar-selected' : '';\n    const day = lang === 'NO' ? NO : EN;\n    \n    return (\n        <div className=\"navbar-button\" onClick={() => callback(id)}>\n            <div className={`${iconColor} navbar-button-icon`} />\n            <label> { day.substring(0,3) } </label>\n        </div>\n    );\n};\n\nexport default NavBarButton;","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport * as RegularIcons from '@fortawesome/free-regular-svg-icons';\nimport * as SolidIcons from '@fortawesome/free-solid-svg-icons';\n\nconst IconLabel = ({icon, label, link}) => {\n    const mappedIcon = icon in RegularIcons ? RegularIcons[icon] : SolidIcons[icon];\n\n    return (\n        <div className=\"icon-label-wrapper\">\n            <FontAwesomeIcon className=\"event-icon\" icon={mappedIcon} />\n            { !link && <label className=\"event-icon-label\"> { label } </label> }\n            { link && <a className=\"icon-link event-icon-label\" href={link}> { label } </a>}\n        </div>\n    );\n};\n\nexport default IconLabel;","export const weekdays = [ \n    { id: 0, NO: 'mandag', EN: 'monday' },\n    { id: 1, NO: 'tirsdag', EN: 'tuesday' },\n    { id: 2, NO: 'onsdag', EN: 'wednesday' },\n    { id: 3, NO: 'torsdag', EN: 'thursday' },\n    { id: 4, NO: 'fredag', EN: 'friday' },\n    { id: 5, NO: 'lørdag', EN: 'saturday' },\n    { id: 6, NO: 'søndag', EN: 'sunday' }\n];\n\nexport const translateDayIdx = day => {\n    for (const { id, NO, EN } of weekdays) {\n        if (day === NO || day === EN) \n            return id;\n    }\n    \n    console.error(`Error: Could not translate day ${day} to index`);\n    return -1;\n}\n\nexport const translateDay = day => {\n    switch(day) {\n        case 'mandag': return 'monday';\n        case 'tirsdag': return 'tuesday';\n        case 'onsdag': return 'wednesday';\n        case 'torsdag': return 'thursday';\n        case 'fredag': return 'friday';\n        case 'lørdag': return 'saturday';\n        case 'søndag': return 'sunday';\n        default: return day;\n    }\n}\n\nexport const eventTimeComparator = (a, b) => {\n    if (!a.start_time && !b.start_time) return 0;\n    if (!a.start_time) return -1;\n    if (!b.start_time) return 1;\n\n    if (a.start_time === b.start_time) {\n        if (a.end_time && !b.end_time) return -1;\n        else if (!a.end_time && b.end_time) return 1;\n        else if (!a.end_time && !b.end_time) return 0;\n        else return a.end_time > b.end_time ? 1 : (a.end_time < b.end_time ? -1 : 0);\n    } else {\n        return a.start_time > b.start_time ? 1 : -1;\n    }\n}\n\nexport const groupComparator = (a, b) => {\n    if (a === b) return 0;\n    if (a === 'all') return -1;\n    if (b === 'all') return 1;\n    return parseInt(a) - parseInt(b);\n}\n\nexport const dayToday = () => {\n    const day = new Date().getDay() - 1;\n    return day === -1 ? 6 : day;\n}\n\nexport const selectField = (event, field, lang) => {\n    const language = lang ? lang : 'NO';\n    const key = `${field}_${language}`\n\n    if (!event[key]) return '';\n    else if (field === 'from') return `${language === 'NO' ? 'Fra' : 'From'} ${event[key]}`\n    else return event[key];\n}\n\nexport const selectTime = ({ start_time, end_time }) => {\n    if (!start_time) return '';\n    if (!end_time) return start_time;\n\n    return `${start_time} – ${end_time}`;\n}\n\nexport const selectGroups = ({ groups }, lang) => {\n    const language = lang ? lang : 'NO';\n    if (groups.indexOf('all') >= 0) return language === 'NO' ? 'Alle grupper' : 'All groups';\n    \n    const prefix = language === 'NO' ? 'Gruppe ' : 'Group ';\n    return `${prefix} ${groups.join(', ')}`;   \n}","import React, { useContext, useState } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport * as SolidIcons from '@fortawesome/free-solid-svg-icons';\nimport IconLabel from './IconLabel';\nimport { AppContext } from '../App';\nimport { eventTimeComparator, selectField, selectTime, selectGroups } from '../utils';\nimport './event.scss';\n\n/****************************/\n/**** SubEvent component ****/\n/****************************/\nconst SubEvent = ({ event, event: { google_maps }, lang }) => {\n    const showUrl = google_maps && google_maps.startsWith('https');\n\n    return (\n        <div className=\"sub-event\">\n            <div className=\"sub-event-time-and-title\">\n                <p className=\"sub-event-time\"> { selectTime(event) } </p>\n                <p className=\"sub-event-title\"> { selectField(event, 'title', lang ) } </p>\n            </div>\n            { showUrl && <a className=\"sub-event-address\" href={google_maps}> { lang === 'NO' ? '(kart)' : '(map)' } </a> }\n        </div>\n    );\n}\n\n/*****************************/\n/****** Event component ******/\n/*****************************/\nconst Event = ({ data }) => {\n    const event = data;\n    const [ open, setOpen ] = useState(true);\n    const [ state ] = useContext(AppContext);\n    const lang = state.lang;\n    const title = selectField(event, 'title', lang);\n    const description = selectField(event, 'desc', lang);\n    const from = selectField(event, 'from', lang)\n    const time = selectTime(event);\n    const groups = selectGroups(event, lang);\n    const address = data.address;\n    const googleMaps = data.google_maps;\n    const link = data.link;\n    const linkText = selectField(event, 'linkText', lang);\n    const chevron = open ? SolidIcons[\"faChevronUp\"] : SolidIcons[\"faChevronDown\"];\n\n    return (\n        <div className=\"event-wrapper\">\n            <div className=\"event\">\n                <label className=\"event-title\"> { title } </label>\n                { time && <IconLabel icon=\"faClock\" label={time} />}\n                { open && address && <IconLabel icon=\"faMap\" label={address} link={googleMaps ? googleMaps : null}/> }\n                { open && data.groups && <IconLabel icon=\"faUser\" label={groups} /> }\n                { open && from && <IconLabel icon=\"faComment\" label={from} /> }\n                { open && link && linkText && <IconLabel icon=\"faLink\" label={linkText} link={link}/> }\n                { open && description && <p className=\"event-description\"> { description } </p> }\n                { open && event.subEvents && event.subEvents.length > 0 && ( \n                    <div className=\"sub-event-wrapper\">\n                        { event.subEvents\n                            .sort(eventTimeComparator)\n                            .map(e => <SubEvent key={`${e.parent_event_id}-${e.title_NO}`} event={e} lang={lang}/>) }\n                    </div>\n                )}\n                <div className=\"event-chevron\" onClick={() => setOpen(!open)}>\n                    <FontAwesomeIcon icon={chevron} />\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Event;","import React, { useState, useContext, useRef } from 'react';\nimport NavBarButton from './NavBarButton';\nimport { AppContext } from '../App';\nimport Event from './Event';\nimport Skeleton from 'react-loading-skeleton';\nimport { weekdays, translateDayIdx, dayToday, eventTimeComparator} from '../utils'\nimport teknaLogo from './tekna-logo.jpg';\nimport './Mainscreen.scss';\n\nconst noisyWidth = baseWidth => baseWidth + (-10) + Math.random()*25\n\nconst skeleton = (\n    <div className=\"skeleton-wrapper\">\n        <Skeleton key={'skel-1'} height={24} width={noisyWidth(170)}/>\n        <div className=\"icon-label-skeletons\">\n            <Skeleton key={'skel-2'} height={13} width={noisyWidth(110)}/>\n            <Skeleton key={'skel-3'} height={13} width={noisyWidth(210)}/>\n            <Skeleton key={'skel-4'} height={13} width={noisyWidth(100)}/>\n            <Skeleton key={'skel-5'} height={13} width={noisyWidth(155)}/>\n        </div>,\n        <Skeleton key={'skel-6'} height={13} width={noisyWidth(275)} count={3} />\n    </div>\n)\n\nconst eventForGroupFilter = (event, group) => {\n    if (!group || !group.value) return false; //If group is not set, show no events.\n    if (!event.groups || event.groups.indexOf('all') >= 0) return true;\n    return event.groups.indexOf(group.value) >= 0; \n}\n\nconst MainScreen = ({ group, events }) => {\n    const [ day, setDay ] = useState(dayToday())\n    const [ state ] = useContext(AppContext);\n    const TEKNA_DAY = 4; // friday\n    const scrollRef = useRef();\n    const eventList = events\n        ? events\n            .filter(e => translateDayIdx(e.day_NO) === day)\n            .filter(e => eventForGroupFilter(e, group))\n            .sort(eventTimeComparator)\n            .map(e => <Event key={e.id} data={e} />)\n        : <> { skeleton } { skeleton } </>;\n\n    const navBarButtons = weekdays.map(\n        el => <NavBarButton key={el.NO} lang={state.lang} target={el} callback={(day) => { setDay(day); scrollRef.current.scrollTop = 0; }} selected={day === el.id} />\n    )\n\n    return (\n        <div className=\"mainscreen-wrapper\">\n            <div className=\"mainscreen-header\"> \n                { <div className=\"tekna-container\"> { day === TEKNA_DAY && <img className=\"header-tekna-logo\" src={teknaLogo} alt=\"Tekna logo\" /> } </div> }\n                { <label> { state.lang === 'NO' ? group.label_nor : group.label_eng } </label> }\n            </div>\n            <div className=\"mainscreen-event-container\" ref={scrollRef}>\n                { eventList }\n                { day === TEKNA_DAY && <img className=\"event-list-tekna-logo\" src={teknaLogo} alt=\"Tekna logo\"/>}\n            </div>\n            <div className=\"mainscreen-navbar-container\">\n                { navBarButtons }\n            </div>\n        </div>\n    );\n};\n\nexport default MainScreen;","import React from 'react';\n\nconst SelectLanguage = ({ state: { lang }, changeLanguage, position }) => {\n    const NO_class = lang === 'NO' ? 'selected-lang' : '';\n    const EN_class = lang === 'EN' ? 'selected-lang' : '';\n\n    return (\n        <div className={`${position !== 'relative' ? 'language-pos-absolute' : ''} language-select`} onClick={changeLanguage}>\n            <p className={NO_class}> NO </p> <p>|</p> <p className={EN_class}> EN </p>\n        </div>\n    );\n};\n\nexport default SelectLanguage;","import React, { useState, useEffect } from 'react';\nimport { useCookies } from 'react-cookie';\nimport WelcomeScreen from './WelcomeScreen';\nimport MainScreen from './Mainscreen/MainScreen';\nimport SelectLanguage from './SelectLanguage';\nimport './App.scss';\n\nconst AppContext = React.createContext();\n\nfunction App(props) {\n  const { firestore } = props;\n  const [ cookies, setCookie, removeCookie ] = useCookies(['group', 'language']);\n  const [ group, setGroup ] = useState(cookies.group)\n  const [ events, setEvents ] = useState(undefined)\n  const [ groupNames, setGroupNames ] = useState(undefined)\n  const [ state, setState ] = useState({ lang: cookies.language ? cookies.language : 'NO' });\n  const changeLanguage = () => {\n    const newLang = state.lang === 'NO' ? 'EN' : 'NO';\n    setCookie('language', newLang)\n    setState({ ...state, lang: newLang });\n  }\n\n  useEffect(() => {\n    firestore.fetchEvents(setEvents);\n    firestore.fetchGroupNames(setGroupNames)\n  }, [firestore, setEvents, setGroupNames])\n  \n  return (\n    <AppContext.Provider value={[ state, setState ]}>\n      <div className=\"app\">\n        {  <SelectLanguage state={state} changeLanguage={changeLanguage} /> }\n        { !group && <WelcomeScreen groupNames={groupNames} setGroup={setGroup} setCookie={setCookie} /> }\n        { group && <MainScreen events={events} group={group} setGroup={setGroup} removeCookie={removeCookie}/> }\n      </div>\n    </AppContext.Provider>\n  );\n}\n\nexport { AppContext };\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { useState } from 'react';\nimport { Form, Button } from 'semantic-ui-react';\nimport './loginScreen.scss';\n\nconst LoginScreen = ({ firestore }) => {\n    const [ email, setEmail ] = useState('');\n    const [ password, setPassword ] = useState('');\n    const [ error, setError ] = useState('');\n\n    const handleInput = (event, callback) => {\n        callback(event.target.value);\n    }\n\n    const handleLoginError = ({ code }) => {\n        if (code === 'auth/user-not-found') {\n            setError(\"Denne brukeren finnes ikke. Prøv igjen!\")\n        }\n    }\n\n    const handleSubmit = () => {\n        setError('');\n        \n        if (email && password) {\n            firestore.login(email, password, handleLoginError);\n        } else {\n            setError('Fyll inn brukernavn og passord!');\n        }\n    }\n\n    return (\n        <div className=\"login-screen\">\n            <Form className=\"login-form\">\n                { error && <label className=\"login-error-label\"> { error } </label> }\n                <Form.Field>\n                    <label> Epost </label>\n                    <input \n                        value={email} \n                        onChange={e => handleInput(e, setEmail)} \n                        type=\"email\"\n                        autoComplete=\"email\"\n                        />\n                </Form.Field>\n                <Form.Field>\n                    <label> Passord </label>\n                    <input \n                        value={password} \n                        onChange={e => handleInput(e, setPassword)} \n                        type=\"password\"\n                        autoComplete=\"current-password\" \n                        />\n                </Form.Field>\n                <Button className=\"login-button\" onClick={handleSubmit}> Logg inn </Button>\n            </Form>\n        </div>\n    );\n};\n\nexport default LoginScreen;\n","import React, { useState } from 'react';\nimport { selectField, selectTime, selectGroups } from '../Frontend/utils';\nimport SelectLanguage from '../Frontend/SelectLanguage';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCheck, faTimes, faTrashAlt, faPen  } from '@fortawesome/free-solid-svg-icons';\n\nconst CheckLabel = ({ check, label }) => {\n    const icon = check ? faCheck : faTimes;\n    const cx = [ 'check-label-wrapper', check ? 'check-green' : 'times-red'].join(' ')\n\n    return (\n        <div className={cx}>\n            <FontAwesomeIcon icon={icon} />\n            <label> { label } </label>\n        </div>\n    );\n}\n\nconst EditableEvent = ({ event, canManage, deleteCallback, editCallback }) => {\n    let [ lang, setLang ] = useState('NO');\n    const changeLanguage = () => setLang(lang === 'NO' ? 'EN' : 'NO')\n    \n    const title = selectField(event, 'title', lang) ? selectField(event, 'title', lang) : `Tittel mangler (${lang})`\n    const time = selectTime(event);\n    const groups = selectGroups(event, lang);\n    const allFieldsEnglish = event.title_EN && event.from_EN && event.day_EN && event.desc_EN;\n    const hasAddress = event.address && event.address.length > 0;\n    const hasGoogleMaps = event.google_maps && event.google_maps.startsWith('https');\n\n    return (\n        <div className='editable-event-wrapper'>\n            <div className='title-language-wrapper'>\n                <label className='editable-event-title'>{ title }</label>\n                <SelectLanguage state={{lang: lang}} changeLanguage={changeLanguage} position='relative'/>\n            </div>\n            <label className='editable-event-info-label'>{ groups }</label>\n            <label className='editable-event-info-label'>{ time }</label>\n            { event.address && <label className='editable-event-info-label'> Addresse: { event.address }</label> }\n            <div className='flex-row'>\n                { hasAddress && <CheckLabel check={hasGoogleMaps} label={hasGoogleMaps ? 'Har google maps' : 'Mangler google maps'} /> }\n                { !hasAddress && <CheckLabel check={hasAddress} label='Mangler adresse' /> }\n                { !allFieldsEnglish && <CheckLabel check={allFieldsEnglish} label='Mangler oversettelse' /> }\n                { canManage && <FontAwesomeIcon className=\"trash-icon\" icon={faTrashAlt} onClick={() => deleteCallback(event.id) } /> } \n                { canManage && <FontAwesomeIcon className=\"pen-icon\" icon={faPen} onClick={() => editCallback(event.id) } /> } \n            </div>\n        </div>\n    );\n};\n\nexport default EditableEvent;","import { eventTimeComparator } from \"../Frontend/utils\";\n\nexport const eventFilter = (group, e) => {\n    if (e.groups.indexOf('all') >= 0 || group === 'all') return true;\n\n    for (const g1 of group) {\n        for (const g2 of e.groups) {\n            if (g1 === g2) return true;\n        }\n    }\n}\n\nexport const weekdays_NO = ['mandag', 'tirsdag', 'onsdag', 'torsdag', 'fredag', 'lørdag', 'søndag'];\n\nexport const groupEventsByDay = events => {\n    const grouped = {}\n    weekdays_NO.forEach(day => grouped[day] = [])\n    events.forEach(e => grouped[e.day_NO].push(e));\n    Object.keys(grouped).forEach(key => grouped[key].sort(eventTimeComparator));\n\n    return grouped;\n}\n","import React from 'react';\nimport resource from '../Frontend/textResources';\n\nconst ErrorLabel = ({ textKey }) => {\n    return (\n        <div className=\"error-label\">\n            { resource(textKey) }\n        </div>\n    );\n};\n\nexport default ErrorLabel;    ","import React, { useState, useRef } from 'react';\nimport { Form, TextArea, Button, Input, Checkbox } from 'semantic-ui-react';\nimport { translateDay, groupComparator } from '../Frontend/utils';\nimport ErrorLabel from './ErrorLabel';\nimport './createNewEvent.scss';\n\nconst CreateNewEvent = ({ editing, existingEvent = {}, availableGroups, cancelCallback, submitCallback, updateCallback }) => {\n    const { title_NO = '', title_EN = '', desc_NO = '', desc_EN = '', google_maps = '', start_time = '', end_time = '', day_NO = '', linkText_NO='', linkText_EN=''} = existingEvent;\n    const [ titleNO, setTitleNO ] = useState(title_NO);\n    const [ titleEN, setTitleEN ] = useState(title_EN);\n    const [ descNO, setDescNO ] = useState(desc_NO);\n    const [ descEN, setDescEN ] = useState(desc_EN);\n    const [ address, setAddress ] = useState(existingEvent.address ? existingEvent.address : '');\n    const [ googleMaps, setGoogleMaps ] = useState(google_maps);\n    const [ linkTextNO, setLinkTextNO ] = useState(linkText_NO);\n    const [ linkTextEN, setLinkTextEN ] = useState(linkText_EN);\n    const [ link, setLink ] = useState(existingEvent.link ? existingEvent.link : '');\n    const [ startTimeHour, setStartTimeHour ] = useState(start_time.length === 5 ? start_time.split(':')[0] : '')\n    const [ startTimeMinute, setStartTimeMinute ] = useState(start_time.length === 5 ? start_time.split(':')[1] : '')\n    const [ endTimeHour, setEndTimeHour ] = useState(end_time.length === 5 ? end_time.split(':')[0] : '')\n    const [ endTimeMinute, setEndTimeMinute ] = useState(end_time.length === 5 ? end_time.split(':')[1] : '')\n    const [ groups, setGroups ] = useState(existingEvent.groups ? existingEvent.groups : []);\n    const [ day, setDay ] = useState(day_NO)\n    const [ errors, setErrors ] = useState({ titleNO: false, titleEN: false, descNO: false, descEN: false, day: false, address: false, timeStart: false, timeEnd: false, groups: false })\n    const [ submitting, setSubmitting ] = useState(false);\n\n    const startTimeMinuteRef = useRef(null);\n    const endTimeMinuteRef = useRef(null);\n\n    const redStar = <span style={{ color: 'red' } }>*</span>\n    const allGroupsSelected = groups.indexOf('all') >= 0;\n\n    const generateGoogleMaps = input => {\n        if (input.length < 3) { setGoogleMaps(''); return; }\n        if (input.toLowerCase().indexOf('bergen') === -1) { \n             input = input + ', Bergen' \n        }\n\n        setGoogleMaps(`https://www.google.com/maps/search/?api=1&query=${input}`);\n    }\n\n    const setTime = (event, field) => {\n        const input = event.target.value;\n        for (const c of input.split('')) { if (c < '0' || c > '9') return }\n        const max = field === 'startTimeHour' || field === 'endTimeHour' ? 23 : 59;\n        if (input.length > 2 || parseInt(input) > max) return;\n\n        if (field === 'startTimeHour') { \n            if (input.length === 2) startTimeMinuteRef.current.focus();\n            setStartTimeHour(input);\n        }\n        if (field === 'startTimeMinute') setStartTimeMinute(input);\n        if (field === 'endTimeHour') {\n            if (input.length === 2) endTimeMinuteRef.current.focus();\n            setEndTimeHour(input);\n        }\n        if (field === 'endTimeMinute') setEndTimeMinute(input);\n    }\n\n    const handleCheckbox = group => {\n        setErrors({ ...errors, groups: false })\n        if (group === 'all' && groups.indexOf('all') === -1) { \n            setGroups(['all']);\n        } else if (groups.indexOf(group) >= 0) {\n            setGroups(groups.filter(g => g !== group));\n        } else {\n            setGroups([ group, ...groups ]);\n        }\n    }\n\n    const validateFieldsAndSetErrors = callback => {\n        const errs = {\n            titleNO: titleNO === '',\n            titleEN: titleEN === '',\n            descNO: descNO === '',\n            descEN: descEN === '',\n            timeStart: startTimeHour.length !== 2 || startTimeMinute.length !== 2,\n            timeEnd: endTimeHour !== '' && (endTimeHour.length !== 2 || endTimeMinute.length !== 2),\n            day: day === '' || ['mandag', 'tirsdag', 'onsdag', 'torsdag', 'fredag', 'lørdag', 'søndag'].indexOf(day) === -1,\n            link: (linkTextEN || linkTextNO) && !link,\n            groups: groups.length === 0,\n        };\n\n        callback(errs);\n        return !Object.keys(errs).reduce((acc, key) => errs[key] || acc, false);\n    }\n\n    const submit = () => {\n        if (validateFieldsAndSetErrors(setErrors)) {\n            setSubmitting(true);\n            const isMentorBoard = availableGroups.indexOf('all') >= 0;\n            const event = {\n                title_NO: titleNO,\n                title_EN: titleEN,\n                desc_NO: descNO, \n                desc_EN: descEN,\n                day_NO: day,\n                day_EN: translateDay(day),\n                from_NO: isMentorBoard ? 'fadderstyret' : 'gruppeleder',\n                from_EN: isMentorBoard ? 'the mentor board' : 'group leader',\n                start_time: `${startTimeHour}:${startTimeMinute}`,\n                groups: groups.sort(groupComparator),\n            };\n\n            if (address.length >= 3) { event.address = address; }\n            if (endTimeHour.length === 2 && endTimeMinute.length === 2) { event.end_time = `${endTimeHour}:${endTimeMinute}` }\n            if (googleMaps && googleMaps.startsWith('https://')) { event.google_maps = googleMaps; }\n            if (link) {\n                event.link = link;\n                if (linkTextNO) event.linkText_NO = linkTextNO;\n                if (linkTextEN) event.linkText_EN = linkTextEN;\n            }\n            \n            if (editing) {\n                updateCallback({ ...event, id: existingEvent.id });\n            } else {\n                submitCallback(event);\n            }\n        }\n    }\n\n    return (\n        <div className=\"flex-column create-event-wrapper\">\n            <div className=\"create-event-header\"> \n                Legg til et nytt event. Felter merket med {redStar} er obligatoriske. \n            </div>\n            <Form className=\"create-event-form\" onSubmit={submit} loading={!availableGroups || submitting}>\n\n                { /** TITTEL  **/ }\n                <Form.Group grouped className=\"form-input-group\">\n                    <label className=\"form-field-header\"> Tittel {redStar} </label>\n                    <Form.Field error={errors.titleNO}>\n                        <label className=\"form-field-title\"> Norsk </label>\n                        { errors.titleNO && <ErrorLabel textKey={'ERROR_TITLE_NO'} /> }\n                        <Input \n                            value={titleNO} \n                            onChange={e => { setTitleNO(e.target.value); setErrors({ ...errors, titleNO: false }) }} \n                            type=\"text\"\n                            autoComplete=\"off\"\n                        />\n                    </Form.Field>\n                    <Form.Field error={errors.titleEN}>\n                        <label className=\"form-field-title\"> Engelsk </label>\n                        { errors.titleEN && <ErrorLabel textKey={'ERROR_TITLE_EN'} /> }\n                        <input \n                            value={titleEN} \n                            onChange={e => { setTitleEN(e.target.value); setErrors({ ...errors, titleEN: false }) }}  \n                            type=\"text\"\n                            autoComplete=\"off\"\n                        />\n                    </Form.Field>\n                </Form.Group>\n\n                { /** DAG **/ }\n                <Form.Field error={errors.day}>\n                    <label className=\"form-field-header\"> Dag { redStar } </label>\n                    { errors.day && <ErrorLabel textKey={'ERROR_DAY'} /> }\n                    <Button.Group className=\"full-width\" >\n                        <Button primary={day === 'mandag'} type='button' onClick={() => { setDay('mandag'); setErrors({ ...errors, day: false }) }}> Man </Button>\n                        <Button primary={day === 'tirsdag'} type='button' onClick={() => { setDay('tirsdag'); setErrors({ ...errors, day: false }) }}> Tirs </Button>\n                        <Button primary={day === 'onsdag'} type='button' onClick={() => { setDay('onsdag'); setErrors({ ...errors, day: false })}}> Ons </Button>\n                    </Button.Group>\n                    <Button.Group className=\"full-width margin-top-small\">\n                        <Button primary={day === 'torsdag'} type='button' onClick={() => { setDay('torsdag'); setErrors({ ...errors, day: false })}}> Tors </Button>\n                        <Button primary={day === 'fredag'} type='button' onClick={() => { setDay('fredag'); setErrors({ ...errors, day: false })}}> Fre </Button>\n                        <Button primary={day === 'lørdag'} type='button' onClick={() => { setDay('lørdag'); setErrors({ ...errors, day: false })}}> Lør </Button>\n                    </Button.Group>\n                    <Button.Group className=\"full-width margin-top-small\">\n                        <Button primary={day === 'søndag'} type='button' onClick={() => { setDay('søndag'); setErrors({ ...errors, day: false })}}> Søndag </Button>\n                    </Button.Group>\n\n                </Form.Field>\n\n                { /** TID **/ }\n                <Form.Group grouped className=\"form-input-group\">\n                    <label className=\"form-field-header\"> Tid </label>\n                    <div className=\"flex-row\">\n                        <div className=\"flex-column\">\n                            <div className=\"form-field-title\"> Start {redStar} </div>\n                            { errors.timeStart && <ErrorLabel textKey={'ERROR_START_TIME'} /> }\n                            <div className=\"flex-row\">\n                                <Form.Field error={errors.timeStart}>\n                                    <input \n                                        className=\"time-input\"\n                                        placeholder=\"00\"\n                                        value={startTimeHour} \n                                        onChange={e => { setTime(e, 'startTimeHour'); setErrors({ ...errors, timeStart: false })} }\n                                        type=\"text\"\n                                        autoComplete=\"off\"\n                                    />\n                                </Form.Field>\n                                <div className=\"time-separator flex-row align-center justify-center\">:</div>\n                                <Form.Field error={errors.timeStart}>\n                                    <input \n                                        ref={startTimeMinuteRef}\n                                        className=\"time-input\"\n                                        placeholder=\"00\"\n                                        value={startTimeMinute} \n                                        onChange={e => { setTime(e, 'startTimeMinute'); setErrors({ ...errors, timeStart: false })} }\n                                        type=\"text\"\n                                        autoComplete=\"off\"\n                                    />\n                                </Form.Field>\n                            </div>\n                        </div>\n                        <div className=\"flex-column margin-left-large\">\n                            <div className=\"form-field-title\"> Slutt </div>\n                            <div className=\"flex-row\">\n                                <Form.Field error={errors.timeEnd}>\n                                    <input \n                                        className=\"time-input\"\n                                        placeholder=\"00\"\n                                        value={endTimeHour} \n                                        onChange={e => { setTime(e, 'endTimeHour'); setErrors({ ...errors, timeEnd: false })} }\n                                        type=\"text\"\n                                        autoComplete=\"off\"\n                                    />\n                                </Form.Field>\n                                <div className=\"time-separator flex-row align-center justify-center\">:</div>\n                                <Form.Field error={errors.timeEnd}>\n                                    <input \n                                        ref={endTimeMinuteRef}\n                                        className=\"time-input\"\n                                        placeholder=\"00\"\n                                        value={endTimeMinute} \n                                        onChange={e => { setTime(e, 'endTimeMinute'); setErrors({ ...errors, timeEnd: false })} }\n                                        type=\"text\"\n                                        autoComplete=\"off\"\n                                    />\n                                </Form.Field>\n                            </div>\n                        </div>\n                    </div>\n                </Form.Group>\n\n                { /** BESKRIVELSE  **/ }\n                <Form.Group grouped className=\"form-input-group\">\n                    <label className=\"form-field-header\"> Beskrivelse {redStar} </label>\n                    <Form.Field error={errors.descNO}>\n                        <label className=\"form-field-title\"> Norsk </label>\n                        { errors.descNO && <ErrorLabel textKey={'ERROR_DESC_NO'} /> }\n                        <TextArea error={errors.desc} value={descNO}  onChange={e => { setDescNO(e.target.value); setErrors({ ...errors, descNO: false }) }}/>\n                    </Form.Field>\n                    <Form.Field error={errors.descEN}>\n                        <label className=\"form-field-title\"> Engelsk </label>\n                        { errors.descEN && <ErrorLabel textKey={'ERROR_DESC_EN'} /> }\n                        <TextArea error={errors.desc} value={descEN} onChange={e => { setDescEN(e.target.value); setErrors({ ...errors, descEN: false }) }}/>\n                    </Form.Field>\n                </Form.Group>\n\n                { /** STED  **/ }\n                <Form.Group grouped className=\"form-input-group\">\n                    <Form.Field>\n                        <label className=\"form-field-header\"> Adresse </label>\n                        <input \n                            value={address} \n                            onChange={e => {\n                                    setAddress(e.target.value);\n                                    if (googleMaps) { generateGoogleMaps(e.target.value); }\n                                }\n                            } \n                            type=\"text\"\n                            autoComplete=\"off\"\n                        />\n                    </Form.Field>\n                        { !googleMaps &&  \n                            <div className=\"flex-row align-center\">\n                                <Button\n                                    type='button'\n                                    disabled={address.length < 3}\n                                    content={'Generer lenke til Google maps'} \n                                    icon='map' labelPosition='left' \n                                    onClick={() => generateGoogleMaps(address)} \n                                    primary\n                                /> \n                            </div> \n                        }\n                    { googleMaps && \n                        <Button.Group className=\"margin-top-small\">\n                            <Button type='button' onClick={() => setGoogleMaps('')}>Fjern</Button>\n                            <Button.Or text='' />\n                            <Button type='button' primary> \n                                <a className=\"google-maps-link\" href={googleMaps} rel=\"noopener noreferrer\" target=\"_blank\"> \n                                    Test lenken \n                                </a> \n                            </Button>\n                        </Button.Group> \n                    }\n                </Form.Group>\n\n                { /** LINK **/}\n                <Form.Group grouped className=\"form-input-group\">\n                    <label className=\"form-field-header\"> Lenke </label>\n                    <Form.Field>\n                        <label className=\"form-field-title\"> Norsk tekst som vises </label>\n                        <input \n                            value={linkTextNO} \n                            onChange={e => setLinkTextNO(e.target.value) } \n                            type=\"text\"\n                            autoComplete=\"off\"\n                        />\n                    </Form.Field>\n                    <Form.Field>\n                        <label className=\"form-field-title\"> Engelsk tekst som vises </label>\n                        <input \n                            value={linkTextEN} \n                            onChange={e => setLinkTextEN(e.target.value) } \n                            type=\"text\"\n                            autoComplete=\"off\"\n                        />\n                    </Form.Field>\n                    <Form.Field  error={errors.link}>\n                        <label className=\"form-field-title\"> Lenke </label>\n                        { errors.link && <ErrorLabel textKey={'ERROR_LINK'} /> }\n                        <input \n                            value={link} \n                            onChange={e => { setLink(e.target.value); setErrors({ ...errors, link: false }); }} \n                            type=\"text\"\n                            autoComplete=\"off\"\n                        />\n                    </Form.Field>\n                </Form.Group>\n\n                { /** GROUPS **/ }\n                <Form.Group grouped className=\"form-input-group\">\n                    <label className={'form-field-header'}> Gjelder for gruppe(r): {redStar} </label>\n                    { errors.groups && <ErrorLabel textKey={'ERROR_GROUPS'} /> }\n                    <Form.Field>\n                        { availableGroups.map(group => \n                            <Checkbox key={group} \n                                label={group === 'all' ? 'Alle grupper' : `Gruppe ${group}`}\n                                className={`group-checkbox ${group === 'all' ? 'full-width' : ''} ${errors.groups ? 'checkbox-error' : ''}`}\n                                onClick={() => handleCheckbox(group)}\n                                disabled={group !== 'all' && allGroupsSelected}\n                                checked={allGroupsSelected || groups.indexOf(group) >= 0}\n                            />)\n                        }\n                    </Form.Field>\n                </Form.Group>\n\n                { /** SUBMIT **/ }\n                <Button type='button' onClick={() => cancelCallback()} className=\"full-width margin-bottom-small margin-top-medium\">\n                    Avbryt\n                </Button>\n                <Button primary type='submit' className=\"full-width margin-bottom-large\">\n                    { editing ? 'Lagre' : 'Ferdig' } \n                </Button>\n            </Form>\n\n        </div>\n    );\n};\n\nexport default CreateNewEvent;","import React, { useState, useEffect } from 'react';\nimport EditableEvent from './EditableEvent';\nimport { eventFilter, groupEventsByDay, weekdays_NO } from './utils';\nimport { Loader, Button } from 'semantic-ui-react';\nimport CreateNewEvent from './CreateNewEvent';\nimport './eventManager.scss';\n\nconst AddEventButton = ({ handleClick }) => {\n    return <div className=\"add-event-button\" onClick={handleClick}><p>+</p></div>\n}\n\nconst EventManager = ({ user, events = [], firestore }) => {\n    const [ groups, setGroups ] = useState(undefined);\n    const [ createNew, setCreateNew ] = useState(false);\n    const [ editEvent, setEditEvent ] = useState(undefined);\n    const [ eventToBeDeleted, setEventToBeDeleted ] = useState(undefined);\n\n    useEffect(() => {\n        firestore.fetchGroupsThatUserAdministrates(user.uid, setGroups);\n    }, [firestore, user.uid]);\n\n    const filteredEvents = !groups ? [] : events.filter(e => eventFilter(groups, e));\n    const groupedEvents = groupEventsByDay(filteredEvents);\n    const logout = () => firestore.logout();\n\n    if (createNew || editEvent) {\n        return <CreateNewEvent \n                    existingEvent={events.filter(e => e.id === editEvent)[0]}\n                    editing={editEvent !== undefined}\n                    cancelCallback={() => { setCreateNew(false); setEditEvent(undefined); window.scrollTo(0,0); } } \n                    submitCallback={event => { \n                        firestore.addEvent(event, user.uid).then(setCreateNew(false)); \n                        window.scrollTo(0,0);\n                    }}\n                    updateCallback={event => {\n                        firestore.updateEvent(event).then(setEditEvent(undefined));\n                        window.scrollTo(0,0);\n                    }}\n                    availableGroups={groups} \n                />\n    }\n\n    return (\n        <div className=\"event-manager-wrapper\">\n            { eventToBeDeleted && \n                <div className=\"delete-event-confirmation-dimmer\"> \n                    <div className=\"delete-event-confirmation-box\"> \n                        <div className=\"delete-event-content\"> \n                            <label>\n                                Er du sikker på at du vil slette <span className=\"font-bold\">{filteredEvents.filter(e => e.id === eventToBeDeleted)[0].title_NO}</span> ?\n                            </label>\n                            <div className=\"full-width flex-row\">\n                                <Button secondary onClick={() => setEventToBeDeleted(undefined)}> Nei, gå tilbake </Button>\n                                <Button primary onClick={() => { firestore.removeEvent(eventToBeDeleted); setEventToBeDeleted(undefined); }}> Ja, slett! </Button>\n                            </div>\n                        </div>\n                    </div>\n                </div>}\n            <Loader active={!groups} />\n            <div className=\"add-event-button-wrapper\">\n                <AddEventButton handleClick={() => setCreateNew(true) } />\n            </div>\n            { groups && events && weekdays_NO.map(day => {\n                const dayEvents = groupedEvents[day].map(e => \n                    <EditableEvent \n                        key={e.id} event={e} \n                        canManage={e.groups.reduce((acc, curr) => acc && groups.indexOf(curr) >= 0 ,true)} \n                        deleteCallback={(id) => setEventToBeDeleted(id)}\n                        editCallback={(id) => setEditEvent(id) } />\n                );\n                return (\n                    <div key={day} className=\"event-group\">\n                        <div className=\"event-group-day-label\"> { day } </div>\n                        { dayEvents }\n                    </div>\n                )\n            })}\n            <Button type='button' className=\"full-width margin-top-medium margin-bottom-large\" primary onClick={logout}> Logg ut </Button>            \n        </div>\n    );\n};\n\nexport default EventManager;","import React, { useState, useEffect } from 'react';\nimport LoginScreen from './LoginScreen';\nimport EventManager from './EventManager';\nimport { Loader, Dimmer } from 'semantic-ui-react';\nimport './backOffice.scss';\n\nconst BackOffice = ({ firestore }) => {\n    const [ events, setEvents ] = useState(undefined);\n    const [ user, setUser ] = useState(undefined);\n    const [ loadingUser, setLoadingUser ] = useState(true);\n\n    useEffect(() => {\n        firestore.fetchEvents(setEvents);\n        firestore.registerForAuthUpdates(setUser, setLoadingUser);\n    }, [firestore])\n\n    return (\n        <div className=\"back-office-wrapper\">\n            <Dimmer active={loadingUser} ><Loader active={loadingUser} /></Dimmer>\n            { !loadingUser &&\n                <>\n                    <div className=\"back-office-header\"> Adminpanel </div>\n                    { !user && <LoginScreen firestore={firestore} /> }\n                    { user && <EventManager user={user} firestore={firestore} events={events} /> }\n                </>\n            }\n        </div>\n    );\n};\n\nexport default BackOffice;","import app from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\nexport const config = {\n    apiKey: \"AIzaSyBz86p_Wdi_WBkLpcxhMaph4geiv69bcNc\",\n    authDomain: \"fadderuke-matnat.firebaseapp.com\",\n    databaseURL: \"https://fadderuke-matnat.firebaseio.com\",\n    projectId: \"fadderuke-matnat\",\n    storageBucket: \"fadderuke-matnat.appspot.com\",\n    messagingSenderId: \"909444728352\",\n    appId: \"1:909444728352:web:09ee2da490aafc00\"\n};\n\nclass Firebase {\n    constructor() {\n        app.initializeApp(config);\n        this.db = app.firestore();\n        this.auth = app.auth()\n    } \n\n    fetchEvents(setEventsCallback) {\n        this.db.collection('events').onSnapshot(snapshot => {\n            const events = snapshot.docs.map(doc => ({ id: doc.id, ...doc.data(), subEvents: [] }));\n            this.db.collection('subevents').onSnapshot(subSnapshot => {\n                subSnapshot.docs.map(d => d.data()).forEach(subEvent => {\n                    const subId = subEvent.parent_event_id;\n                    for (const event of events) {\n                        if (event.id === subId) {\n                            event.subEvents.push(subEvent);\n                        }\n                    }\n                }, console.log)\n                setEventsCallback(events);\n            }, console.log)\n        })\n    }\n\n    fetchGroupNames(setGroupNamesCallback) {\n        this.db.collection('groups').onSnapshot(snapshot => {\n            const groupNames = snapshot.docs.map(doc => {\n                return doc.data();\n            });\n            setGroupNamesCallback(groupNames)\n        }, console.log)\n    }\n\n    login(email, password, errorCallback) {\n        this.auth.signInWithEmailAndPassword(email, password).catch((error) => {\n            errorCallback(error);\n        });  \n    }\n\n    logout() {\n        this.auth.signOut();\n    }\n\n    registerForAuthUpdates(callback, loadingCallback) {\n\n        this.auth.onAuthStateChanged(user => {\n            if (user) {\n                callback(user);\n                loadingCallback(false);\n            } else {\n                callback(undefined);\n                loadingCallback(false);\n            }\n        })\n    }\n\n    fetchGroupsThatUserAdministrates(userId, callback) {\n        this.db.collection('writePermissions').doc(userId).get().then(doc => {\n            if (doc.exists) {\n                const groups = doc.data().groups;\n                if (groups === 'all') { callback(groups); }\n                else {\n                    callback(groups);    \n                }\n            }\n        })\n    }\n\n    addEvent(event, uid) {\n        if (event) {\n            return this.db.collection('events').add({...event, createdBy: uid })\n        }\n    }\n\n    removeEvent(event_id) {\n        if (event_id) {\n            return this.db.collection('events').doc(event_id).delete();\n        }\n    }\n\n    updateEvent(event) {\n        if (event) {\n            return this.db.collection('events').doc(event.id).set(event);\n        }\n    }\n}\n\nexport default Firebase;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter as Router, Route } from 'react-router-dom';\nimport './index.css';\nimport App from './Frontend/App';\nimport * as serviceWorker from './serviceWorker';\nimport { CookiesProvider } from 'react-cookie';\nimport BackOffice from './BackOffice/BackOffice';\nimport Firebase from './Firestore';\n\nconst firestore = new Firebase();\n\nReactDOM.render(\n    <Router basename={process.env.PUBLIC_URL}>\n        <Route exact path=\"/admin\" component={() => <BackOffice firestore={firestore} />} />\n        <Route exact path=\"/\" render={() => <CookiesProvider> <App firestore={firestore}/> </CookiesProvider> } />\n    </Router>\n, document.getElementById('root'));\nserviceWorker.unregister();\n"],"sourceRoot":""}