{"version":3,"sources":["Frontend/Mainscreen/tekna-logo.jpg","Frontend/textResources.js","Frontend/WelcomeScreen.js","Frontend/Mainscreen/NavBarButton.js","Frontend/Mainscreen/IconLabel.js","Frontend/utils.js","Frontend/Mainscreen/Event.js","Frontend/Mainscreen/MainScreen.js","Frontend/SelectLanguage.js","Frontend/App.js","serviceWorker.js","BackOffice/LoginScreen.js","BackOffice/EditableEvent.js","BackOffice/utils.js","BackOffice/ErrorLabel.js","BackOffice/TimeInput.js","BackOffice/CreateSubevents.js","BackOffice/CreateNewEvent.js","BackOffice/EventManager.js","BackOffice/BackOffice.js","Firestore.js","index.js"],"names":["module","exports","__webpack_require__","p","textResources","WELCOME_NO","WELCOME_EN","WELCOME_SUBTITLE_NO","WELCOME_SUBTITLE_EN","GROUP_PLACEHOLDER_NO","GROUP_PLACEHOLDER_EN","WELCOME_SCREEN_BUTTON_LABEL_NO","WELCOME_SCREEN_BUTTON_LABEL_EN","ERROR_TITLE_NO_NO","ERROR_TITLE_EN_NO","ERROR_DAY_NO","ERROR_START_TIME_NO","ERROR_END_TIME_NO","ERROR_DESC_NO_NO","ERROR_DESC_EN_NO","ERROR_GROUPS_NO","ERROR_LINK_NO","EMERGENCY_PHONE_NUMBER_NO","EMERGENCY_PHONE_NUMBER_EN","PHONE_NUMBER_NO","PHONE_NUMBER_EN","selectResource","label","lang","key","concat","Frontend_textResources","state","WelcomeScreen","_ref","group","setGroup","setCookie","groupNames","_useContext","useContext","AppContext","Object","slicedToArray","_useState","useState","_useState2","selected","setSelected","groups","map","_ref2","id","label_nor","label_eng","value","sort","a","b","parseInt","customStyles","container","provided","objectSpread","width","marginBottom","option","fontSize","menu","marginTop","currentSelectedLabel","header","resource","subtitle","placeholder","buttonLabel","react_default","createElement","className","src","alt","react_select_browser_esm","inputProps","readOnly","styles","onChange","v","options","isSearchable","isDisabled","length","onClick","oneWeek","Date","setDate","getDate","path","expires","index_es","icon","faChevronRight","NavBarButton","_ref$target","target","NO","EN","callback","iconColor","day","substring","IconLabel","link","mappedIcon","RegularIcons","SolidIcons","href","weekdays","translateDay","eventTimeComparator","start_time","end_time","groupComparator","selectField","event","field","language","selectTime","_ref3","selectGroups","_ref4","indexOf","join","SubEvent","google_maps","showUrl","startsWith","Event","data","open","setOpen","title","description","from","time","address","googleMaps","linkText","chevron","Mainscreen_IconLabel","subEvents","e","Event_SubEvent","parent_event_id","title_NO","noisyWidth","baseWidth","Math","random","skeleton","bundle_default","height","count","MainScreen","events","getDay","dayToday","setDay","scrollRef","useRef","eventList","filter","_i","_weekdays","console","error","translateDayIdx","day_NO","eventForGroupFilter","Mainscreen_Event","Fragment","navBarButtons","el","Mainscreen_NavBarButton","current","scrollTop","faPhone","teknaLogo","ref","SelectLanguage","changeLanguage","position","NO_class","EN_class","React","createContext","App","props","firestore","_useCookies","useCookies","_useCookies2","cookies","removeCookie","_useState3","_useState4","setEvents","_useState5","_useState6","setSubEvents","_useState7","_useState8","setGroupNames","_useState9","_useState10","setState","useEffect","fetchEvents","fetchSubEvents","fetchGroupNames","eventsWithSubevents","s","Provider","Frontend_SelectLanguage","newLang","Frontend_WelcomeScreen","Mainscreen_MainScreen","Boolean","window","location","hostname","match","LoginScreen","email","setEmail","password","setPassword","setError","scrollTo","handleInput","handleLoginError","code","Form","Field","type","autoComplete","Button","login","CheckLabel","check","faCheck","faTimes","cx","EditableEvent","canManage","deleteCallback","editCallback","setLang","allFieldsEnglish","title_EN","from_EN","day_EN","desc_EN","hasAddress","hasGoogleMaps","EditableEvent_CheckLabel","faTrashAlt","faPen","weekdays_NO","ErrorLabel","textKey","TimeInput","hour","setHour","minutes","setMinute","mandatory","containerStyle","minuteRef","BackOffice_ErrorLabel","Input","CreateSubevents","existingEvents","submitCallback","cancelCallback","addressSuggestions","addingNew","setAddingNew","hours","startTime","setStartTime","endTime","setEndTime","titleNO","setTitleNO","titleEN","setTitleEN","_useState11","_useState12","setAddress","_useState13","_useState14","errors","setErrors","_useState15","_useState16","setGoogleMaps","_useState17","undefined","_useState18","suggestedAddress","setSuggestedAddress","startTimeMinuteRef","endTimeMinuteRef","handleTimeInput","f","t","input","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","split","Symbol","iterator","next","done","c","err","return","focus","handleAddressInput","toLowerCase","handleFieldInput","blankOutForm","primary","BackOffice_TimeInput","style","color","x","textDecoration","secondary","keys","reduce","acc","validate","CreateNewEvent","editing","_ref$existingEvent","existingEvent","availableGroups","updateCallback","submitSubeventCallback","deleteSubeventCallback","_existingEvent$title_","_existingEvent$title_2","_existingEvent$desc_N","desc_NO","_existingEvent$desc_E","_existingEvent$google","_existingEvent$start_","_existingEvent$end_ti","_existingEvent$day_NO","_existingEvent$linkTe","linkText_NO","_existingEvent$linkTe2","linkText_EN","descNO","setDescNO","descEN","setDescEN","linkTextNO","setLinkTextNO","linkTextEN","setLinkTextEN","setLink","_useState19","_useState20","startTimeHour","setStartTimeHour","_useState21","_useState22","startTimeMinute","setStartTimeMinute","_useState23","_useState24","endTimeHour","setEndTimeHour","_useState25","_useState26","endTimeMinute","setEndTimeMinute","_useState27","_useState28","setGroups","_useState29","_useState30","_useState31","timeStart","timeEnd","_useState32","_useState33","_useState34","submitting","setSubmitting","_useState35","_useState36","addSubevents","setAddSubevents","redStar","allGroupsSelected","generateGoogleMaps","setTime","max","handleCheckbox","g","toConsumableArray","BackOffice_CreateSubevents","onSubmit","errs","validateFieldsAndSetErrors","isMentorBoard","from_NO","forEach","log","loading","Group","grouped","TextArea","desc","disabled","content","labelPosition","Or","text","Checkbox","checked","Modal","setAppElement","defaultStyles","overlay","backgroundColor","AddEventButton","handleClick","EventManager","user","_ref2$events","createNew","setCreateNew","editEvent","setEditEvent","eventToBeDeleted","setEventToBeDeleted","showOnly","setShowOnly","setFilter","fetchGroupsThatUserAdministrates","uid","filteredEvents","g1","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","eventFilter","groupedEvents","push","groupEventsByDay","BackOffice_CreateNewEvent","addEvent","then","addSubEvent","event_id","removeSubEvent","updateEvent","deleteEvent","removeEvent","onKeyPress","lib_default","isOpen","Loader","active","EventManager_AddEventButton","Radio","dayEvents","BackOffice_EditableEvent","curr","logout","BackOffice","setUser","loadingUser","setLoadingUser","registerForAuthUpdates","eventsWithSubEvents","suggestions","createAddressSuggestions","Dimmer","BackOffice_LoginScreen","BackOffice_EventManager","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","Firebase","classCallCheck","this","app","initializeApp","db","auth","setEventsCallback","collection","onSnapshot","snapshot","docs","doc","setSubeventsCallback","subSnapshot","d","setGroupNamesCallback","errorCallback","signInWithEmailAndPassword","catch","signOut","loadingCallback","onAuthStateChanged","userId","get","exists","add","createdBy","delete","set","ReactDOM","render","react_router_dom","basename","process","react_router","exact","component","src_BackOffice_BackOffice","es6","Frontend_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0375607e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/tekna-logo.04ca97dd.jpg\";","const textResources = {\n    /** Welcome screen **/\n    'WELCOME_NO': 'Velkommen!',\n    'WELCOME_EN': 'Welcome!',\n    'WELCOME_SUBTITLE_NO': 'For å kunne gi deg relevant informasjon, trenger vi å vite hvilken gruppe du tilhører. Du kan gå tilbake og endre dette senere!',\n    'WELCOME_SUBTITLE_EN': 'To provide you with relevant information, we need to know which group you belong to. You can go back and change this later!',\n    'GROUP_PLACEHOLDER_NO': 'Velg gruppe...',\n    'GROUP_PLACEHOLDER_EN': 'Select group...',\n    'WELCOME_SCREEN_BUTTON_LABEL_NO': 'Jeg er klar',\n    'WELCOME_SCREEN_BUTTON_LABEL_EN': 'I\\'m ready',\n    \n    /** Form error labels **/\n    'ERROR_TITLE_NO_NO': 'Du må fylle inn norsk tittel',\n    'ERROR_TITLE_EN_NO': 'Du må fylle inn engelsk tittel',\n    'ERROR_DAY_NO': 'Du må velge en dag',\n    'ERROR_START_TIME_NO': 'Velg starttidspunkt (hh:mm)',\n    'ERROR_END_TIME_NO': 'Fyll ut hele sluttidspunktet',\n    'ERROR_DESC_NO_NO': 'Du må fylle inn norsk beskrivelse',\n    'ERROR_DESC_EN_NO': 'Du må fylle inn engelsk beskrivelse',\n    'ERROR_GROUPS_NO': 'Du må velge gruppe(r) arrangementet gjelder for',\n    'ERROR_LINK_NO': 'Du kan ikke ha lenketekst uten lenke',\n\n    /** PHONE **/\n    'EMERGENCY_PHONE_NUMBER_NO': 'Vakttelefon',\n    'EMERGENCY_PHONE_NUMBER_EN': 'Mentor board',\n    'PHONE_NUMBER_NO': '404 66 599',\n    'PHONE_NUMBER_EN': '404 66 599'\n}\n\nconst selectResource = (label, lang) => {\n    const key = `${label}_${lang}`;\n    if (key in textResources) \n        return textResources[key]\n    else \n        return label\n}\n\nexport default (label, state) => {\n    if (!state || !state.lang) {\n        return selectResource(label, 'NO')\n    }\n    else {\n        return selectResource(label, state.lang)\n    }  \n}","import React, { useState, useContext } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faChevronRight  } from '@fortawesome/free-solid-svg-icons';\nimport { AppContext } from './App';\nimport resource from './textResources';\nimport Select from 'react-select';\n\nconst WelcomeScreen = ({ group, setGroup, setCookie, groupNames }) => {\n    const [ state ] = useContext(AppContext);\n    const [ selected, setSelected ] = useState(group);\n    const lang = state.lang ? state.lang : 'NO'\n    const groups = groupNames \n        ? groupNames.map(\n            ({ id, label_nor, label_eng }) => (\n                {   value: id, \n                    label: lang === 'NO' ? label_nor : label_eng,\n                    label_nor: label_nor, \n                    label_eng: label_eng })\n                ).sort((a, b) => parseInt(a.value) - parseInt(b.value)) \n        : [];\n    \n    const submit = () => {\n        if (selected) {\n            var oneWeek = new Date();\n            oneWeek.setDate(oneWeek.getDate() + 7);\n\n            setGroup(selected);\n            setCookie('group', selected, { path: '/', expires: oneWeek});\n        }\n    }\n\n    const customStyles = {\n        container: provided => ({\n                ...provided,\n                width: '100%',\n                marginBottom: 20,\n        }),\n        option: provided => ({\n            ...provided,\n            fontSize: '0.8rem',\n        }),\n        menu: provided => ({\n            ...provided,\n            marginTop: 0,\n        })\n    }\n\n    const currentSelectedLabel = selected && { label: (lang === 'NO' ? selected.label_nor : selected.label_eng) };\n    const header = resource('WELCOME', state);\n    const subtitle = resource('WELCOME_SUBTITLE', state);\n    const placeholder = resource('GROUP_PLACEHOLDER', state);\n    const buttonLabel = resource('WELCOME_SCREEN_BUTTON_LABEL', state);\n\n    return (\n        <div className=\"welcome-screen\">\n            <div>\n                <h1 className=\"welcome-screen-main-title\"> { header } </h1>\n                <h3 className=\"welcome-screen-sub-title\"> { subtitle } </h3>\n            </div>\n            <img className=\"person-img\" src=\"https://image.flaticon.com/icons/svg/145/145867.svg\" alt=\"person\" />\n            <div className=\"dropdown-wrapper\">\n                <Select \n                    inputProps={{ readOnly:true }}\n                    placeholder={ placeholder } \n                    styles={ customStyles } \n                    value={ currentSelectedLabel } \n                    onChange={(v) => setSelected(v)} \n                    options={ groups } \n                    isSearchable={ false }\n                    isDisabled={groups.length === 0}\n                />\n                <div className=\"ready-button\" onClick={submit}>\n                    <p className=\"ready-button-text\"> { buttonLabel } <FontAwesomeIcon icon={faChevronRight} /> </p>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default WelcomeScreen;","import React from 'react';\n\nconst NavBarButton = ({target: { id, NO, EN }, lang, callback, selected}) => {\n    const iconColor = selected ? 'navbar-selected' : '';\n    const day = lang === 'NO' ? NO : EN;\n    \n    return (\n        <div className=\"navbar-button\" onClick={() => callback(id)}>\n            <div className={`${iconColor} navbar-button-icon`} />\n            <label> { day.substring(0,3) } </label>\n        </div>\n    );\n};\n\nexport default NavBarButton;","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport * as RegularIcons from '@fortawesome/free-regular-svg-icons';\nimport * as SolidIcons from '@fortawesome/free-solid-svg-icons';\n\nconst IconLabel = ({icon, label, link}) => {\n    const mappedIcon = icon in RegularIcons ? RegularIcons[icon] : SolidIcons[icon];\n\n    return (\n        <div className=\"icon-label-wrapper\">\n            <FontAwesomeIcon className=\"event-icon\" icon={mappedIcon} />\n            { !link && <label className=\"event-icon-label\"> { label } </label> }\n            { link && <a className=\"icon-link event-icon-label\" href={link}> { label } </a>}\n        </div>\n    );\n};\n\nexport default IconLabel;","export const weekdays = [ \n    { id: 0, NO: 'mandag', EN: 'monday' },\n    { id: 1, NO: 'tirsdag', EN: 'tuesday' },\n    { id: 2, NO: 'onsdag', EN: 'wednesday' },\n    { id: 3, NO: 'torsdag', EN: 'thursday' },\n    { id: 4, NO: 'fredag', EN: 'friday' },\n    { id: 5, NO: 'lørdag', EN: 'saturday' },\n    { id: 6, NO: 'søndag', EN: 'sunday' }\n];\n\nexport const translateDayIdx = day => {\n    for (const { id, NO, EN } of weekdays) {\n        if (day === NO || day === EN) \n            return id;\n    }\n    \n    console.error(`Error: Could not translate day ${day} to index`);\n    return -1;\n}\n\nexport const translateDay = day => {\n    switch(day) {\n        case 'mandag': return 'monday';\n        case 'tirsdag': return 'tuesday';\n        case 'onsdag': return 'wednesday';\n        case 'torsdag': return 'thursday';\n        case 'fredag': return 'friday';\n        case 'lørdag': return 'saturday';\n        case 'søndag': return 'sunday';\n        default: return day;\n    }\n}\n\nexport const eventTimeComparator = (a, b) => {\n    if (!a.start_time && !b.start_time) return 0;\n    if (!a.start_time) return -1;\n    if (!b.start_time) return 1;\n\n    if (a.start_time === b.start_time) {\n        if (a.end_time && !b.end_time) return -1;\n        else if (!a.end_time && b.end_time) return 1;\n        else if (!a.end_time && !b.end_time) return 0;\n        else return a.end_time > b.end_time ? 1 : (a.end_time < b.end_time ? -1 : 0);\n    } else {\n        return a.start_time > b.start_time ? 1 : -1;\n    }\n}\n\nexport const groupComparator = (a, b) => {\n    if (a === b) return 0;\n    if (a === 'all') return -1;\n    if (b === 'all') return 1;\n    return parseInt(a) - parseInt(b);\n}\n\nexport const dayToday = () => {\n    const day = new Date().getDay() - 1;\n    return day === -1 ? 6 : day;\n}\n\nexport const selectField = (event, field, lang) => {\n    const language = lang ? lang : 'NO';\n    const key = `${field}_${language}`\n\n    if (!event[key]) return '';\n    else if (field === 'from') return `${language === 'NO' ? 'Fra' : 'From'} ${event[key]}`\n    else return event[key];\n}\n\nexport const selectTime = ({ start_time, end_time }) => {\n    if (!start_time) return '';\n    if (!end_time) return start_time;\n\n    return `${start_time} – ${end_time}`;\n}\n\nexport const selectGroups = ({ groups }, lang) => {\n    const language = lang ? lang : 'NO';\n    if (groups.indexOf('all') >= 0) return language === 'NO' ? 'Alle grupper' : 'All groups';\n    \n    const prefix = language === 'NO' ? 'Gruppe ' : 'Group ';\n    return `${prefix} ${groups.join(', ')}`;   \n}","import React, { useContext, useState } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport * as SolidIcons from '@fortawesome/free-solid-svg-icons';\nimport IconLabel from './IconLabel';\nimport { AppContext } from '../App';\nimport { eventTimeComparator, selectField, selectTime, selectGroups } from '../utils';\nimport './event.scss';\n\n/****************************/\n/**** SubEvent component ****/\n/****************************/\nconst SubEvent = ({ event, event: { google_maps }, lang }) => {\n    const showUrl = google_maps && google_maps.startsWith('https');\n\n    return (\n        <div className=\"sub-event\">\n            <div className=\"sub-event-time-and-title\">\n                <p className=\"sub-event-time\"> { selectTime(event) } </p>\n                <p className=\"sub-event-title\"> { selectField(event, 'title', lang ) } </p>\n            </div>\n            { showUrl && <a className=\"sub-event-address\" href={google_maps}> { lang === 'NO' ? '(kart)' : '(map)' } </a> }\n        </div>\n    );\n}\n\n/*****************************/\n/****** Event component ******/\n/*****************************/\nconst Event = ({ data }) => {\n    const event = data;\n    const [ open, setOpen ] = useState(true);\n    const [ state ] = useContext(AppContext);\n    const lang = state.lang;\n    const title = selectField(event, 'title', lang);\n    const description = selectField(event, 'desc', lang);\n    const from = selectField(event, 'from', lang)\n    const time = selectTime(event);\n    const groups = selectGroups(event, lang);\n    const address = data.address;\n    const googleMaps = data.google_maps;\n    const link = data.link;\n    const linkText = selectField(event, 'linkText', lang);\n    const chevron = open ? SolidIcons[\"faChevronUp\"] : SolidIcons[\"faChevronDown\"];\n\n    return (\n        <div className=\"event-wrapper\">\n            <div className=\"event\">\n                <label className=\"event-title\"> { title } </label>\n                { time && <IconLabel icon=\"faClock\" label={time} />}\n                { open && address && <IconLabel icon=\"faMap\" label={address} link={googleMaps ? googleMaps : null}/> }\n                { open && data.groups && <IconLabel icon=\"faUser\" label={groups} /> }\n                { open && from && <IconLabel icon=\"faComment\" label={from} /> }\n                { open && link && linkText && <IconLabel icon=\"faLink\" label={linkText} link={link}/> }\n                { open && description && <p className=\"event-description\"> { description } </p> }\n                { open && event.subEvents && event.subEvents.length > 0 && ( \n                    <div className=\"sub-event-wrapper\">\n                        { event.subEvents\n                            .sort(eventTimeComparator)\n                            .map(e => <SubEvent key={`${e.parent_event_id}-${e.title_NO}`} event={e} lang={lang}/>) }\n                    </div>\n                )}\n                <div className=\"event-chevron\" onClick={() => setOpen(!open)}>\n                    <FontAwesomeIcon icon={chevron} />\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Event;","import React, { useState, useContext, useRef } from 'react';\nimport NavBarButton from './NavBarButton';\nimport { AppContext } from '../App';\nimport Event from './Event';\nimport resource from '../textResources';\nimport Skeleton from 'react-loading-skeleton';\nimport { weekdays, translateDayIdx, dayToday, eventTimeComparator} from '../utils'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPhone } from '@fortawesome/free-solid-svg-icons';\nimport teknaLogo from './tekna-logo.jpg';\nimport './Mainscreen.scss';\n\nconst noisyWidth = baseWidth => baseWidth + (-10) + Math.random()*25\n\nconst skeleton = (\n    <div className=\"skeleton-wrapper\">\n        <Skeleton key={'skel-1'} height={24} width={noisyWidth(170)}/>\n        <div className=\"icon-label-skeletons\">\n            <Skeleton key={'skel-2'} height={13} width={noisyWidth(110)}/>\n            <Skeleton key={'skel-3'} height={13} width={noisyWidth(210)}/>\n            <Skeleton key={'skel-4'} height={13} width={noisyWidth(100)}/>\n            <Skeleton key={'skel-5'} height={13} width={noisyWidth(155)}/>\n        </div>,\n        <Skeleton key={'skel-6'} height={13} width={noisyWidth(275)} count={3} />\n    </div>\n)\n\nconst eventForGroupFilter = (event, group) => {\n    if (!group || !group.value) return false; //If group is not set, show no events.\n    if (!event.groups || event.groups.indexOf('all') >= 0) return true;\n    return event.groups.indexOf(group.value) >= 0; \n}\n\nconst MainScreen = ({ group, events }) => {\n    const [ day, setDay ] = useState(dayToday())\n    const [ state ] = useContext(AppContext);\n    const TEKNA_DAY = 4; // friday\n    const scrollRef = useRef();\n    const eventList = events\n        ? events\n            .filter(e => translateDayIdx(e.day_NO) === day)\n            .filter(e => eventForGroupFilter(e, group))\n            .sort(eventTimeComparator)\n            .map(e => <Event key={e.id} data={e} />)\n        : <> { skeleton } { skeleton } </>;\n\n    const navBarButtons = weekdays.map(\n        el => <NavBarButton key={el.NO} lang={state.lang} target={el} callback={(day) => { setDay(day); scrollRef.current.scrollTop = 0; }} selected={day === el.id} />\n    )\n\n    return (\n        <div className=\"mainscreen-wrapper\">\n            <a href=\"tel:004740466599\" className=\"sticky-side-button\">\n                <FontAwesomeIcon className=\"phone-icon\" icon={faPhone} />\n                <div className=\"phonenumber-container\">\n                    <span> {resource('EMERGENCY_PHONE_NUMBER', state)} </span>\n                    <span className=\"phone-number\"> {resource('PHONE_NUMBER', state)} </span>\n                </div>\n            </a>\n            <div className=\"mainscreen-header\"> \n                { <div className=\"tekna-container\"> { day === TEKNA_DAY && <img className=\"header-tekna-logo\" src={teknaLogo} alt=\"Tekna logo\" /> } </div> }\n                { <label> { state.lang === 'NO' ? group.label_nor : group.label_eng } </label> }\n            </div>\n            <div className=\"mainscreen-event-container\" ref={scrollRef}>\n                { eventList }\n                { day === TEKNA_DAY && <img className=\"event-list-tekna-logo\" src={teknaLogo} alt=\"Tekna logo\"/>}\n                <div className=\"margin-bottom-XXL mobile-only\"></div>\n            </div>\n            <div className=\"mainscreen-navbar-container\">\n                { navBarButtons }\n            </div>\n        </div>\n    );\n};\n\nexport default MainScreen;","import React from 'react';\n\nconst SelectLanguage = ({ state: { lang }, changeLanguage, position }) => {\n    const NO_class = lang === 'NO' ? 'selected-lang' : '';\n    const EN_class = lang === 'EN' ? 'selected-lang' : '';\n\n    return (\n        <div className={`${position !== 'relative' ? 'language-pos-absolute' : ''} language-select`} onClick={changeLanguage}>\n            <p className={NO_class}> NO </p> <p>|</p> <p className={EN_class}> EN </p>\n        </div>\n    );\n};\n\nexport default SelectLanguage;","import React, { useState, useEffect } from 'react';\nimport { useCookies } from 'react-cookie';\nimport WelcomeScreen from './WelcomeScreen';\nimport MainScreen from './Mainscreen/MainScreen';\nimport SelectLanguage from './SelectLanguage';\nimport './App.scss';\n\nconst AppContext = React.createContext();\n\nfunction App(props) {\n  const { firestore } = props;\n  const [ cookies, setCookie, removeCookie ] = useCookies(['group', 'language']);\n  const [ group, setGroup ] = useState(cookies.group)\n  const [ events, setEvents ] = useState([])\n  const [ subEvents, setSubEvents ] = useState([])\n  const [ groupNames, setGroupNames ] = useState([])\n  const [ state, setState ] = useState({ lang: cookies.language ? cookies.language : 'NO' });\n  const changeLanguage = () => {\n    const newLang = state.lang === 'NO' ? 'EN' : 'NO';\n    setCookie('language', newLang)\n    setState({ ...state, lang: newLang });\n  }\n\n  useEffect(() => {\n    firestore.fetchEvents(setEvents);\n    firestore.fetchSubEvents(setSubEvents);\n    firestore.fetchGroupNames(setGroupNames)\n  }, [firestore, setEvents, setGroupNames])\n\n  const eventsWithSubevents = events.map(e => ({ ...e, subEvents: subEvents.filter(s => s.parent_event_id === e.id)}));\n  \n  return (\n    <AppContext.Provider value={[ state, setState ]}>\n      <div className=\"app\">\n        {  <SelectLanguage state={state} changeLanguage={changeLanguage} /> }\n        { !group && <WelcomeScreen groupNames={groupNames} setGroup={setGroup} setCookie={setCookie} /> }\n        { group && <MainScreen events={eventsWithSubevents} group={group} setGroup={setGroup} removeCookie={removeCookie}/> }\n      </div>\n    </AppContext.Provider>\n  );\n}\n\nexport { AppContext };\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { useState, useEffect } from 'react';\nimport { Form, Button } from 'semantic-ui-react';\nimport './loginScreen.scss';\n\nconst LoginScreen = ({ firestore }) => {\n    const [ email, setEmail ] = useState('');\n    const [ password, setPassword ] = useState('');\n    const [ error, setError ] = useState('');\n\n    useEffect(() => {\n        window.scrollTo(0,0);\n    });\n\n    const handleInput = (event, callback) => {\n        callback(event.target.value);\n    }\n\n    const handleLoginError = ({ code }) => {\n        if (code === 'auth/user-not-found') {\n            setError(\"Denne brukeren finnes ikke. Prøv igjen!\")\n        }\n    }\n\n    const handleSubmit = () => {\n        setError('');\n        \n        if (email && password) {\n            firestore.login(email, password, handleLoginError);\n        } else {\n            setError('Fyll inn brukernavn og passord!');\n        }\n    }\n\n    return (\n        <div className=\"login-screen\">\n            <Form className=\"login-form\">\n                { error && <label className=\"login-error-label\"> { error } </label> }\n                <Form.Field>\n                    <label> Epost </label>\n                    <input \n                        value={email} \n                        onChange={e => handleInput(e, setEmail)} \n                        type=\"email\"\n                        autoComplete=\"email\"\n                        />\n                </Form.Field>\n                <Form.Field>\n                    <label> Passord </label>\n                    <input \n                        value={password} \n                        onChange={e => handleInput(e, setPassword)} \n                        type=\"password\"\n                        autoComplete=\"current-password\" \n                        />\n                </Form.Field>\n                <Button className=\"login-button\" onClick={handleSubmit}> Logg inn </Button>\n            </Form>\n        </div>\n    );\n};\n\nexport default LoginScreen;\n","import React, { useState } from 'react';\nimport { selectField, selectTime, selectGroups } from '../Frontend/utils';\nimport SelectLanguage from '../Frontend/SelectLanguage';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCheck, faTimes, faTrashAlt, faPen  } from '@fortawesome/free-solid-svg-icons';\n\nconst CheckLabel = ({ check, label }) => {\n    const icon = check ? faCheck : faTimes;\n    const cx = [ 'check-label-wrapper', check ? 'check-green' : 'times-red'].join(' ')\n\n    return (\n        <div className={cx}>\n            <FontAwesomeIcon icon={icon} />\n            <label> { label } </label>\n        </div>\n    );\n}\n\nconst EditableEvent = ({ event, canManage, deleteCallback, editCallback }) => {\n    let [ lang, setLang ] = useState('NO');\n    const changeLanguage = () => setLang(lang === 'NO' ? 'EN' : 'NO')\n    \n    const title = selectField(event, 'title', lang) ? selectField(event, 'title', lang) : `Tittel mangler (${lang})`\n    const time = selectTime(event);\n    const groups = selectGroups(event, lang);\n    const allFieldsEnglish = event.title_EN && event.from_EN && event.day_EN && event.desc_EN;\n    const hasAddress = event.address && event.address.length > 0;\n    const hasGoogleMaps = event.google_maps && event.google_maps.startsWith('https');\n\n    return (\n        <div className='editable-event-wrapper'>\n            <div className='title-language-wrapper'>\n                <label className='editable-event-title'>{ title }</label>\n                <SelectLanguage state={{lang: lang}} changeLanguage={changeLanguage} position='relative'/>\n            </div>\n            <label className='editable-event-info-label'>{ groups }</label>\n            <label className='editable-event-info-label'>{ time }</label>\n            { event.address && <label className='editable-event-info-label'> Addresse: { event.address }</label> }\n            <div className='flex-row'>\n                { hasAddress && <CheckLabel check={hasGoogleMaps} label={hasGoogleMaps ? 'Har google maps' : 'Mangler google maps'} /> }\n                { !hasAddress && <CheckLabel check={hasAddress} label='Mangler adresse' /> }\n                { !allFieldsEnglish && <CheckLabel check={allFieldsEnglish} label='Mangler oversettelse' /> }\n                { canManage && <FontAwesomeIcon className=\"trash-icon\" icon={faTrashAlt} onClick={() => deleteCallback(event.id) } /> } \n                { canManage && <FontAwesomeIcon className=\"pen-icon\" icon={faPen} onClick={() => editCallback(event.id) } /> } \n            </div>\n        </div>\n    );\n};\n\nexport default EditableEvent;","import { eventTimeComparator } from \"../Frontend/utils\";\n\nexport const eventFilter = (group, e) => {\n    if (e.groups.indexOf('all') >= 0 || group === 'all') return true;\n\n    for (const g1 of group) {\n        for (const g2 of e.groups) {\n            if (g1 === g2) return true;\n        }\n    }\n}\n\nexport const weekdays_NO = ['mandag', 'tirsdag', 'onsdag', 'torsdag', 'fredag', 'lørdag', 'søndag'];\n\nexport const groupEventsByDay = events => {\n    const grouped = {}\n    weekdays_NO.forEach(day => grouped[day] = [])\n    events.forEach(e => grouped[e.day_NO].push(e));\n    Object.keys(grouped).forEach(key => grouped[key].sort(eventTimeComparator));\n\n    return grouped;\n}\n\nexport const createAddressSuggestions = events => {\n    const suggestions = { }\n    events.forEach(e => {\n        if (e.title_NO && e.address && e.google_maps) {\n            suggestions[e.title_NO.toLowerCase()] = e.address;\n        }\n    })\n\n    return suggestions;\n}","import React from 'react';\nimport resource from '../Frontend/textResources';\n\nconst ErrorLabel = ({ textKey }) => {\n    return (\n        <div className=\"error-label\">\n            { resource(textKey) }\n        </div>\n    );\n};\n\nexport default ErrorLabel;    ","import React from 'react';\nimport { Form, Input } from 'semantic-ui-react';\nimport ErrorLabel from './ErrorLabel';\n\nconst TimeInput = ({ title, hour, setHour, minutes, setMinute, mandatory, error, containerStyle, minuteRef }) => {\n    return (\n        <div className={`${containerStyle} flex-column`}>\n            <div className=\"form-field-title\"> {title} {mandatory} </div>\n            { error && <ErrorLabel textKey={error} /> }\n            <div className=\"flex-row\">\n                <Form.Field error={error.length !== 0}>\n                    <Input \n                        className=\"time-input\"\n                        placeholder=\"00\"\n                        value={hour} \n                        onChange={setHour}\n                        type=\"text\"\n                        autoComplete=\"off\"\n                    />\n                </Form.Field>\n                <div className=\"time-separator flex-row align-center justify-center\">:</div>\n                <Form.Field error={error.length !== 0}>\n                    <Input \n                        ref={minuteRef}\n                        className=\"time-input\"\n                        placeholder=\"00\"\n                        value={minutes} \n                        onChange={setMinute}\n                        type=\"text\"\n                        autoComplete=\"off\"\n                    />\n                </Form.Field>\n            </div>\n        </div>\n    );\n};\n\nexport default TimeInput;","import React, { useState, useRef, useEffect } from 'react';\nimport { Button, Form, Input } from 'semantic-ui-react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTrashAlt  } from '@fortawesome/free-solid-svg-icons';\nimport TimeInput from './TimeInput';\nimport { eventTimeComparator } from '../Frontend/utils';\n\nconst CreateSubevents = ({ existingEvents, submitCallback, cancelCallback, deleteCallback, addressSuggestions }) => {\n    const [ addingNew, setAddingNew ] = useState(false);\n    const [ startTime, setStartTime ] = useState({hours: '', minutes: ''})\n    const [ endTime, setEndTime ] = useState({hours: '', minutes: ''})\n    const [ titleNO, setTitleNO ] = useState('')\n    const [ titleEN, setTitleEN ] = useState('')\n    const [ address, setAddress ] = useState('')\n    const [ errors, setErrors ] = useState({ startTime: false, endTime: false, titleNO: false, titleEN: false, address: false });\n    const [ googleMaps, setGoogleMaps ] = useState('')\n    const [ suggestedAddress, setSuggestedAddress ] = useState(undefined);\n\n    const startTimeMinuteRef = useRef();\n    const endTimeMinuteRef = useRef();\n\n    useEffect(() => {\n        window.scrollTo(0, 0);\n    }, [])\n\n    const handleTimeInput = (f, t, event) => {\n        const input = event.target.value;\n        for (const c of input.split('')) { if (c < '0' || c > '9') return }\n        if (input.length > 2 || parseInt(input) > (t === 'hours' ? 23 : 59)) return;\n\n        \n        if (f === 'start') {\n            setErrors({ ...errors, startTime: false })\n            if (t === 'hours') { if (input.length === 2) { startTimeMinuteRef.current.focus(); } setStartTime({ ...startTime, hours: input })}\n            if (t === 'minutes') { setStartTime({ ...startTime, minutes: input })}\n        } else {\n            setErrors({ ...errors, endTime: false })\n            if (t === 'hours') { if (input.length === 2) { endTimeMinuteRef.current.focus(); } setEndTime({ ...endTime, hours: input })}\n            if (t === 'minutes') { setEndTime({ ...endTime, minutes: input })}\n        }\n    }\n\n    const handleAddressInput = input => {\n        setAddress(input);\n\n        if (input.length >= 3) {\n            if (input.toLowerCase().indexOf('bergen') === -1) { \n                input = input + ', Bergen' \n           }\n   \n           setGoogleMaps(`https://www.google.com/maps/search/?api=1&query=${input}`);\n        } else {\n            setGoogleMaps('');\n        }\n    }\n\n    const handleFieldInput = (input, field) => {\n        if (field === 'title_NO') {\n            if (address.length === 0 && input.toLowerCase() in addressSuggestions) {\n                setSuggestedAddress(addressSuggestions[input.toLowerCase()]);\n            }\n            setTitleNO(input);\n            setErrors({ ...errors, titleNO: false });\n\n        } else if (field === 'title_EN') {\n            setTitleEN(input);\n            setErrors({ ...errors, titleEN: false });\n        }   \n    }\n\n    const blankOutForm = () => {\n        setTitleNO('');\n        setTitleEN('');\n        setStartTime({ hours: '', minutes: ''})\n        setEndTime({ hours: '', minutes: ''})\n        setAddress('')\n        setGoogleMaps('');\n        setErrors({ startTime: false, endTime: false, titleNO: false, titleEN: false, address: false });\n    }\n\n    const cancelAdding = () => {\n        setAddingNew(false);\n        blankOutForm();\n    }\n\n    const validate = () => {\n        const errors = { \n            titleNO: titleNO.length === 0,\n            titleEN: titleEN.length === 0,\n            startTime: startTime.hours.length !== 2 || startTime.minutes.length !== 2,\n            endTime: endTime.hours.length === 1 || (endTime.hours.length === 2 && endTime.minutes.length !== 2),\n            address: address.length > 0 && address.length < 3,\n         };\n\n         setErrors(errors);\n         return !Object.keys(errors).reduce((acc, key) => errors[key] || acc, false);\n    }\n\n    const validateAndSubmit = () => {\n        if (validate()) {\n            const event = {\n                title_NO: titleNO,\n                title_EN: titleEN,\n                start_time: `${startTime.hours}:${startTime.minutes}`,\n            };\n\n            if (address.length !== 0) { event.address = address; }\n            if (googleMaps.length !== 0) { event.google_maps = googleMaps; }\n            if (endTime.hours.length === 2 && endTime.minutes.length === 2) { event.end_time =  `${endTime.hours}:${endTime.minutes}`; }\n\n            submitCallback(event)\n            setAddingNew(false);\n            blankOutForm();\n        }\n    }\n\n    return (\n        <div className=\"flex-column align-center add-sub-event-wrapper\">\n            { existingEvents.sort(eventTimeComparator).map(e => (\n                <div key={e.id} className={`${addingNew ? 'mobile-excluded' : ''} margin-top-medium flex-row existing-subevent`}>\n                    <label className=\"margin-left-medium sub-event-time-label\"> { e.start_time } – { e.end_time } </label>\n                    <div className=\"margin-left-medium flex-column sub-event-title-wrapper\"> \n                        <label className=\"sub-event-title-label\"> NO: { e.title_NO } </label> \n                        <label className=\"sub-event-title-label\"> EN: { e.title_EN } </label> \n                    </div>\n                    <label className=\"sub-event-google-maps\"> { e.google_maps } </label>\n                    <FontAwesomeIcon className=\"sub-event-trash\" icon={faTrashAlt} onClick={() => deleteCallback(e.id)} />\n                </div>\n            ))}\n            \n            { !addingNew && <Button type='button' className=\"margin-top-large full-width\" onClick={cancelCallback}>\n                Tilbake\n            </Button>}\n            { !addingNew && <Button type='button' primary className=\"margin-top-small margin-bottom-large full-width\" onClick={() => { setAddingNew(true) }}> Legg til nytt event </Button> }\n            { addingNew && \n                <Form className=\"subevent-form\">\n                    <div className=\"flex-column margin-top-large\">\n                        <div className=\"flex-row\">\n                            <TimeInput \n                                title='Start'\n                                hour={startTime.hours}\n                                minutes={startTime.minutes}\n                                setHour={e => handleTimeInput('start', 'hours', e)}\n                                setMinute={e => handleTimeInput('start', 'minutes', e)}\n                                error={errors.startTime ? 'ERROR_START_TIME' : ''}\n                                mandatory={<span style={{ color: 'red' }}>*</span>}\n                                minuteRef={startTimeMinuteRef}\n                                />\n                            <TimeInput \n                                title='Slutt'\n                                hour={endTime.hours}\n                                minutes={endTime.minutes}\n                                setHour={e => handleTimeInput('end', 'hours', e)}\n                                setMinute={e => handleTimeInput('end', 'minutes', e)}\n                                containerStyle=\"margin-left-medium\"\n                                error={errors.endTime ? 'ERROR_END_TIME' : ''}\n                                minuteRef={endTimeMinuteRef}\n                            />\n                        </div>\n\n                        <Form.Field error={errors.titleNO}>\n                            <label className=\"form-field-title margin-top-large\"> Norsk tittel </label>\n                            <Input \n                                value={titleNO} \n                                onChange={e => { handleFieldInput(e.target.value, 'title_NO'); }} \n                                type=\"text\"\n                                autoComplete=\"off\"\n                            />\n                        </Form.Field>\n\n                        <Form.Field error={errors.titleEN}>\n                            <label className=\"form-field-title margin-top-small\"> Engelsk tittel </label>\n                            <Input \n                                value={titleEN} \n                                onChange={e => { handleFieldInput(e.target.value, 'title_EN'); }} \n                                type=\"text\"x\n                                autoComplete=\"off\"\n                            />\n                        </Form.Field>\n\n                        <Form.Field error={errors.address}>\n                            <label className=\"form-field-title margin-top-large\"> Adresse </label>\n                            { suggestedAddress && <label style={{color: 'blue', textDecoration: 'underline'}} onClick={() => { handleAddressInput(suggestedAddress); setSuggestedAddress(undefined); }}> Bruk foreslått adresse: {suggestedAddress} </label>}\n                            <Input \n                                value={address} \n                                onChange={e => { handleAddressInput(e.target.value); setErrors({ ...errors, address: false }) }} \n                                type=\"text\"\n                                autoComplete=\"off\"\n                            />\n                            { googleMaps &&  <Button className=\"test-link-button\" type='button' primary onClick={() => window.open(googleMaps, '_blank')}> Test lenke </Button> }\n                        </Form.Field>\n                        <Button type='button' secondary className=\"margin-top-small\" onClick={cancelAdding}>\n                            Avbryt\n                        </Button>\n                        <Button type='submit' primary className=\"margin-top-small margin-bottom-large\" onClick={validateAndSubmit}>\n                            Ferdig\n                        </Button>\n                    </div>\n                </Form>\n            }\n        </div>\n    );\n};\n\nexport default CreateSubevents;","import React, { useState, useRef, useEffect } from 'react';\nimport { Form, TextArea, Button, Input, Checkbox } from 'semantic-ui-react';\nimport { translateDay, groupComparator } from '../Frontend/utils';\nimport ErrorLabel from './ErrorLabel';\nimport CreateSubevents from './CreateSubevents';\nimport './createNewEvent.scss';\nimport TimeInput from './TimeInput';\n\nconst CreateNewEvent = ({ editing, existingEvent = {}, availableGroups, cancelCallback, submitCallback, updateCallback, submitSubeventCallback, deleteSubeventCallback, addressSuggestions }) => {\n    const { title_NO = '', title_EN = '', desc_NO = '', desc_EN = '', google_maps = '', start_time = '', end_time = '', day_NO = '', linkText_NO='', linkText_EN=''} = existingEvent;\n    const [ titleNO, setTitleNO ] = useState(title_NO);\n    const [ titleEN, setTitleEN ] = useState(title_EN);\n    const [ descNO, setDescNO ] = useState(desc_NO);\n    const [ descEN, setDescEN ] = useState(desc_EN);\n    const [ address, setAddress ] = useState(existingEvent.address ? existingEvent.address : '');\n    const [ googleMaps, setGoogleMaps ] = useState(google_maps);\n    const [ linkTextNO, setLinkTextNO ] = useState(linkText_NO);\n    const [ linkTextEN, setLinkTextEN ] = useState(linkText_EN);\n    const [ link, setLink ] = useState(existingEvent.link ? existingEvent.link : '');\n    const [ startTimeHour, setStartTimeHour ] = useState(start_time.length === 5 ? start_time.split(':')[0] : '')\n    const [ startTimeMinute, setStartTimeMinute ] = useState(start_time.length === 5 ? start_time.split(':')[1] : '')\n    const [ endTimeHour, setEndTimeHour ] = useState(end_time.length === 5 ? end_time.split(':')[0] : '')\n    const [ endTimeMinute, setEndTimeMinute ] = useState(end_time.length === 5 ? end_time.split(':')[1] : '')\n    const [ groups, setGroups ] = useState(existingEvent.groups ? existingEvent.groups : []);\n    const [ day, setDay ] = useState(day_NO)\n    const [ errors, setErrors ] = useState({ titleNO: false, titleEN: false, descNO: false, descEN: false, day: false, address: false, timeStart: false, timeEnd: false, groups: false })\n    const [ submitting, setSubmitting ] = useState(false);\n    const [ addSubevents, setAddSubevents ] = useState(false);\n\n    const startTimeMinuteRef = useRef(null);\n    const endTimeMinuteRef = useRef(null);\n\n    const redStar = <span style={{ color: 'red' } }>*</span>\n    const allGroupsSelected = groups.indexOf('all') >= 0;\n\n    useEffect(() => {\n        window.scrollTo(0,0);\n    }, [])\n\n    const generateGoogleMaps = input => {\n        if (input.length < 3) { setGoogleMaps(''); return; }\n        if (input.toLowerCase().indexOf('bergen') === -1) { \n             input = input + ', Bergen' \n        }\n\n        setGoogleMaps(`https://www.google.com/maps/search/?api=1&query=${input}`);\n    }\n\n    const setTime = (event, field) => {\n        const input = event.target.value;\n        for (const c of input.split('')) { if (c < '0' || c > '9') return }\n        const max = field === 'startTimeHour' || field === 'endTimeHour' ? 23 : 59;\n        if (input.length > 2 || parseInt(input) > max) return;\n\n        if (field === 'startTimeHour') { \n            if (input.length === 2) startTimeMinuteRef.current.focus();\n            setStartTimeHour(input);\n        }\n        if (field === 'startTimeMinute') setStartTimeMinute(input);\n        if (field === 'endTimeHour') {\n            if (input.length === 2) endTimeMinuteRef.current.focus();\n            setEndTimeHour(input);\n        }\n        if (field === 'endTimeMinute') setEndTimeMinute(input);\n    }\n\n    const handleCheckbox = group => {\n        setErrors({ ...errors, groups: false })\n        if (group === 'duplicate') {\n            if (groups.indexOf('duplicate') >= 0) {\n                setGroups([]);\n            } else {\n                setGroups(['duplicate']);\n            }\n        } else if (group === 'all' && groups.indexOf('all') === -1) { \n            setGroups(['all']);\n        } else if (groups.indexOf(group) >= 0) {\n            setGroups(groups.filter(g => g !== group));\n        } else if (groups.indexOf('all') === -1 && groups.indexOf('duplicate') === -1) {\n            setGroups([ group, ...groups ]);\n        }\n    }\n\n    const validateFieldsAndSetErrors = callback => {\n        const errs = {\n            titleNO: titleNO === '',\n            titleEN: titleEN === '',\n            descNO: descNO === '',\n            descEN: descEN === '',\n            timeStart: startTimeHour.length !== 2 || startTimeMinute.length !== 2,\n            timeEnd: endTimeHour !== '' && (endTimeHour.length !== 2 || endTimeMinute.length !== 2),\n            day: day === '' || ['mandag', 'tirsdag', 'onsdag', 'torsdag', 'fredag', 'lørdag', 'søndag'].indexOf(day) === -1,\n            link: (linkTextEN.length !== 0 || linkTextNO.length !== 0) && !link,\n            groups: groups.length === 0,\n        };\n\n        callback(errs);\n        return !Object.keys(errs).reduce((acc, key) => errs[key] || acc, false);\n    }\n\n    const submit = () => {\n        if (validateFieldsAndSetErrors(setErrors)) {\n            setSubmitting(true);\n            const isMentorBoard = availableGroups.indexOf('all') >= 0;\n            const event = {\n                title_NO: titleNO,\n                title_EN: titleEN,\n                desc_NO: descNO, \n                desc_EN: descEN,\n                day_NO: day,\n                day_EN: translateDay(day),\n                from_NO: isMentorBoard ? 'fadderstyret' : 'gruppeleder',\n                from_EN: isMentorBoard ? 'the mentor board' : 'group leader',\n                start_time: `${startTimeHour}:${startTimeMinute}`,\n                groups: groups.sort(groupComparator),\n            };\n\n            if (address.length >= 3) { event.address = address; }\n            if (endTimeHour.length === 2 && endTimeMinute.length === 2) { event.end_time = `${endTimeHour}:${endTimeMinute}` }\n            if (googleMaps && googleMaps.startsWith('https://')) { event.google_maps = googleMaps; }\n            if (link) {\n                event.link = link;\n                if (linkTextNO) event.linkText_NO = linkTextNO;\n                if (linkTextEN) event.linkText_EN = linkTextEN;\n            }\n            \n            if (editing) {\n                updateCallback({ ...event, id: existingEvent.id });\n            } else {\n                if (groups.indexOf('duplicate') >= 0) {\n                    availableGroups.forEach(g => {\n                        if (g !== 'all') {\n                            console.log({ ...event, groups: [g]})\n                            submitCallback({ ...event, groups: [g]});\n                        }\n                    });\n                } else {\n                    submitCallback(event);\n                }\n            }\n        }\n    }\n\n    const submitSubevent = e => {\n        if (existingEvent) {\n            submitSubeventCallback({ ...e, parent_event_id: existingEvent.id })\n        }\n    }\n\n    return (\n        <div className=\"flex-column create-event-wrapper\">\n            { addSubevents \n                ? <CreateSubevents \n                    existingEvents={existingEvent.subEvents ? existingEvent.subEvents : [] } \n                    submitCallback={submitSubevent} \n                    cancelCallback={() => setAddSubevents(false) } \n                    deleteCallback={deleteSubeventCallback} \n                    addressSuggestions={addressSuggestions}    \n                />\n                : (<React.Fragment>\n                    <div className=\"create-event-header\"> \n                        Legg til et nytt event. Felter merket med {redStar} er obligatoriske. \n                    </div>\n            <Form className=\"create-event-form\" onSubmit={submit} loading={!availableGroups || submitting}>\n\n                { /** TITTEL  **/ }\n                <Form.Group grouped className=\"form-input-group\">\n                    <label className=\"form-field-header\"> Tittel {redStar} </label>\n                    <Form.Field error={errors.titleNO}>\n                        <label className=\"form-field-title\"> Norsk </label>\n                        { errors.titleNO && <ErrorLabel textKey={'ERROR_TITLE_NO'} /> }\n                        <Input \n                            value={titleNO} \n                            onChange={e => { setTitleNO(e.target.value); setErrors({ ...errors, titleNO: false }) }} \n                            type=\"text\"\n                            autoComplete=\"off\"\n                        />\n                    </Form.Field>\n                    <Form.Field error={errors.titleEN}>\n                        <label className=\"form-field-title\"> Engelsk </label>\n                        { errors.titleEN && <ErrorLabel textKey={'ERROR_TITLE_EN'} /> }\n                        <input \n                            value={titleEN} \n                            onChange={e => { setTitleEN(e.target.value); setErrors({ ...errors, titleEN: false }) }}  \n                            type=\"text\"\n                            autoComplete=\"off\"\n                        />\n                    </Form.Field>\n                </Form.Group>\n\n                { /** DAG **/ }\n                <Form.Field error={errors.day}>\n                    <label className=\"form-field-header\"> Dag { redStar } </label>\n                    { errors.day && <ErrorLabel textKey={'ERROR_DAY'} /> }\n                    <Button.Group className=\"full-width\" >\n                        <Button primary={day === 'mandag'} type='button' onClick={() => { setDay('mandag'); setErrors({ ...errors, day: false }) }}> Man </Button>\n                        <Button primary={day === 'tirsdag'} type='button' onClick={() => { setDay('tirsdag'); setErrors({ ...errors, day: false }) }}> Tirs </Button>\n                        <Button primary={day === 'onsdag'} type='button' onClick={() => { setDay('onsdag'); setErrors({ ...errors, day: false })}}> Ons </Button>\n                    </Button.Group>\n                    <Button.Group className=\"full-width margin-top-small\">\n                        <Button primary={day === 'torsdag'} type='button' onClick={() => { setDay('torsdag'); setErrors({ ...errors, day: false })}}> Tors </Button>\n                        <Button primary={day === 'fredag'} type='button' onClick={() => { setDay('fredag'); setErrors({ ...errors, day: false })}}> Fre </Button>\n                        <Button primary={day === 'lørdag'} type='button' onClick={() => { setDay('lørdag'); setErrors({ ...errors, day: false })}}> Lør </Button>\n                    </Button.Group>\n                    <Button.Group className=\"full-width margin-top-small\">\n                        <Button primary={day === 'søndag'} type='button' onClick={() => { setDay('søndag'); setErrors({ ...errors, day: false })}}> Søndag </Button>\n                    </Button.Group>\n\n                </Form.Field>\n\n                { /** TID **/ }\n                <Form.Group grouped className=\"form-input-group\">\n                    <label className=\"form-field-header\"> Tid </label>\n                    <div className=\"flex-row\">\n                        <TimeInput\n                            title='Start'\n                            hour={startTimeHour}\n                            minutes={startTimeMinute}\n                            setHour={e => { setTime(e, 'startTimeHour'); setErrors({ ...errors, timeStart: false })} }\n                            setMinute={e => { setTime(e, 'startTimeMinute'); setErrors({ ...errors, timeStart: false })} }\n                            error={errors.timeStart ? 'ERROR_START_TIME' : ''}\n                            mandatory={redStar}\n                            minuteRef={startTimeMinuteRef}\n                        />\n                        <TimeInput\n                            title='End'\n                            hour={endTimeHour}\n                            minutes={endTimeMinute}\n                            setHour={e => { setTime(e, 'endTimeHour'); setErrors({ ...errors, timeEnd: false })} }\n                            setMinute={e => { setTime(e, 'endTimeMinute'); setErrors({ ...errors, timeEnd: false })} }\n                            error={errors.timeEnd ? 'ERROR_END_TIME' : ''}\n                            mandatory={false}\n                            containerStyle='margin-left-large'\n                            minuteRef={endTimeMinuteRef}\n\n                        />\n                    </div>\n                </Form.Group>\n\n                { /** BESKRIVELSE  **/ }\n                <Form.Group grouped className=\"form-input-group\">\n                    <label className=\"form-field-header\"> Beskrivelse {redStar} </label>\n                    <Form.Field error={errors.descNO}>\n                        <label className=\"form-field-title\"> Norsk </label>\n                        { errors.descNO && <ErrorLabel textKey={'ERROR_DESC_NO'} /> }\n                        <TextArea error={errors.desc} value={descNO}  onChange={e => { setDescNO(e.target.value); setErrors({ ...errors, descNO: false }) }}/>\n                    </Form.Field>\n                    <Form.Field error={errors.descEN}>\n                        <label className=\"form-field-title\"> Engelsk </label>\n                        { errors.descEN && <ErrorLabel textKey={'ERROR_DESC_EN'} /> }\n                        <TextArea error={errors.desc} value={descEN} onChange={e => { setDescEN(e.target.value); setErrors({ ...errors, descEN: false }) }}/>\n                    </Form.Field>\n                </Form.Group>\n\n                { /** STED  **/ }\n                <Form.Group grouped className=\"form-input-group\">\n                    <Form.Field>\n                        <label className=\"form-field-header\"> Adresse </label>\n                        <input \n                            value={address} \n                            onChange={e => {\n                                    setAddress(e.target.value);\n                                    if (googleMaps) { generateGoogleMaps(e.target.value); }\n                                }\n                            } \n                            type=\"text\"\n                            autoComplete=\"off\"\n                        />\n                    </Form.Field>\n                    { !googleMaps &&  \n                        <div className=\"flex-row align-center\">\n                            <Button\n                                type='button'\n                                disabled={address.length < 3}\n                                content={'Generer lenke til Google maps'} \n                                icon='map' labelPosition='left' \n                                onClick={() => generateGoogleMaps(address)} \n                                primary\n                            /> \n                        </div> \n                    }\n                    { googleMaps && \n                        <Button.Group className=\"margin-top-small\">\n                            <Button type='button' onClick={() => setGoogleMaps('')}>Fjern</Button>\n                            <Button.Or text='' />\n                            <Button type='button' primary onClick={() => window.open(googleMaps, '_blank')}> \n                                Test lenke\n                            </Button>\n                        </Button.Group> \n                    }\n                </Form.Group>\n\n                { /** LINK **/}\n                <Form.Group grouped className=\"form-input-group\">\n                    <label className=\"form-field-header\"> Lenke </label>\n                    <Form.Field>\n                        <label className=\"form-field-title\"> Norsk tekst som vises </label>\n                        <input \n                            value={linkTextNO} \n                            onChange={e => setLinkTextNO(e.target.value) } \n                            type=\"text\"\n                            autoComplete=\"off\"\n                        />\n                    </Form.Field>\n                    <Form.Field>\n                        <label className=\"form-field-title\"> Engelsk tekst som vises </label>\n                        <input \n                            value={linkTextEN} \n                            onChange={e => setLinkTextEN(e.target.value) } \n                            type=\"text\"\n                            autoComplete=\"off\"\n                        />\n                    </Form.Field>\n                    <Form.Field  error={errors.link}>\n                        <label className=\"form-field-title\"> Lenke </label>\n                        { errors.link && <ErrorLabel textKey={'ERROR_LINK'} /> }\n                        <input \n                            value={link} \n                            onChange={e => { setLink(e.target.value); setErrors({ ...errors, link: false }); }} \n                            type=\"text\"\n                            autoComplete=\"off\"\n                        />\n                    </Form.Field>\n                </Form.Group>\n\n                { /** GROUPS **/ }\n                <Form.Group grouped className=\"form-input-group\">\n                    <label className={'form-field-header'}> Gjelder for gruppe(r): {redStar} </label>\n                    { errors.groups && <ErrorLabel textKey={'ERROR_GROUPS'} /> }\n                    <Form.Field>\n                        { availableGroups.map(group => \n                            <Checkbox key={group} \n                                label={group === 'all' ? 'Alle grupper' : `Gruppe ${group}`}\n                                className={`group-checkbox ${group === 'all' ? 'full-width' : ''} ${errors.groups ? 'checkbox-error' : ''}`}\n                                onClick={() => handleCheckbox(group)}\n                                disabled={groups.indexOf('duplicate') >= 0 || (group !== 'all' && allGroupsSelected)}\n                                checked={groups.indexOf('duplicate') >= 0 || allGroupsSelected || groups.indexOf(group) >= 0}\n                            />)\n                        }\n                        { !editing && availableGroups.length >= 2 && <Checkbox\n                            label={`Dupliser event for ${ availableGroups.length === 2 ? 'begge' : 'alle'} ${availableGroups.indexOf('all') >= 0 ? availableGroups.length-1 : availableGroups.length} gruppene`}\n                            className='group-checkbox full-width margin-top-medium'\n                            onClick={() => handleCheckbox('duplicate')}\n                            checked={groups.indexOf('duplicate') >= 0}\n                            /> \n                        }\n                    </Form.Field>\n                </Form.Group>\n\n                { editing &&\n                    <Button type='button' onClick={() => { setAddSubevents(true) }} className=\"full-width margin-bottom-small margin-top-small\">\n                        Legg til hendelser\n                    </Button>\n                }\n\n                { /** SUBMIT **/ }\n                <Button type='button' onClick={() => cancelCallback()} className=\"full-width margin-bottom-small margin-top-medium\">\n                    Avbryt\n                </Button>\n                <Button primary type='submit' className=\"full-width margin-bottom-large\">\n                    { editing ? 'Lagre' : 'Ferdig' } \n                </Button>\n            </Form>\n            </React.Fragment>)\n            }\n        </div>\n    );\n};\n\nexport default CreateNewEvent;","import React, { useState, useEffect } from 'react';\nimport EditableEvent from './EditableEvent';\nimport { eventFilter, groupEventsByDay, weekdays_NO } from './utils';\nimport { Loader, Button, Radio } from 'semantic-ui-react';\nimport CreateNewEvent from './CreateNewEvent';\nimport Modal from 'react-modal';\nimport './eventManager.scss';\n\nModal.setAppElement('#root')\nModal.defaultStyles.overlay.backgroundColor = 'rgba(0,0,0,0.50)';\n\nconst AddEventButton = ({ handleClick }) => {\n    return <div className=\"add-event-button\" onClick={handleClick}><p>+</p></div>\n}\n\nconst EventManager = ({ user, events = [], addressSuggestions, firestore }) => {\n    const [ groups, setGroups ] = useState(undefined);\n    const [ createNew, setCreateNew ] = useState(false);\n    const [ editEvent, setEditEvent ] = useState(undefined);\n    const [ eventToBeDeleted, setEventToBeDeleted ] = useState(undefined);\n    const [ showOnly, setShowOnly ] = useState(undefined);\n    const [ filter, setFilter ] = useState(false);\n\n    useEffect(() => {\n        firestore.fetchGroupsThatUserAdministrates(user.uid, setGroups);\n    }, [firestore, user.uid]);\n\n    const filteredEvents = !groups ? [] : events.filter(e => (!showOnly || e.groups.indexOf(showOnly) >= 0) && eventFilter(groups, e));\n    const groupedEvents = groupEventsByDay(filteredEvents);\n    const logout = () => firestore.logout();\n\n    if (createNew || editEvent) {\n        return <CreateNewEvent \n                    existingEvent={events.filter(e => e.id === editEvent)[0]}\n                    editing={editEvent !== undefined}\n                    cancelCallback={() => { setCreateNew(false); setEditEvent(undefined); window.scrollTo(0,0); } } \n                    submitCallback={event => { \n                        firestore.addEvent(event, user.uid).then(setCreateNew(false)); \n                        window.scrollTo(0,0);\n                    }}\n                    submitSubeventCallback={event => {\n                        firestore.addSubEvent(event, user.uid);\n                    }}\n                    deleteSubeventCallback={event_id => {\n                        firestore.removeSubEvent(event_id);\n                    }}\n                    updateCallback={event => {\n                        firestore.updateEvent(event).then(setEditEvent(undefined));\n                        window.scrollTo(0,0);\n                    }}\n                    availableGroups={groups} \n                    addressSuggestions={addressSuggestions}\n                />\n    }\n\n    const deleteEvent = () => {\n        firestore.removeEvent(eventToBeDeleted); \n        setEventToBeDeleted(undefined);\n    }\n\n    const onKeyPress = event => {\n        if (event.key === 'Enter' && eventToBeDeleted) {\n            deleteEvent();\n        }\n    }\n\n    return (\n        <div className=\"event-manager-wrapper\" onKeyPress={onKeyPress}>\n            <Modal\n                isOpen={eventToBeDeleted !== undefined}\n                className=\"delete-event-modal\"\n            > \n                {eventToBeDeleted && \n                    <label>\n                        Er du sikker på at du vil slette <span className=\"font-bold\">{filteredEvents.filter(e => e.id === eventToBeDeleted)[0].title_NO}</span> ?\n                    </label>\n                }\n                <div className=\"full-width flex-row margin-top-large\">\n                    <Button secondary onClick={() => setEventToBeDeleted(undefined)}> Nei, gå tilbake </Button>\n                    <Button primary onClick={() => { deleteEvent(); }}> Ja, slett! </Button>\n                </div>\n            </Modal>\n\n            <Loader active={!groups} />\n            <div className=\"add-event-button-wrapper\">\n                <AddEventButton handleClick={() => setCreateNew(true) } />\n                { filter && <div className=\"event-filter-checkbox-wrapper margin-top-large\">\n                    <Radio\n                        label='Åpent for alle'\n                        className='filter-group-checkbox'\n                        onClick={() => setShowOnly('all')}\n                        checked={showOnly === 'all'}\n                    />\n                    { groups && groups.map(g =>  g === 'all' ? null : <Radio key={g} \n                                        checked={showOnly === g}\n                                        label={`Gruppe ${g}`}\n                                        onClick={() => setShowOnly(g)}\n                                        className='filter-group-checkbox'\n                                        /> )}\n                </div> }\n                { !filter && <Button type='button' className=\"margin-top-large margin-right-auto\" onClick={() => setFilter(true)}> Legg til filter </Button> }\n            </div>\n            { groups && events && weekdays_NO.map(day => {\n                const dayEvents = groupedEvents[day].map(e => \n                    <EditableEvent \n                        key={e.id} event={e} \n                        canManage={e.groups.reduce((acc, curr) => acc && groups.indexOf(curr) >= 0 ,true)} \n                        deleteCallback={(id) => setEventToBeDeleted(id)}\n                        editCallback={(id) => setEditEvent(id) } />\n                );\n                return (\n                    <div key={day} className=\"event-group\">\n                        <div className=\"event-group-day-label\"> { day } </div>\n                        { dayEvents }\n                    </div>\n                )\n            })}\n            <Button type='button' className=\"full-width margin-top-medium margin-bottom-large\" primary onClick={logout}> Logg ut </Button>            \n        </div>\n    );\n};\n\nexport default EventManager;","import React, { useState, useEffect } from 'react';\nimport LoginScreen from './LoginScreen';\nimport EventManager from './EventManager';\nimport { Loader, Dimmer } from 'semantic-ui-react';\nimport './backOffice.scss';\nimport { createAddressSuggestions } from './utils';\n\nconst BackOffice = ({ firestore }) => {\n    const [ events, setEvents ] = useState([]);\n    const [ subEvents, setSubEvents ] = useState([])\n    const [ user, setUser ] = useState(undefined);\n    const [ loadingUser, setLoadingUser ] = useState(true);\n\n\n    useEffect(() => {\n        firestore.fetchEvents(setEvents);\n        firestore.fetchSubEvents(setSubEvents);\n        firestore.registerForAuthUpdates(setUser, setLoadingUser);\n    }, [firestore])\n\n    const eventsWithSubEvents = events.length === 0 ? [] : events.map(e => ({ ...e, subEvents: subEvents.filter(s => s.parent_event_id === e.id)}));\n    const addressSuggestions = createAddressSuggestions(subEvents);\n\n    return (\n        <div className=\"back-office-wrapper\" id=\"app\">\n            <Dimmer active={loadingUser} ><Loader active={loadingUser} /></Dimmer>\n            { !loadingUser &&\n                <>\n                    <div className=\"back-office-header\"> Adminpanel </div>\n                    { !user && <LoginScreen firestore={firestore} /> }\n                    { user && <EventManager user={user} firestore={firestore} events={eventsWithSubEvents} addressSuggestions={addressSuggestions} /> }\n                </>\n            }\n        </div>\n    );\n};\n\nexport default BackOffice;","import app from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\nexport const config = {\n    apiKey: \"AIzaSyBz86p_Wdi_WBkLpcxhMaph4geiv69bcNc\",\n    authDomain: \"fadderuke-matnat.firebaseapp.com\",\n    databaseURL: \"https://fadderuke-matnat.firebaseio.com\",\n    projectId: \"fadderuke-matnat\",\n    storageBucket: \"fadderuke-matnat.appspot.com\",\n    messagingSenderId: \"909444728352\",\n    appId: \"1:909444728352:web:09ee2da490aafc00\"\n};\n\nclass Firebase {\n    constructor() {\n        app.initializeApp(config);\n        this.db = app.firestore();\n        this.auth = app.auth()\n    } \n\n    fetchEvents(setEventsCallback) {\n        this.db.collection('events').onSnapshot(snapshot => {\n            const events = snapshot.docs.map(doc => ({ id: doc.id, ...doc.data(), subEvents: [] }));\n            setEventsCallback(events);\n            console.log(\"Events fetched successfully!\");\n        })\n    }\n\n    fetchSubEvents(setSubeventsCallback) {\n        this.db.collection('subevents').onSnapshot(subSnapshot => {\n            setSubeventsCallback(subSnapshot.docs.map(d => ({ id: d.id, ...d.data() })));\n            console.log(\"Sub-events fetched successfully!\");\n        })\n    }\n\n    fetchGroupNames(setGroupNamesCallback) {\n        this.db.collection('groups').onSnapshot(snapshot => {\n            const groupNames = snapshot.docs.map(doc => {\n                return doc.data();\n            });\n            setGroupNamesCallback(groupNames)\n        }, console.log)\n    }\n\n    login(email, password, errorCallback) {\n        this.auth.signInWithEmailAndPassword(email, password).catch((error) => {\n            errorCallback(error);\n        });  \n    }\n\n    logout() {\n        this.auth.signOut();\n    }\n\n    registerForAuthUpdates(callback, loadingCallback) {\n\n        this.auth.onAuthStateChanged(user => {\n            if (user) {\n                callback(user);\n                loadingCallback(false);\n            } else {\n                callback(undefined);\n                loadingCallback(false);\n            }\n        })\n    }\n\n    fetchGroupsThatUserAdministrates(userId, callback) {\n        this.db.collection('writePermissions').doc(userId).get().then(doc => {\n            if (doc.exists) {\n                const groups = doc.data().groups;\n                if (groups === 'all') { callback(groups); }\n                else {\n                    callback(groups);    \n                }\n            }\n        })\n    }\n\n    addEvent(event, uid) {\n        if (event) {\n            return this.db.collection('events').add({...event, createdBy: uid });\n        }\n    }\n\n    removeEvent(event_id) {\n        if (event_id) {\n            return this.db.collection('events').doc(event_id).delete();\n        }\n    }\n\n    addSubEvent(event, uid) {\n        if (event) {\n            return this.db.collection('subevents').add({ ...event, createdBy: uid });\n        }\n    }\n\n    removeSubEvent(event_id) {\n        if (event_id) {\n            return this.db.collection('subevents').doc(event_id).delete();\n        }\n    }\n\n    updateEvent(event) {\n        if (event) {\n            return this.db.collection('events').doc(event.id).set(event);\n        }\n    }\n}\n\nexport default Firebase;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter as Router, Route } from 'react-router-dom';\nimport './index.css';\nimport App from './Frontend/App';\nimport * as serviceWorker from './serviceWorker';\nimport { CookiesProvider } from 'react-cookie';\nimport BackOffice from './BackOffice/BackOffice';\nimport Firebase from './Firestore';\n\nconst firestore = new Firebase();\n\nReactDOM.render(\n    <Router basename={process.env.PUBLIC_URL}>\n        <Route exact path=\"/admin\" component={() => <BackOffice firestore={firestore} />} />\n        <Route exact path=\"/\" render={() => <CookiesProvider> <App firestore={firestore}/> </CookiesProvider> } />\n    </Router>\n, document.getElementById('root'));\nserviceWorker.unregister();\n"],"sourceRoot":""}